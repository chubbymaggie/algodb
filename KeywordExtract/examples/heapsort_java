Token.Keyword.Declaration	u'public'
Token.Text	u' '
Token.Keyword.Declaration	u'static'
Token.Text	u' '
Token.Keyword.Type	u'void'
Token.Text	u' '
Token.Name.Function	u'heapSort'
Token.Operator	u'('
Token.Keyword.Type	u'int'
Token.Operator	u'['
Token.Operator	u']'
Token.Text	u' '
Token.Name	u'a'
Token.Operator	u')'
Token.Operator	u'{'
Token.Text	u'\n'
Token.Text	u'\t'
Token.Keyword.Type	u'int'
Token.Text	u' '
Token.Name	u'count'
Token.Text	u' '
Token.Operator	u'='
Token.Text	u' '
Token.Name	u'a'
Token.Operator	u'.'
Token.Name.Attribute	u'length'
Token.Operator	u';'
Token.Text	u'\n'
Token.Text	u' '
Token.Text	u'\n'
Token.Text	u'\t'
Token.Comment.Single	u'//first place a in max-heap order\n'
Token.Text	u'\t'
Token.Name	u'heapify'
Token.Operator	u'('
Token.Name	u'a'
Token.Operator	u','
Token.Text	u' '
Token.Name	u'count'
Token.Operator	u')'
Token.Operator	u';'
Token.Text	u'\n'
Token.Text	u' '
Token.Text	u'\n'
Token.Text	u'\t'
Token.Keyword.Type	u'int'
Token.Text	u' '
Token.Name	u'end'
Token.Text	u' '
Token.Operator	u'='
Token.Text	u' '
Token.Name	u'count'
Token.Text	u' '
Token.Operator	u'-'
Token.Text	u' '
Token.Literal.Number.Integer	u'1'
Token.Operator	u';'
Token.Text	u'\n'
Token.Text	u'\t'
Token.Keyword	u'while'
Token.Operator	u'('
Token.Name	u'end'
Token.Text	u' '
Token.Operator	u'>'
Token.Text	u' '
Token.Literal.Number.Integer	u'0'
Token.Operator	u')'
Token.Operator	u'{'
Token.Text	u'\n'
Token.Text	u'\t\t'
Token.Comment.Single	u'//swap the root(maximum value) of the heap with the\n'
Token.Text	u'\t\t'
Token.Comment.Single	u'//last element of the heap\n'
Token.Text	u'\t\t'
Token.Keyword.Type	u'int'
Token.Text	u' '
Token.Name	u'tmp'
Token.Text	u' '
Token.Operator	u'='
Token.Text	u' '
Token.Name	u'a'
Token.Operator	u'['
Token.Name	u'end'
Token.Operator	u']'
Token.Operator	u';'
Token.Text	u'\n'
Token.Text	u'\t\t'
Token.Name	u'a'
Token.Operator	u'['
Token.Name	u'end'
Token.Operator	u']'
Token.Text	u' '
Token.Operator	u'='
Token.Text	u' '
Token.Name	u'a'
Token.Operator	u'['
Token.Literal.Number.Integer	u'0'
Token.Operator	u']'
Token.Operator	u';'
Token.Text	u'\n'
Token.Text	u'\t\t'
Token.Name	u'a'
Token.Operator	u'['
Token.Literal.Number.Integer	u'0'
Token.Operator	u']'
Token.Text	u' '
Token.Operator	u'='
Token.Text	u' '
Token.Name	u'tmp'
Token.Operator	u';'
Token.Text	u'\n'
Token.Text	u'\t\t'
Token.Comment.Single	u'//put the heap back in max-heap order\n'
Token.Text	u'\t\t'
Token.Name	u'siftDown'
Token.Operator	u'('
Token.Name	u'a'
Token.Operator	u','
Token.Text	u' '
Token.Literal.Number.Integer	u'0'
Token.Operator	u','
Token.Text	u' '
Token.Name	u'end'
Token.Text	u' '
Token.Operator	u'-'
Token.Text	u' '
Token.Literal.Number.Integer	u'1'
Token.Operator	u')'
Token.Operator	u';'
Token.Text	u'\n'
Token.Text	u'\t\t'
Token.Comment.Single	u'//decrement the size of the heap so that the previous\n'
Token.Text	u'\t\t'
Token.Comment.Single	u'//max value will stay in its proper place\n'
Token.Text	u'\t\t'
Token.Name	u'end'
Token.Operator	u'-'
Token.Operator	u'-'
Token.Operator	u';'
Token.Text	u'\n'
Token.Text	u'\t'
Token.Operator	u'}'
Token.Text	u'\n'
Token.Operator	u'}'
Token.Text	u'\n'
Token.Text	u' '
Token.Text	u'\n'
Token.Keyword.Declaration	u'public'
Token.Text	u' '
Token.Keyword.Declaration	u'static'
Token.Text	u' '
Token.Keyword.Type	u'void'
Token.Text	u' '
Token.Name.Function	u'heapify'
Token.Operator	u'('
Token.Keyword.Type	u'int'
Token.Operator	u'['
Token.Operator	u']'
Token.Text	u' '
Token.Name	u'a'
Token.Operator	u','
Token.Text	u' '
Token.Keyword.Type	u'int'
Token.Text	u' '
Token.Name	u'count'
Token.Operator	u')'
Token.Operator	u'{'
Token.Text	u'\n'
Token.Text	u'\t'
Token.Comment.Single	u'//start is assigned the index in a of the last parent node\n'
Token.Text	u'\t'
Token.Keyword.Type	u'int'
Token.Text	u' '
Token.Name	u'start'
Token.Text	u' '
Token.Operator	u'='
Token.Text	u' '
Token.Operator	u'('
Token.Name	u'count'
Token.Text	u' '
Token.Operator	u'-'
Token.Text	u' '
Token.Literal.Number.Integer	u'2'
Token.Operator	u')'
Token.Text	u' '
Token.Operator	u'/'
Token.Text	u' '
Token.Literal.Number.Integer	u'2'
Token.Operator	u';'
Token.Text	u' '
Token.Comment.Single	u'//binary heap\n'
Token.Text	u' '
Token.Text	u'\n'
Token.Text	u'\t'
Token.Keyword	u'while'
Token.Operator	u'('
Token.Name	u'start'
Token.Text	u' '
Token.Operator	u'>'
Token.Operator	u'='
Token.Text	u' '
Token.Literal.Number.Integer	u'0'
Token.Operator	u')'
Token.Operator	u'{'
Token.Text	u'\n'
Token.Text	u'\t\t'
Token.Comment.Single	u'//sift down the node at index start to the proper place\n'
Token.Text	u'\t\t'
Token.Comment.Single	u'//such that all nodes below the start index are in heap\n'
Token.Text	u'\t\t'
Token.Comment.Single	u'//order\n'
Token.Text	u'\t\t'
Token.Name	u'siftDown'
Token.Operator	u'('
Token.Name	u'a'
Token.Operator	u','
Token.Text	u' '
Token.Name	u'start'
Token.Operator	u','
Token.Text	u' '
Token.Name	u'count'
Token.Text	u' '
Token.Operator	u'-'
Token.Text	u' '
Token.Literal.Number.Integer	u'1'
Token.Operator	u')'
Token.Operator	u';'
Token.Text	u'\n'
Token.Text	u'\t\t'
Token.Name	u'start'
Token.Operator	u'-'
Token.Operator	u'-'
Token.Operator	u';'
Token.Text	u'\n'
Token.Text	u'\t'
Token.Operator	u'}'
Token.Text	u'\n'
Token.Text	u'\t'
Token.Comment.Single	u'//after sifting down the root all nodes/elements are in heap order\n'
Token.Operator	u'}'
Token.Text	u'\n'
Token.Text	u' '
Token.Text	u'\n'
Token.Keyword.Declaration	u'public'
Token.Text	u' '
Token.Keyword.Declaration	u'static'
Token.Text	u' '
Token.Keyword.Type	u'void'
Token.Text	u' '
Token.Name.Function	u'siftDown'
Token.Operator	u'('
Token.Keyword.Type	u'int'
Token.Operator	u'['
Token.Operator	u']'
Token.Text	u' '
Token.Name	u'a'
Token.Operator	u','
Token.Text	u' '
Token.Keyword.Type	u'int'
Token.Text	u' '
Token.Name	u'start'
Token.Operator	u','
Token.Text	u' '
Token.Keyword.Type	u'int'
Token.Text	u' '
Token.Name	u'end'
Token.Operator	u')'
Token.Operator	u'{'
Token.Text	u'\n'
Token.Text	u'\t'
Token.Comment.Single	u'//end represents the limit of how far down the heap to sift\n'
Token.Text	u'\t'
Token.Keyword.Type	u'int'
Token.Text	u' '
Token.Name	u'root'
Token.Text	u' '
Token.Operator	u'='
Token.Text	u' '
Token.Name	u'start'
Token.Operator	u';'
Token.Text	u'\n'
Token.Text	u' '
Token.Text	u'\n'
Token.Text	u'\t'
Token.Keyword	u'while'
Token.Operator	u'('
Token.Operator	u'('
Token.Name	u'root'
Token.Text	u' '
Token.Operator	u'*'
Token.Text	u' '
Token.Literal.Number.Integer	u'2'
Token.Text	u' '
Token.Operator	u'+'
Token.Text	u' '
Token.Literal.Number.Integer	u'1'
Token.Operator	u')'
Token.Text	u' '
Token.Operator	u'<'
Token.Operator	u'='
Token.Text	u' '
Token.Name	u'end'
Token.Operator	u')'
Token.Operator	u'{'
Token.Text	u'      '
Token.Comment.Single	u'//While the root has at least one child\n'
Token.Text	u'\t\t'
Token.Keyword.Type	u'int'
Token.Text	u' '
Token.Name	u'child'
Token.Text	u' '
Token.Operator	u'='
Token.Text	u' '
Token.Name	u'root'
Token.Text	u' '
Token.Operator	u'*'
Token.Text	u' '
Token.Literal.Number.Integer	u'2'
Token.Text	u' '
Token.Operator	u'+'
Token.Text	u' '
Token.Literal.Number.Integer	u'1'
Token.Operator	u';'
Token.Text	u'           '
Token.Comment.Single	u'//root*2+1 points to the left child\n'
Token.Text	u'\t\t'
Token.Comment.Single	u"//if the child has a sibling and the child's value is less than its sibling's...\n"
Token.Text	u'\t\t'
Token.Keyword	u'if'
Token.Operator	u'('
Token.Name	u'child'
Token.Text	u' '
Token.Operator	u'+'
Token.Text	u' '
Token.Literal.Number.Integer	u'1'
Token.Text	u' '
Token.Operator	u'<'
Token.Operator	u'='
Token.Text	u' '
Token.Name	u'end'
Token.Text	u' '
Token.Operator	u'&'
Token.Operator	u'&'
Token.Text	u' '
Token.Name	u'a'
Token.Operator	u'['
Token.Name	u'child'
Token.Operator	u']'
Token.Text	u' '
Token.Operator	u'<'
Token.Text	u' '
Token.Name	u'a'
Token.Operator	u'['
Token.Name	u'child'
Token.Text	u' '
Token.Operator	u'+'
Token.Text	u' '
Token.Literal.Number.Integer	u'1'
Token.Operator	u']'
Token.Operator	u')'
Token.Text	u'\n'
Token.Text	u'\t\t\t'
Token.Name	u'child'
Token.Text	u' '
Token.Operator	u'='
Token.Text	u' '
Token.Name	u'child'
Token.Text	u' '
Token.Operator	u'+'
Token.Text	u' '
Token.Literal.Number.Integer	u'1'
Token.Operator	u';'
Token.Text	u'           '
Token.Comment.Single	u'//... then point to the right child instead\n'
Token.Text	u'\t\t'
Token.Keyword	u'if'
Token.Operator	u'('
Token.Name	u'a'
Token.Operator	u'['
Token.Name	u'root'
Token.Operator	u']'
Token.Text	u' '
Token.Operator	u'<'
Token.Text	u' '
Token.Name	u'a'
Token.Operator	u'['
Token.Name	u'child'
Token.Operator	u']'
Token.Operator	u')'
Token.Operator	u'{'
Token.Text	u'     '
Token.Comment.Single	u'//out of max-heap order\n'
Token.Text	u'\t\t\t'
Token.Keyword.Type	u'int'
Token.Text	u' '
Token.Name	u'tmp'
Token.Text	u' '
Token.Operator	u'='
Token.Text	u' '
Token.Name	u'a'
Token.Operator	u'['
Token.Name	u'root'
Token.Operator	u']'
Token.Operator	u';'
Token.Text	u'\n'
Token.Text	u'\t\t\t'
Token.Name	u'a'
Token.Operator	u'['
Token.Name	u'root'
Token.Operator	u']'
Token.Text	u' '
Token.Operator	u'='
Token.Text	u' '
Token.Name	u'a'
Token.Operator	u'['
Token.Name	u'child'
Token.Operator	u']'
Token.Operator	u';'
Token.Text	u'\n'
Token.Text	u'\t\t\t'
Token.Name	u'a'
Token.Operator	u'['
Token.Name	u'child'
Token.Operator	u']'
Token.Text	u' '
Token.Operator	u'='
Token.Text	u' '
Token.Name	u'tmp'
Token.Operator	u';'
Token.Text	u'\n'
Token.Text	u'\t\t\t'
Token.Name	u'root'
Token.Text	u' '
Token.Operator	u'='
Token.Text	u' '
Token.Name	u'child'
Token.Operator	u';'
Token.Text	u'                '
Token.Comment.Single	u'//repeat to continue sifting down the child now\n'
Token.Text	u'\t\t'
Token.Operator	u'}'
Token.Keyword	u'else'
Token.Text	u'\n'
Token.Text	u'\t\t\t'
Token.Keyword	u'return'
Token.Operator	u';'
Token.Text	u'\n'
Token.Text	u'\t'
Token.Operator	u'}'
Token.Text	u'\n'
Token.Operator	u'}'
Token.Text	u'\n'
