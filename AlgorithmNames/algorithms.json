[{"algo_id":14532,"object_id":"e0def7c6-f4fa-11e4-89ff-123a3b0693f5","username":"sfw","algoname":"NudityDetection","algolabel":"Nudity Detection","language":"python2-2","card_line":"This algorithm detects nudity in pictures.","summary":"<p>This algorithm detects nudity in pictures. It is based on the article: <a href=\"https://sites.google.com/a/dcs.upd.edu.ph/csp-proceedings/Home/pcsc-2005/AI4.pdf?attredirects=0\">An Algorithm for Nudity Detection</a>. The idea behind the algorithm is based primarily on observations that in general, nude images contain large amounts of skin, people have different skin tones, and skin <span>regions in nude images are relatively close to each other. In order to make the algorithm more robust, we have incorporated face detection for skin ratio tweaking and skin color detection for limiting the generic skin color value interval. The limits that decide on the skin regions are based on the values in RGB, HSV and normalized RGB color spaces in the book <a href=\"https://books.google.com/books?id=hcbHBAAAQBAJ&amp;pg=PA35\">Human Computer Interaction Using Hand Gestures</a> by Prashan Premaratne, derived from multiple papers as described in the book.</span></p><p><span></span></p>","submitted_at":1442345997000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":2890014},{"algo_id":14836,"object_id":"69ffab2e-0566-11e5-89ff-123a3b0693f5","username":"web","algoname":"GetRecommendations","algolabel":"Get Recommendations","language":"java3","card_line":"This algorithm provides page recommendations for a domain.","summary":"<p>This algorithm provides page recommendations for a domain. It is primarily geared for use with <a href=\"https://algorithmia.com/recommends\">the Algorithmia recommendation system</a>, which provides more specificity, but can be used independently of this as well.</p><p>It takes as input a url and a required string. Only urls whose source contains the required string will be considered as recommendations. Note that the page source itself is inspected, not just the user-readable text. Examples include long UUIDs embedded in the page's java script, or simply the empty string &#34;&#34; to consider every page. Get Recommendations maintains a permanent algorithm collection (see <a href=\"https://algorithmia.com/docs/data/\">the documentation</a>). When a url is sent to it, it checks to see if any url from the same domain has ever been sent. If not, the domain is explored, for 200 urls or 2 minutes, whichever comes first, using <a href=\"https://algorithmia.com/algorithms/web/BreadthFirstSiteMap\" style=\"color: rgb(153, 99, 255);background-color: rgb(255, 255, 255);\">/web/BreadthFirstSiteMap</a> and filtering for urls containing the required string. These urls are processed into recommendations as described below.</p><p>It also takes an optional third integer parameter, which dictates how many months in the past (relative to a given page) will be considered for recommendation. For example, if the parameter is 24, no page that is more than 24 months older than a given page will be recommended. Note however that recommendations are always being updated as new pages are added, and for any given page, anything published more recently than it is eligible as a recommendation assuming some nonzero similarity. If this parameter is not supplied or is equal to -1, all pages will be considered.</p><p>For each explored domain, the algorithm maintains a word count summary for each url and for the domain as a whole. For every new url in an existing domain, it scrapes the url for content using <a href=\"https://algorithmia.com/algorithms/web/AnalyzeURL\" style=\"color: rgb(153, 99, 255);background-color: rgb(255, 255, 255);\">/web/AnalyzeURL</a>, processes this into word statistics, and generates keywords for each url using  <a href=\"https://algorithmia.com/algorithms/nlp/KeywordsForDocumentSet\" style=\"color: rgb(153, 99, 255);background-color: rgb(255, 255, 255);\">/nlp/KeywordsForDocumentSet</a>, and generates recommendations from these keywords using <a href=\"https://algorithmia.com/algorithms/nlp/KeywordSetSimilarity\" style=\"color: rgb(153, 99, 255);background-color: rgb(255, 255, 255);\">/nlp/KeywordSetSimilarity</a>. </p>All recommendations are stored in a table, and any time the algorithm is queried with a url that is in this table, it returns the corresponding recommendations. Thus, the first call to a domain takes a few minutes and a call with a novel url takes up to a few seconds, but any subsequent call with a url returns very quickly.","submitted_at":1442451733000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":2321257},{"algo_id":121,"object_id":"6775b09c-8e3c-11e3-8351-040108385a01","username":"kenny","algoname":"Dijkstra","algolabel":"Dijkstra","language":"java3","card_line":"Dijkstra's Path Planning Algorithm.","summary":"Dijkstra's Path Planning Algorithm.\nInput: A graph, a start vertex and a goal vertex.\nOutput: Shortest path from start to goal vertices.<div><br></div><div>Input:</div><div><ul><li>Map from vertex name to location [x,y]</li><li>Map from vertex to neighbors</li><li>Start vertex</li><li>Goal vertex</li></ul></div>","submitted_at":1426527558000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1577880},{"algo_id":466,"object_id":"42f32ea9-daea-11e3-b18f-040108385a01","username":"tags","algoname":"AutoTagURL","algolabel":"Auto-Tag URL","language":"java3","card_line":"This algorithm takes in a URL, retrieves the content, and produces candidate tags using LDA.","summary":"<p>This algorithm takes in a URL, retrieves the content, and produces candidate tags using LDA.</p>","submitted_at":1443812463000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1481318},{"algo_id":6063,"object_id":"0221c17c-bdfd-11e4-840d-12f53eafe9d2","username":"web","algoname":"GetLinks","algolabel":"Get Links","language":"java3","card_line":"Given a url (as a string), scrapes the page for links to other pages and returns them as url strings.","summary":"<p>Given a url (as a string), scrapes the page for links to other pages and returns them as url strings. Links to documents, such as PDFs and PPTs, are ignored. </p>","submitted_at":1445454270000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":594339},{"algo_id":73,"object_id":"67759ed6-8e3c-11e3-8351-040108385a01","username":"demo","algoname":"Hello","algolabel":"Hello","language":"java3","card_line":"Returns a greeting addressed to the input text.","summary":"Returns a greeting addressed to the input text.","submitted_at":1445003921000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":592321},{"algo_id":648,"object_id":"b48a61a2-112c-11e4-9735-04011d260101","username":"nlp","algoname":"Summarizer","algolabel":"Summarizer","language":"java3","card_line":"Takes in blocks of text, and extracts key topic sentences.","summary":"Takes in blocks of text, and extracts key topic sentences.&#160;","submitted_at":1427846481000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":494628},{"algo_id":16458,"object_id":"cd2a16ad-5027-11e5-aae6-12ad1a8c1691","username":"web","algoname":"WebPageRecommender","algolabel":"Web Page Recommender","language":"java4","card_line":"This algorithm provides page recommendations for a domain.","summary":"<p>This algorithm provides page recommendations for a domain. It is primarily geared for use with <a href=\"https://algorithmia.com/recommends\">the Algorithmia recommendation system</a>, which provides more specificity, but can be used independently of this as well.</p><p>It takes as input a url and a required string. Only urls whose source contains the required string will be considered as recommendations. Note that the page source itself is inspected, not just the user-readable text. Examples include long UUIDs embedded in the page's java script, or simply the empty string &#34;&#34; to consider every page. Get Recommendations maintains a permanent algorithm collection (see <a href=\"https://algorithmia.com/docs/data/\">the documentation</a>). When a url is sent to it, it checks to see if any url from the same domain has ever been sent. If not, the domain is explored, for 200 urls or 2 minutes, whichever comes first, using <a href=\"https://algorithmia.com/algorithms/web/BreadthFirstSiteMap\" style=\"color: rgb(153, 99, 255);background-color: rgb(255, 255, 255);\">/web/BreadthFirstSiteMap</a> and filtering for urls containing the required string. These urls are processed into recommendations as described below.</p><p>It also takes an optional third integer parameter, which dictates how many months in the past (relative to a given page) will be considered for recommendation. For example, if the parameter is 24, no page that is more than 24 months older than a given page will be recommended. Note however that recommendations are always being updated as new pages are added, and for any given page, anything published more recently than it is eligible as a recommendation assuming some nonzero similarity. If this parameter is not supplied or is equal to -1, all pages will be considered.</p><p>For each explored domain, the algorithm maintains a word count summary for each url and for the domain as a whole. For every new url in an existing domain, it scrapes the url for content using <a href=\"https://algorithmia.com/algorithms/web/AnalyzeURL\" style=\"color: rgb(153, 99, 255);background-color: rgb(255, 255, 255);\">/web/AnalyzeURL</a>, processes this into word statistics, and generates keywords for each url using  <a href=\"https://algorithmia.com/algorithms/nlp/KeywordsForDocumentSet\" style=\"color: rgb(153, 99, 255);background-color: rgb(255, 255, 255);\">/nlp/KeywordsForDocumentSet</a>, and generates recommendations from these keywords using <a href=\"https://algorithmia.com/algorithms/nlp/KeywordSetSimilarity\" style=\"color: rgb(153, 99, 255);background-color: rgb(255, 255, 255);\">/nlp/KeywordSetSimilarity</a>. </p><p>All recommendations are stored in a table, and any time the algorithm is queried with a url that is in this table, it returns the corresponding recommendations. Thus, the first call to a domain takes a few minutes and a call with a novel url takes up to a few seconds, but any subsequent call with a url returns very quickly.<br/></p>","submitted_at":1445453332000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":421027},{"algo_id":467,"object_id":"59d08955-dc52-11e3-b18f-040108385a01","username":"util","algoname":"Html2Text","algolabel":"Html 2 Text","language":"java3","card_line":"Takes in a url and extracts the content from the page.","summary":"Takes in a url and extracts the content from the page.<div><br/></div><div>Makes an attempt to remove non-content text like navigation and footer text.</div>","submitted_at":1433463759000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":367058},{"algo_id":354,"object_id":"99b3155b-abfc-11e3-8351-040108385a01","username":"codeb34v3r","algoname":"PorterStemmer","algolabel":"PorterStemmer","language":"java3","card_line":"Lucene PorterStemmer 3.6.2","summary":"Lucene PorterStemmer 3.6.2<div><br></div><div><br><div><br></div></div>","submitted_at":1429837854000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":352845},{"algo_id":746,"object_id":"b9f8b688-177d-11e4-b842-04011d260101","username":"nlp","algoname":"AutoTag","algolabel":"AutoTag","language":"java3","card_line":"This class takes in text content as a set of documents and produces candidate tags using LDA.","summary":"<p>This class takes in text content as a set of documents and produces candidate tags using LDA. Pipe your input as a json array of strings.</p>","submitted_at":1443121094000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":336446},{"algo_id":623,"object_id":"50199fb0-065c-11e4-9109-04011d260101","username":"nlp","algoname":"SentimentAnalysis","algolabel":"Sentiment Analysis","language":"java3","card_line":"Identify and extract sentiment in given string.","summary":"<div><span>Identify and extract sentiment in given string. Sentiment analysis (also known as opinion mining) refers to the use of natural language processing, text analysis and computational linguistics </span><span class=\"GINGER_SOFTWARE_mark\">to identify</span><span> and extract subjective information in </span><span class=\"GINGER_SOFTWARE_mark\">source materials</span><span>. </span><span>This algorithm takes an input string and assigns a sentiment rating in the range [0-4] </span><span>(very negative, negative, neutral, positive, and very positive).</span></div><div><div><br/></div><div>For more information, please refer to <a href=\"http://nlp.stanford.edu/software/corenlp.shtml\">http://nlp.stanford.edu/software/corenlp.shtml</a> or Manning, Christopher D., Surdeanu, Mihai, Bauer, John, Finkel, Jenny, Bethard, Steven J., and McClosky, David. 2014. <a href=\"http://nlp.stanford.edu/pubs/StanfordCoreNlp2014.pdf\">The Stanford CoreNLP Natural Language Processing Toolkit</a>. In <i>Proceedings of 52nd Annual Meeting of the Association for Computational Linguistics: System Demonstrations</i>, pp. 55-60. </div></div>","submitted_at":1428516099000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":255328},{"algo_id":541,"object_id":"9ea79cd4-f659-11e3-8686-040108385a01","username":"tags","algoname":"AutoTagGithub","algolabel":"Auto-Tag Github","language":"java3","card_line":"Provide this algorithm a github repository and it will generate topic tags of its README based on LDA.","summary":"Provide this algorithm a github&#160;repository and it will generate topic tags of its README based on LDA. Input is in the format [user,repo], and the repository queried is of form&#160;&#34;http://github.com/&#34; + user + &#34;/&#34; + repo.","submitted_at":1433464269000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":231551},{"algo_id":3250,"object_id":"3947ce0e-a58d-11e4-be78-12e1fbfbf82c","username":"mallet","algoname":"LDA","algolabel":"LDA","language":"java3","card_line":"In natural language processing, Latent Dirichlet Allocation (LDA) is a generative model that allows sets of observations to be explained by unobserved groups that explain why some ...","summary":"In natural language processing, Latent Dirichlet Allocation (LDA) is a generative model that allows sets of observations to be explained by unobserved groups that explain why some parts of the data are similar. For example, if observations are words collected into documents, it posits that each document is a mixture of a small number of topics and that each word's creation is attributable to one of the document's topics. LDA is an example of a topic model and was first presented as a graphical model for topic discovery by David Blei, Andrew Ng, and Michael Jordan in 2003.&#160;<div><br/></div><div>Input</div><div><ul><li>A list of strings representing observations</li><li>The number of topics to generate</li></ul></div>","submitted_at":1435085000000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":186958},{"algo_id":2971,"object_id":"ffb9977b-a03a-11e4-be78-12e1fbfbf82c","username":"util","algoname":"Url2Text","algolabel":"Url 2 Text","language":"java3","card_line":"Takes in a url and extracts the content from the page.","summary":"<span>Takes in a url and extracts the content from the page.</span><div><br/></div><div>Makes an attempt to remove non-content text like navigation and footer text.</div>","submitted_at":1444969177000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":185653},{"algo_id":14889,"object_id":"f22f6d4c-08ac-11e5-89ff-123a3b0693f5","username":"web","algoname":"AnalyzeURL","algolabel":"Analyze URL","language":"java3","card_line":"Given a url and a target string, returns several pieces of information on the url, including \"text\" - the text of the page (similar to /util/Url2Text ) , \"title\" - the page title, ...","summary":"<p>Given a url and a target string, returns several pieces of information on the url, including &#34;text&#34; - the text of the page (similar to <a href=\"https://algorithmia.com/algorithms/util/Url2Text\">/util/Url2Text</a>) , &#34;title&#34; - the page title, &#34;summary&#34; - a summary of the page text (using either the meta description of the page, or, if this is not available, the summary of the page text via <a href=\"https://algorithmia.com/algorithms/nlp/Summarizer\">/nlp/Summarizer</a>), &#34;thumbnail&#34; - the url of the main image on the page, if it can be located, and a boolean denoting if the page source contains the target string. Note that all information is provided on a best effort basis, if something can be found it will not be included in the output.</p><p>Input consists of:</p><ul><li>url: The URL of the page to analyze</li><li>marker: An optional search term to look for in the page</li></ul>","submitted_at":1444758382000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":177089},{"algo_id":123,"object_id":"6775b115-8e3c-11e3-8351-040108385a01","username":"kenny","algoname":"LDA","algolabel":"LDA","language":"java3","card_line":"In natural language processing, Latent Dirichlet Allocation (LDA) is a generative model that allows sets of observations to be explained by unobserved groups that explain why some ...","summary":"In natural language processing, Latent Dirichlet Allocation (LDA) is a generative model that allows sets of observations to be explained by unobserved groups that explain why some parts of the data are similar. For example, if observations are words collected into documents, it posits that each document is a mixture of a small number of topics and that each word's creation is attributable to one of the document's topics. LDA is an example of a topic model and was first presented as a graphical model for topic discovery by David Blei, Andrew Ng, and Michael Jordan in 2003.&nbsp;<div><br></div><div>Input</div><div><ul><li>A list of strings representing observations</li><li>The number of topics to generate</li></ul></div>","submitted_at":1435084913000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":157110},{"algo_id":649,"object_id":"cda22b69-1309-11e4-9735-04011d260101","username":"tags","algoname":"ScrapeRSS","algolabel":"Scrape RSS","language":"java3","card_line":"Takes the url of an RSS feed and scrapes the RSS feed, extracting title, link url, and comments url.","summary":"Takes the url of an RSS feed and scrapes the RSS feed, extracting title, link url, and comments url.","submitted_at":1443722990000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":71777},{"algo_id":597,"object_id":"0e4ba10a-fe00-11e3-9109-04011d260101","username":"tags","algoname":"RecommendGitHubFromTags","algolabel":"Recommend GitHub From Tags","language":"java3","card_line":"Based on topic tags, this algorithm will recommend similar Github repositories.","summary":"Based on topic tags, this algorithm will recommend similar&#160;<br/>Github repositories. The input consists of tags with corresponding desired scores.","submitted_at":1429836918000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":67565},{"algo_id":155,"object_id":"329713b7-8e41-11e3-8351-040108385a01","username":"kenny","algoname":"MazeGen","algolabel":"Maze Generator","language":"java3","card_line":"Generate a maze with long winding pathways using Recursive Backtracking Search.","summary":"Generate a maze with long winding pathways using Recursive Backtracking Search.<div><br></div><div>Takes in as input width and height of the requested maze.</div>","submitted_at":1426527931000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":62952},{"algo_id":470,"object_id":"f52cadd4-df8b-11e3-b18f-040108385a01","username":"tags","algoname":"ScrapeHN","algolabel":"Scrape HN","language":"java3","card_line":"Scrapes the HackerNews RSS feed and extracts title, link url, and comments url.","summary":"Scrapes the HackerNews RSS feed and extracts title, link url, and comments url.","submitted_at":1433464156000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":56665},{"algo_id":5415,"object_id":"c620790d-ba4a-11e4-840d-12f53eafe9d2","username":"thatguy2048","algoname":"PageRank","algolabel":"PageRank","language":"java3","card_line":"This is a simple implementation of the PageRank algorithm.","summary":"<p>This is a simple implementation of the PageRank algorithm.  It accepts an input in the form of an <b>int[][]</b> or a <b>String</b> which can define the d value and the number of loops. The default d value is 0.85, and the default number of loops is 20.</p>&#10;<br/>&#10;<b>Input Description</b><br/><pre>page 0 links to pages 1,2,3<br/>Page 1 links to page 0<br/>Page 2 links to page 0<br/>Page 3 links to pages 0,4,5,6,7<br/>page 4 has no links<br/>page 5 has no links<br/>page 6 has no links<br/>page 7 has no links</pre><b>Sample Input</b><br/><pre>[[1,2,3],[0],[0],[0,4,5,6,7],[],[],[],[]]</pre><p></p><b>Sample Output</b><br/><pre>[0.9142543787391981,0.4089334112608257,0.4089334112608257,0.4089334112608257,0.21947767079447258,0.21947767079447258,0.21947767079447258,0.21947767079447258]</pre><table>&#10;<tbody><tr><td>&#10;</td></tr><tr>&#10;&#10;&#10;</tr>&#10;<tr>&#10;&#10;&#10;</tr>&#10;<tr></tr>&#10;<tr>&#10;&#10;&#10;</tr>&#10;&#10;</tbody></table>","submitted_at":1430946001000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":37881},{"algo_id":8986,"object_id":"bb45972e-c9e4-11e4-abe1-12f53eafe9d2","username":"codithmia","algoname":"levenshtein","algolabel":"levenshtein","language":"java3","card_line":"The Levenshtein Distance algorithm measures the distance between two strings, returning the minimum number of changes required to change one string to another.","summary":"The Levenshtein Distance algorithm measures the distance between two strings, returning the minimum number of changes required to change one string to another.","submitted_at":1426297054000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":37862},{"algo_id":1517,"object_id":"cf721889-6b19-11e4-bad7-04011d260101","username":"weka","algoname":"WekaClassification","algolabel":"Weka Classification","language":"java3","card_line":"This is the main algorithm that all of the Weka classification algorithms call.","summary":"<span></span><p dir=\"ltr\"><span>This is the main algorithm that all of the Weka classification algorithms call. It is preferred that you do not call this algorithm directly, but by one of the classifiers on the platform. The Weka algorithms that are on the platform take in flat Json as input. It is assumed that any data that is going to be used with these algorithms will be large in size, so all interaction is done through Data collections. </span></p><br/><p dir=\"ltr\"><span>You can look at the <a href=\"https://algorithmia.com/algorithms/weka/DigitRecognition/edit\">DigitRecognition</a> algorithm we made for a quick demo of how to use Weka algorithms. That algorithm takes in either a matrix or an array of doubles that represent a black and white picture. The picture is a hand-drawn digit, and we feed it to a pretrained model on the MNIST dataset that will classify which of the 10 digits this particular one is. </span></p><div><span><br/></span></div>","submitted_at":1443818389000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":29955},{"algo_id":2641,"object_id":"6ca65c5e-86fa-11e4-be78-12e1fbfbf82c","username":"ApacheOpenNLP","algoname":"SentenceDetection","algolabel":"Sentence Detection","language":"java3","card_line":"Takes a block of text and splits into sentences, returning each sentence as an entry in a String array.","summary":"Takes a block of text and splits into sentences, returning each sentence as an entry in a String array.<div><br/></div><div>For more information visit&#160;<a href=\"http://opennlp.apache.org/\">http://opennlp.apache.org</a>.<br/></div>","submitted_at":1430446047000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":28916},{"algo_id":2166,"object_id":"3682f7f9-6f94-11e4-bad7-04011d260101","username":"mahout","algoname":"DigitRecognizer","algolabel":"Digit Recognizer","language":"java3","card_line":"Applies a random forest model trained on the MNIST handwritten digit dataset to a 28 by 28 grayscale pixel grid, which is input as a double array of length 784.","summary":"Applies a random forest model trained on the MNIST handwritten digit dataset to a 28 by 28 grayscale pixel grid, which is input as a double array of length 784. Supports the Mahout portion of the handwritten digit classification demo","submitted_at":1426113712000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":27314},{"algo_id":2167,"object_id":"8789178f-6f97-11e4-bad7-04011d260101","username":"mahout","algoname":"RandomForestApply","algolabel":"Random Forest Apply","language":"java3","card_line":"Overview This routine applies a previously learned Mahout Random Forest Classifier to a set of test data.","summary":"<div><b>Overview</b></div><div><br/></div><div>This routine applies a previously learned Mahout Random Forest Classifier to a set of test data. It takes as input a JSON array of four items, the first three are Data API URLs, of the (unlabeled) test data, the model file, and the (labelled) data used to train the model file, respectively, followed by a descriptor that details the type of each field in the dataset. It outputs the predicted labels of each instance in the test set. Note that test and training files are assumed to be CSVs.</div><div><br/></div><div><b>Data Format and Descriptor</b></div><div><br/></div><div>We assume that the first entry of any instance is the label, though Mahout does support other placement. The descriptor must be of form &#34;L X X X ...&#34;, where each X designates the type of its respective field, either&#160;I (ignored),&#160;N (numerical), or&#160;C (categorical).&#160;L designates the label label. Think of the descriptor as a header for the data. As an example, a dataset with four attributes (beyond the label) might have the first two as categorical, the third numerical, and the last ignored, and its header would be &#34;L C C N I&#34;.</div><div><br/></div><div>With the test data we don&#8217;t have a label and as a matter of convention&#160;<span class=\"s2\">Mahout</span>&#160;expects us to pass a &#34;-&#34;. Our code currently handles this as long as your data has the label as the first field, and this field is missing in test data.</div>","submitted_at":1426108398000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":26060},{"algo_id":4118,"object_id":"f71ad8ff-b17e-11e4-840d-12f53eafe9d2","username":"web","algoname":"SiteMap","algolabel":"Site Map","language":"java3","card_line":"Returns the graph resulting in crawling a URL for all links.","summary":"<p>Returns the graph resulting in crawling a URL for all links. </p>","submitted_at":1433464043000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":24810},{"algo_id":15699,"object_id":"82867a5c-2d95-11e5-aae6-12ad1a8c1691","username":"ANaimi","algoname":"ProductHuntRecommender","algolabel":"Product Hunt Recommender","language":"java3","card_line":"Takes a post id from Product Hunt and returns up to five recommended posts.","summary":"<p>Takes a post id from Product Hunt and returns up to five recommended posts. This algorithm is based on FP-Growth, found here:</p><p>https://algorithmia.com/algorithms/paranoia/FpGrowth</p>","submitted_at":1438972157000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":19392},{"algo_id":3253,"object_id":"9029f872-a5ad-11e4-be78-12e1fbfbf82c","username":"santacruz91","algoname":"ExtractDependencies","algolabel":"ExtractDependencies","language":"java3","card_line":"Input: Text.","summary":"Input: Text.<div>Output: For each sentence, a List of the dependencies we think might be useful.</div>","submitted_at":1430946129000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":17497},{"algo_id":1157,"object_id":"75cc6a6f-3c91-11e4-8a15-04011d260101","username":"util","algoname":"Echo","algolabel":"Echo","language":"java3","card_line":"This algorithm returns whatever you give it.","summary":"This algorithm returns whatever you give it. Seems pretty clear.","submitted_at":1430446924000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":15738},{"algo_id":13769,"object_id":"034545fc-e221-11e4-8df1-12f53eafe9d2","username":"nlp","algoname":"KeywordSetSimilarity","algolabel":"Keyword Set Similarity ","language":"java3","card_line":"Determines similarity between sets of weighted keywords.","summary":"Determines similarity between sets of weighted keywords. Each keyword set is represented as a Map&lt;String,Double&gt;, where the String is the keyword and the Double is it's weight. The similarity of two sets is the sum of the products of the weights of their shared keywords, for instance, if set A has keywords &#34;dog&#34;, &#34;cat&#34;, and &#34;mouse&#34; with weights 1,2, and 2, respectively and set B has keywords &#34;dog&#34;, &#34;cat&#34;, and &#34;moose&#34; with weights 1.5,3, and 4, their similarity by this metric is 1*1.5 + 2*3 = 7.5. This can be thought of as the inner product of word vectors.<div><br/></div><div>The most convenient input format for a set of keyword sets is&#160;<span>Map&lt;String,Map&lt;String,Double&gt;&gt;, where the first String key is an identifier for the keyword set, and it's value, a Map&lt;String,Double&gt;, is the set of keywords with their respective weights as values. The algorithm also requires an int that determines the maximum number of similar sets to return for each keyword set. The output for this input form is a Map from Strings to Set&lt;String&gt;'s, where the Set&lt;String&gt; value is the set of most similar keyword sets (denoted by a&#160;</span>String identifier<span>).</span></div>","submitted_at":1443319271000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":15186},{"algo_id":2349,"object_id":"39c8d79a-7cdb-11e4-8b54-04011d260101","username":"kenny","algoname":"Othello","algolabel":"Othello","language":"java3","card_line":"An AI othello player.","summary":"An AI othello player.<div><br/></div><div>Input is a board represented as a 2D array of integers.&#160;</div><div><br/></div><div><ul><li>0 = empty</li><li>1 = black</li><li>2 = white</li></ul></div>","submitted_at":1429837109000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":15004},{"algo_id":13535,"object_id":"2b494bfe-de79-11e4-8df1-12f53eafe9d2","username":"nlp","algoname":"KeywordsForDocumentSet","algolabel":"Keywords For Document Set","language":"java3","card_line":"Given a set of documents (represented as a List&lt;String&gt;) and a maximum number of keywords to return per document, returns a list, each entry of which contains the most releva...","summary":"Given a set of documents (represented as a List&lt;String&gt;) and a maximum number of keywords to return per document, returns a list, each entry of which contains the most relevant (as measured by weight) keywords for the respective document. In a given document, a keyword receives a higher weight for the number of times it appears in the document and a lower weight for the number of other documents it appears in. This is a simple implementation of&#160;<a href=\"http://en.wikipedia.org/wiki/Tf%E2%80%93idf\">tf-idf scoring</a>.","submitted_at":1443319936000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":14984},{"algo_id":15729,"object_id":"1ac9e315-2fd1-11e5-aae6-12ad1a8c1691","username":"ANaimi","algoname":"ProductHuntVoteRings","algolabel":"Product Hunt Vote Rings","language":"java3","card_line":"This algorithm takes two parameters (filter and limit) and returns the latest Product Hunt posts having a collusion ratio higher than 'filter'.","summary":"<p>This algorithm takes two parameters (filter and limit) and returns the latest Product Hunt posts having a collusion ratio higher than 'filter'. <span>The 'limit' parameter is used to specify maximum number of records returned. </span></p><p><span>This depends on 'SimpleVoteRingDetection' algorithm to calculate the collusion ratio.</span></p>","submitted_at":1438129878000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":14494},{"algo_id":6175,"object_id":"02ae4d33-bfe0-11e4-840d-12f53eafe9d2","username":"paranoia","algoname":"FpGrowth","algolabel":"FpGrowth","language":"java3","card_line":"Java implementation of the Frequent Pattern Growth ( FP-Growth ) algorithm, which is a scalable method for finding frequent patterns within large datasets.","summary":"<p>Java implementation of the Frequent Pattern Growth (<a href=\"https://en.wikibooks.org/wiki/Data_Mining_Algorithms_In_R/Frequent_Pattern_Mining/The_FP-Growth_Algorithm\">FP-Growth</a>) algorithm, which is a scalable method for finding frequent patterns within large datasets. For example, it could be used to find <a href=\"https://en.wikipedia.org/wiki/Affinity_analysis\">Association Rules</a> and develop collaborative-filtering  systems, such as &#34;Other people also bought&#34;...</p><p> The algorithm takes three arguments:</p><ul><li><b>Dataset</b>: path to a local (data://...) dataset, where each line represents a single transaction and each item is separated by whitespace. (See Example file).</li><li><b>Support</b>: represents the minimum frequency for a pattern to be recognized. In most cases you'll want to increase this number to reduce the size of the output.</li><li><b>MinItems</b>: represents the minimum number of items (per association rule). Having the value of this argument as 1 will return each unique item in the dataset and the number of times they appeared. Most applications would require a number higher than 1.</li></ul><p><br/></p><p><i>This algorithm was featured in the Algorithmia Blog Post: &#34;Mining Product Hunt, Part 2: Building a Recommendation Engine&#34;.</i></p>","submitted_at":1445377076000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":12813},{"algo_id":343,"object_id":"f3c796d6-aa76-11e3-8351-040108385a01","username":"kenny","algoname":"GraphGen","algolabel":"GraphGen","language":"java3","card_line":"Given an array of integers creates grid graph.","summary":"Given an array of integers creates grid graph.","submitted_at":1429837111000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":12014},{"algo_id":2634,"object_id":"01abce4e-86f6-11e4-be78-12e1fbfbf82c","username":"ApacheOpenNLP","algoname":"Tokenizer","algolabel":"Tokenizer","language":"java3","card_line":"Tokenizes input text, returning each token in order as a string in a string array.","summary":"Tokenizes input text, returning each token in order as a string in a string array. By default uses English tokenization model en-token.bin. To use an alternate tokenization model, call with arguments [&lt;input text&gt;, &#34;data://ApacheOpenNLP/models/&lt;tokenization model&gt;&#34;].<div><br/></div><div>For more information visit&#160;<a href=\"http://opennlp.apache.org/\">http://opennlp.apache.org</a>.<br/></div>","submitted_at":1430446046000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":10216},{"algo_id":4725,"object_id":"c2d43aed-b628-11e4-840d-12f53eafe9d2","username":"weka","algoname":"DigitRecognition","algolabel":"DigitRecognition","language":"java3","card_line":"The Digit Recognition algorithm that uses a Random Forest model trained on 50000 samples obtained from the MNIST digits dataset.","summary":"The Digit Recognition algorithm that uses a Random Forest model trained on 50000 samples obtained from the MNIST digits dataset.","submitted_at":1430443438000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":8944},{"algo_id":2744,"object_id":"bed0344f-9a99-11e4-be78-12e1fbfbf82c","username":"nlp","algoname":"LanguageIdentification","algolabel":"Language Identification","language":"java3","card_line":"This is a language identifier based on Apache Tika.","summary":"This is a language identifier based on Apache Tika. It can identify 18 different languages. It takes a string as input and returns its best guess as to what language the string is written in. Currently supported languages are<div><br/></div><div><table class=\"table table-bordered\"><tbody><tr><td>da&#8212;Danish</td><td>de&#8212;German</td><td>et&#8212;Estonian</td><td>el&#8212;Greek</td></tr><tr><td>en&#8212;English</td><td>es&#8212;Spanish</td><td>fi&#8212;Finnish</td><td>fr&#8212;French</td></tr><tr><td>hu&#8212;Hungarian</td><td>is&#8212;Icelandic</td><td>it&#8212;Italian</td><td>nl&#8212;Dutch</td></tr><tr><td>no&#8212;Norwegian</td><td>pl&#8212;Polish</td><td>pt&#8212;Portuguese</td><td>ru&#8212;Russian</td></tr><tr><td>sv&#8212;Swedish</td><td>th&#8212;Thai</td></tr></tbody></table><div><br/></div></div>","submitted_at":1430946891000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":8902},{"algo_id":14662,"object_id":"badac800-fab3-11e4-89ff-123a3b0693f5","username":"etl","algoname":"GetBuildingPermitData","algolabel":"Get Building Permit Data","language":"python2-2","card_line":"Aggregates Socrata Building Permit data based on city.","summary":"<p>Aggregates Socrata Building Permit data based on city. Valid cities are: Boston, Santa Rosa, New York City, Edmonton, Los Angeles, Fort Worth</p>","submitted_at":1431977780000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":8829},{"algo_id":14637,"object_id":"8f4d3406-f9b0-11e4-89ff-123a3b0693f5","username":"TimeSeries","algoname":"Autocorrelate","algolabel":"Autocorrelate","language":"java3","card_line":"Computes the   autocorrelation   plot of a time series.","summary":"<p>Computes the  <a href=\"http://en.wikipedia.org/wiki/Autocorrelation\">autocorrelation</a>  plot of a time series.</p>","submitted_at":1431549775000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":8823},{"algo_id":2734,"object_id":"327eeeeb-992c-11e4-be78-12e1fbfbf82c","username":"TimeSeries","algoname":"LinearDetrend","algolabel":"Linear Detrend","language":"java3","card_line":"Takes a time series (either a double[][] for unevenly spaced data, with time in the first column, or a double[] for evenly spaced data), fits a linear trend to the data, and return...","summary":"Takes a time series (either a double[][] for unevenly spaced data, with time in the first column, or a double[] for evenly spaced data), fits a linear trend to the data, and returns the data with the linear trend subtracted out.","submitted_at":1430441467000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":8649},{"algo_id":134,"object_id":"6775b2fc-8e3c-11e3-8351-040108385a01","username":"diego","algoname":"RetrieveTweetsWithKeyword","algolabel":"Retrieve Tweets With Keyword","language":"java3","card_line":"Retrieve tweets that include keyword anywhere int their text.","summary":"Retrieve tweets that include keyword anywhere int their text. Limited to 500 tweets per call.&#160;","submitted_at":1430897833000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":8545},{"algo_id":14641,"object_id":"75684c5d-f9cf-11e4-89ff-123a3b0693f5","username":"TimeSeries","algoname":"TopPeriods","algolabel":"Top Periods","language":"java3","card_line":"Returns the top periods present in the input double[].","summary":"<p>Returns the top periods present in the input double[].</p>","submitted_at":1431566188000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":8473},{"algo_id":2334,"object_id":"60e1f7eb-79a6-11e4-bad7-04011d260101","username":"StanfordNLP","algoname":"SentimentAnalysis","algolabel":"Sentiment Analysis","language":"java3","card_line":"Sentiment analysis (also known as opinion mining) refers to the use of natural language processing, text analysis and computational linguistics to identify and extract subjective i...","summary":"Sentiment analysis (also known as opinion mining) refers to the use of natural language processing, text analysis and computational linguistics&#160;<span class=\"GINGER_SOFTWARE_mark\">to identify</span>&#160;and extract subjective information in&#160;<span class=\"GINGER_SOFTWARE_mark\">source materials</span>.&#160;<span>This algorithm takes an input string and assigns a sentiment rating in the range [0-4].</span><div><br/></div><div>For more information, please refer to&#160;<a href=\"http://nlp.stanford.edu/software/corenlp.shtml\">http://nlp.stanford.edu/software/corenlp.shtml</a>&#160;or&#160;Manning, Christopher D., Surdeanu, Mihai, Bauer, John, Finkel, Jenny, Bethard, Steven J., and McClosky, David. 2014.&#160;<a href=\"http://nlp.stanford.edu/pubs/StanfordCoreNlp2014.pdf\">The Stanford CoreNLP Natural Language Processing Toolkit</a>. In&#160;<i>Proceedings of 52nd Annual Meeting of the Association for Computational Linguistics: System Demonstrations</i>, pp. 55-60.&#160;<br/></div>","submitted_at":1430421524000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":7749},{"algo_id":14638,"object_id":"b5393fc2-f9b8-11e4-89ff-123a3b0693f5","username":"TimeSeries","algoname":"Forecast","algolabel":"Forecast","language":"java3","card_line":"Gives a forecast the next n steps of a given time series based on extrapolation of linear and seasonal trends.","summary":"<p>Gives a forecast the next n steps of a given time series based on extrapolation of linear and seasonal trends. It takes as input</p><ul><li>A time series as a double[].</li><li>A number of time steps into the future to forecast.</li><li>A maximum number of seasonal periods to consider.</li></ul><p>Alternatively it takes just a time series, and defaults to a forecast range equal to the length of the original series and  the single strongest seasonal trend.</p><p>It returns the forecasted series as a double[]. This algorithm works by fitting a linear trend to the given data, extrapolating it into the future series interval, and then adjusting it based on the expected contributions of each detected seasonal component. Seasonality is detected using <a href=\"https://algorithmia.com/algorithms/TimeSeries/Autocorrelate\">https://algorithmia.com/algorithms/TimeSeries/Autocorrelate</a>.</p><p>Note that this algorithm only deals with linear and seasonal trends. If other artifacts, such as non-seasonal spikes or super/sub-linear trends, are present in the data, results will suffer, and as a general rule the further you go in the future, the less accuracy you should expect.</p><p><br/></p>","submitted_at":1431565984000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":7699},{"algo_id":60,"object_id":"677598c4-8e3c-11e3-8351-040108385a01","username":"kenny","algoname":"Factor","algolabel":"Factor","language":"java3","card_line":"Takes an integer, and decomposes it into its prime factors.","summary":"Takes an integer, and decomposes it into its prime factors.","submitted_at":1428563033000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":6304},{"algo_id":2687,"object_id":"2e7cfc28-8a38-11e4-be78-12e1fbfbf82c","username":"opencv","algoname":"ObjectDetectionWithModels","algolabel":"Object Detection With Models","language":"java3","card_line":"Core algorithm for taking in an image and a pretrained model and detecting objects.","summary":"Core algorithm for taking in an image and a pretrained model and detecting objects.&#160;<div><br/></div><div>Call this algorithm from another algorithm, by giving a pretrained model file link. For usage examples, see:</div><div><span><a href=\"https://algorithmia.com/algorithms/opencv/FaceDetection/edit\">FaceDetection</a></span></div><div><span><a href=\"https://algorithmia.com/algorithms/opencv/SmileDetection/edit\">SmileDetection</a></span></div><div><span><a href=\"https://algorithmia.com/algorithms/opencv/EyeDetection/edit\">EyeDetection</a></span></div><div><span><a href=\"https://algorithmia.com/algorithms/opencv/BodyDetection/edit\">BodyDetection</a></span><br/></div>","submitted_at":1445171428000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":5522},{"algo_id":14929,"object_id":"3f6f3546-0adb-11e5-89ff-123a3b0693f5","username":"mheimann","algoname":"FaceRecognition","algolabel":"Face Recognition","language":"python2-2","card_line":"Performs face recognition using OpenCV.","summary":"<p>Performs face recognition using OpenCV.  This is the internal workings of the corresponding algorithms <a href=\"https://algorithmia.com/algorithms/mheimann/TrainFaceRecognizer\">Train Face Recognizer</a> and <a href=\"https://algorithmia.com/algorithms/mheimann/RecognizeFaces\">Recognize Faces</a>.  Users will probably prefer to use those algorithms, and should refer to their documentation for guidance.  </p>","submitted_at":1444246416000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":5100},{"algo_id":117,"object_id":"6775afb9-8e3c-11e3-8351-040108385a01","username":"kenny","algoname":"WekaCluster","algolabel":"Weka Cluster","language":"java3","card_line":"k-means clustering using the Weka machine learning library.","summary":"k-means clustering using the Weka machine learning library.","submitted_at":1429666846000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":4873},{"algo_id":14494,"object_id":"1ba164c8-f3ac-11e4-849b-0670f2dc1320","username":"ocr","algoname":"DigitRecognition","algolabel":"Digit Recognition","language":"python2-2","card_line":"This algorithm classifies an image of a digit, given as an array.","summary":"This algorithm classifies an image of a digit, given as an array.","submitted_at":1439315347000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":4838},{"algo_id":13253,"object_id":"e9ae5e07-d889-11e4-8df1-12f53eafe9d2","username":"laurens93","algoname":"BIPM","algolabel":"BIPM","language":"java3","submitted_at":1427974168000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":4652},{"algo_id":15973,"object_id":"86e803da-3bc3-11e5-aae6-12ad1a8c1691","username":"mheimann","algoname":"RecognizeFaces","algolabel":"Recognize Faces","language":"python2-2","card_line":"Uses a trained face recognizer to identify faces.","summary":"<p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\">Uses a trained face recognizer to identify faces. This is a wrapper for the FaceRecognition algorithm.  The FaceRecognition algorithm additionally requires a user to specify a &#34;classify&#34; mode, so this wrapper makes things slightly more convenient. </p><p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\"><span>Users must pass in a list of JSON objects, one for each image.  Each image JSON object must have a &#34;Path&#34; field specifying the image URL (e.g. the path to the image in an Algorithmia collection).  Optionally, it may have a &#34;ID&#34; field with an ID (or label) saying whose face is pictured.  This is useful mainly for academic purposes to evaluate the model; of course in many real-world situations the point of having a face recognizer is to recognize people whose identity is not explicitly labeled already.  </span><br/></p><p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\">(Note: if an image has multiple faces, each face will be classified.  As in the accompanying Train/Update Face Recognizer algorithms, any ID that is provided will be the &#34;ground truth&#34; ID for each face in the image.)</p><p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\">Users must also specify the full path to a face recognizer in an Algorithmia data collection (including the name of the face recognizer XML file).  There must also be a map of human IDs to internal numeric labels in a file with the same name plus an &#34;_idList.txt&#34; tag and extension instead of a &#34;.xml&#34; extension. Both files must have the same name and must be in the same directory (the default name is facerec.xml and facerec_idList.txt).  These would both have been created, say, by a run of the companion Train Face Recognizer algorithm.  <span></span></p><p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\">The output will be in JSON format, where each image path will have a list of predictions--one prediction for each face in the image--in JSON format.  Each prediction will contain: the predicted ID, the actual ID (if known), and the uncertainty, which is actually a distance measure to the nearest match.  Note: the predicted ID will be &#34;Unknown&#34; if the uncertainty is too high (at this time the threshold is 100).  (For clarity, it is obviously highly recommended that &#34;Unknown&#34; not be used as a valid image ID.)</p>","submitted_at":1444092611000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":4323},{"algo_id":4063,"object_id":"31b805c7-ae60-11e4-840d-12f53eafe9d2","username":"santacruz91","algoname":"SentenceTagger","algolabel":"SentenceTagger","language":"java3","card_line":"Input: Text Output: List of JsonObjects with Sentence as string[] words, with int[] verbs and int[] nouns containing positions of the verbs and nouns in the sentence.","summary":"Input: Text<div>Output: List of JsonObjects with Sentence as string[] words, with int[] verbs and int[] nouns containing positions of the verbs and nouns in the sentence.</div>","submitted_at":1426277292000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":3470},{"algo_id":2690,"object_id":"2e85d675-8a38-11e4-be78-12e1fbfbf82c","username":"opencv","algoname":"FaceDetection","algolabel":"Face Detection","language":"java3","card_line":"Uses a pretrained model to detect faces in a given image.","summary":"<p>Uses a pretrained model to detect faces in a given image. Send your input as a url to a picture that is either hosted on our data API or is a direct link, and the output is the same image, with rectangles around the detected faces, written to your collection. A text file that contains all the coordinates of the rectangles is also output to the same collection for convenience. The text file contains 4 integers: the x and y coordinates of the top left of the rectangle, the width of the rectangle and the height of the rectangle.</p><div>If you like, you can give an arbitrary URL as the first input, the second input will still have to be a data collection because we will be writing the output of the algorithm: [&#34;http://fluorineplus.com/wp-content/2012/07/Natural-Ways-To-Take-Care-300x293.jpg&#34;, &#34;data://.algo/temp/result.jpg&#34;]</div><p></p>","submitted_at":1445170578000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":3411},{"algo_id":15137,"object_id":"a87f9600-1388-11e5-89ff-123a3b0693f5","username":"ANaimi","algoname":"TechEventsFinder","algolabel":"Tech Events Finder","language":"java3","card_line":"Returns a list of future tech events from from Meetup and Eventbrite.","summary":"<p>Returns a list of future tech events from from Meetup and Eventbrite. Takes three inputs: country, state, and city.</p>","submitted_at":1435362950000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":3199},{"algo_id":4256,"object_id":"a3715f9c-b22f-11e4-840d-12f53eafe9d2","username":"util","algoname":"PrepareInputArray","algolabel":"Prepare Input Array","language":"java3","card_line":"This algorithm separates input string by spaces and makes them into an array.","summary":"<p>This algorithm separates input string by spaces and makes them into an array. It is a convenience algorithm that takes in a String of values that need to be passed in to an Algorithm via Json. It is most useful for &#34;Algorithmia.call&#34; calls that take in multiple values. By sticking all values that need to be added into a JsonArray in a String delimited by a space (&#34; &#34;) and passing it into this algorithm, the user gets back the prepared JsonArray.</p>","submitted_at":1430945739000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":2566},{"algo_id":2729,"object_id":"fc774cec-983a-11e4-be78-12e1fbfbf82c","username":"util","algoname":"ExtractText","algolabel":"Extract Text","language":"java3","card_line":"Extracts text from a given file.","summary":"Extracts text from a given file. Supported formats include Office documents (Word, Powerpoint, etc), HTML, XML, PDF, RTF, etc. For more information on supported formats, please take a look at <a href=\"http://tika.apache.org/1.4/formats.html\">Apache Tika's documentation page</a>.<div><br/></div><div>This algorithm handles any URL, be it from the Data API or the URL to a file on the internet.</div>","submitted_at":1430446926000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":2542},{"algo_id":14493,"object_id":"f03b317b-f3ab-11e4-849b-0670f2dc1320","username":"ocr","algoname":"ReceiptRecognition","algolabel":"Receipt Recognition","language":"java3","card_line":"This algorithm reads a computer printed or handwritten receipt (containing only the total or tip portions) and returns the value written.","summary":"This algorithm reads a computer printed or handwritten receipt (containing only the total or tip portions) and returns the value written.<div><br/></div><div>Please upload the image of the receipt to a Data collection and give the direct link to this algorithm.</div>","submitted_at":1439335081000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":2479},{"algo_id":13438,"object_id":"aa65544e-dd81-11e4-8df1-12f53eafe9d2","username":"web","algoname":"BreadthFirstSiteMap","algolabel":"Breadth First Site Map","language":"java3","card_line":"A more efficient site mapper that explores in a breadth-first fashion.","summary":"<p>A more efficient site mapper that explores in a breadth-first fashion. Given a url and a max number of pages to return, it explores in a breadth-first fashion until it detects that is has passed the maximum allowed number of pages, or until it has run for two minutes, whichever comes first. Returns an adjacency map of urls. Optionally, you can provide a list of required terms as a third argument. If you do this, the algorithm will return a hashmap with two keys, &#34;map&#34;, whose value is the site map as described above, and &#34;marked&#34;, whose value is a list of URLs whose html (including human-readable text) contains at least one of the strings provided in the third argument. This is most useful for finding specific html tags, though be careful of very short or common words that might be present either in html or in human readable text.</p>","submitted_at":1433463971000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":2131},{"algo_id":13412,"object_id":"0f6ed2cf-dcb7-11e4-8df1-12f53eafe9d2","username":"web","algoname":"ShareCounts","algolabel":"Count Social Shares","language":"java3","card_line":"Given a URL, returns the number of times that URL has been shared on various social media sites, currently facebook, twitter, pinterest, and linkedin.","summary":"Given a URL, returns the number of times that URL has been shared on various social media sites, currently facebook, twitter, pinterest, and linkedin. Facebook has more detailed information, including shares, comments, and likes, all others are just number of shares. &#160;Please use the full http://.. syntax to ensure the best possible results.","submitted_at":1439232734000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":2049},{"algo_id":2752,"object_id":"9347e8c0-9abe-11e4-be78-12e1fbfbf82c","username":"Geo","algoname":"LatLongDistance","algolabel":"Lat Long Distance","language":"java3","card_line":"Returns the geographical distance between two points defined by latitude and longitude.","summary":"Returns the geographical distance between two points defined by latitude and longitude. The first two arguments are the coordinates of one points, the second two the coordinates of the second point. The final argument is string, either &#34;km&#34; or &#34;mile&#34;, depending upon if units of kilometers or miles are desired. This is calculated using the haversine formula and may not be accurate for points that are very close.","submitted_at":1445289719000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1927},{"algo_id":2348,"object_id":"b7d8c0e0-7c52-11e4-8b54-04011d260101","username":"mtman","algoname":"SentimentAnalysis","algolabel":"SentimentAnalysis","language":"java3","card_line":"Sentiment analysis based on Apache Open NLP and SentiWordNet.","summary":"Sentiment analysis based on Apache Open NLP and SentiWordNet.<br/><br/>Result: <br/>&#160;&#160;&#160; positive: &gt; 0 <br/>&#160;&#160;&#160; neutral: 0<br/>&#160;&#160;&#160; negative: &lt; 0<br/>","submitted_at":1445289379000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1906},{"algo_id":4584,"object_id":"c33ad923-b3f6-11e4-840d-12f53eafe9d2","username":"ngram","algoname":"GenerateRandomLoveLetter","algolabel":"Generate Random Love Letter","language":"java3","card_line":"Generates a random letter from trigrams trained from http://archive.lovingyou.com/content/inspiration/loveletters.php .","summary":"Generates a random letter from trigrams trained from&#160;<a href=\"http://archive.lovingyou.com/content/inspiration/loveletters.php\">http://archive.lovingyou.com/content/inspiration/loveletters.php</a>. Inputs are your valentine's and your names!","submitted_at":1430946413000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1660},{"algo_id":3203,"object_id":"d901c1b4-a298-11e4-be78-12e1fbfbf82c","username":"util","algoname":"ParallelForEach","algolabel":"Parallel For Each","language":"java3","card_line":"An algorithm to run another algorithm on a list of inputs, run in parallel.","summary":"<span>An algorithm to run another algorithm on a list of inputs, run in parallel.</span><div><span><br/></span></div><div><span>This algorithm takes</span></div><div><ol><li><span>The name of an algorithm (eg- &#34;/util/Echo&#34;)</span><br/></li><li><span>A list of inputs which will map each input to the output of the given algorithm</span></li></ol><p>Note: This algorithm may not correctly run all iterations if the input algorithm calls other algorithms.<br/></p></div>","submitted_at":1431568499000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1650},{"algo_id":5051,"object_id":"6315b73f-b6f7-11e4-840d-12f53eafe9d2","username":"ngram","algoname":"RandomTextFromTrigram","algolabel":"Random Text From Trigram","language":"scala2","card_line":"This algorithm generates random text from a trained trigram model.","summary":"This algorithm generates random text from a trained trigram model. The inputs are the Data URL that contains the trained file, and a beginning and an end token that will specify legitimate sentence beginnings and ends. You can learn more about Data collections on the <a href=\"https://algorithmia.com/algorithms/ngram/GenerateTrigramFrequencies\">Trigram generator algorithm page</a>.","submitted_at":1433794156000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1640},{"algo_id":3689,"object_id":"fca2e19e-a8ba-11e4-840d-12f53eafe9d2","username":"opencv","algoname":"ImageBinarization","algolabel":"Image Binarization","language":"java3","card_line":"This algorithm binarizes the input image, useful for cleaning background noise in a text image to be input to OCR.","summary":"<p>This algorithm binarizes the input image, useful for cleaning background noise in a text image to be input to OCR. This algorithm uses the implementation described in <a href=\"http://liris.cnrs.fr/christian.wolf/software/binarize/\">http://liris.cnrs.fr/christian.wolf/software/binarize/</a>. </p><div>The parameters are identical to those explained in the website. Unless the user finds a compelling reason, in general, the newest algorithm, &#34;w&#34;, is the best performing algorithm and it is the default. You may wish to experiment with different parameters to find out the one that best fits your image.</div><div><br/></div><div><pre>         -n <a href=\"http://www.abebooks.com/Introduction-Digital-Image-Processing-Niblack-Wayne/382085326/bd\">Niblack (1986)</a>       needs white text on black background&#10;         -s <a href=\"http://ieeexplore.ieee.org/xpl/login.jsp?tp=&amp;arnumber=619831&amp;url=http%3A%2F%2Fieeexplore.ieee.org%2Fiel3%2F4891%2F13483%2F00619831.pdf%3Farnumber%3D619831\">Sauvola et al. (1997)</a> needs black text onwhite background&#10;         -w <a href=\"http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.19.1709\">Wolf et al. (2001)</a>   needs black text on white background&#10;&#10;Default version: w (Wolf et al. 2001)&#10;Default value for &#34;k&#34;: 0.5&#10;&#10;example:&#10;      [&#34;data://opencv/SampleImages/sampleOCR.jpg&#34;, &#10;       &#34;&#34;, <span>&#34;data://opencv/SampleImages/sampleOCRCleaned.jpg&#34;]</span></pre></div><p></p>","submitted_at":1433791361000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1585},{"algo_id":14773,"object_id":"638f8d3c-0009-11e5-89ff-123a3b0693f5","username":"opencv","algoname":"SkinColorDetection","algolabel":"Skin Color Detection","language":"java3","card_line":"Gets possible values of skin color for the detected people in a picture using  nose detection and face detection .","summary":"<p>Gets possible values of skin color for the detected people in a picture using <a href=\"https://algorithmia.com/algorithms/opencv/NoseDetection\">nose detection</a> and <a href=\"https://algorithmia.com/algorithms/opencv/NoseDetection\">face detection</a>. It is used by <a href=\"https://algorithmia.com/algorithms/sfw/NudityDetection\">Nudity Detection</a> to supply more accurate results. The return result is an array of arrays. Different arrays are for different detected faces; the values in the arrays are red_min, red_max, green_min, green_max, blue_min, blue_max; respectively.</p>","submitted_at":1438804928000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":1553},{"algo_id":10726,"object_id":"cb1f64b3-cbeb-11e4-abe1-12f53eafe9d2","username":"EHadoux","algoname":"discreteDistribution","algolabel":"discreteDistribution","language":"java3","card_line":"This algorithm let you draw from a discrete probability distribution.","summary":"This algorithm let you draw from a discrete probability distribution.<div><br/></div><div>Several possible inputs:</div><div><ul><li><span>A probability distribution</span></li><li><span>A probability distribution and a number of samples to draw</span></li><li><span>A probability distribution, a number of samples to draw and a seed for the randomizer</span></li></ul></div>","submitted_at":1426518847000,"discoverable_world":true,"source_world":true,"license":"mit","call_count":1503},{"algo_id":6179,"object_id":"66f4f404-c031-11e4-840d-12f53eafe9d2","username":"javier","algoname":"Cardinales","algolabel":"Cardinales","language":"java3","card_line":"This algorithm translates an integer into its textual representation in Spanish: Input can be of type long or String.","summary":"This algorithm translates an integer into its textual representation in Spanish:<br/>Input can be of type long or String.<br/>String inputs are sanitized to ignore whitespaces.<br/>This algorithm uses long scale output, which is the Spanish standard number representation: &#34;1 000 000 000&#34; (one short scale billion) is transcripted as &#34;mil millones&#34;, and &#34;1 000 000 000 000&#34; (one short scale trillion) as &#34;un bill&#243;n&#34;.<br/>Output strings are lowercase, and the output gender can be controlled by an optional Boolean algorithm: when second argument is True, the returned number will be feminine:&#160; [&#34;1&#34;, true] = &#34;una&#34;, [&#34;1&#34;, false] = &#34;uno&#34;. Default is masculine output.<br/><br/><br/>","submitted_at":1426148855000,"discoverable_world":true,"source_world":true,"license":"mit","call_count":1486},{"algo_id":2659,"object_id":"abce4cd9-8749-11e4-be78-12e1fbfbf82c","username":"cloncaric","algoname":"sat","algolabel":"sat","language":"java3","card_line":"Boolean Satisfiability (SAT) Finds a mapping from variable names to boolean values such that the expression evaluates to true, or proves that the expression is always false.","summary":"<h1>Boolean Satisfiability (SAT)</h1><br/>Finds a mapping from variable names to boolean values such that the expression evaluates to true, or proves that the expression is always false.<br/><br/><p>While boolean SAT is known to be NP-hard, this algorithm uses the <a href=\"https://en.wikipedia.org/wiki/Conflict-Driven_Clause_Learning\">DPLL/CDCL approach</a> and can find an answer quickly even on some very large problem sizes. Additionally, this algorithm has been enhanced in two ways over traditional DPLL/CDCL solvers: it  is parallelized and it can break some simple kinds of <a href=\"http://www.cs.cornell.edu/~sabhar/publications/thesis-chap/sym.pdf\">symmetries</a>.<br/></p><h3>Input Language</h3><pre>exp ::= true <br/>      | false<br/>      | &lt;var&gt;<br/>      | (&lt;exp&gt;)<br/>      | not &lt;exp&gt;<br/>      | &lt;exp&gt; &lt;op&gt; &lt;exp&gt;<br/><br/>op ::= iff | implies | xor | or | and<br/><br/>var ::= any word except true, false, not, iff, implies, xor, or, and<br/></pre>&#10;<b>Operator precedence:</b> (most tightly binding first) <br/>not, and, or, xor, implies, iff<br/><br/>Expressions are mostly whitespace-agnostic (although you will need whitespace to separate some tokens; for instance, whitespace is needed between the &#34;not&#34; and the &#34;a&#34; in the expression &#34;not a&#34;).<br/><h3>Output</h3><p>The output is simply a satisfying assignment (a complete map from variable names to values) or null to indicate that no such assignment exists. Future versions of this algorithm may feature a different output format to indicate timeouts, memory shortage problems, or other practical concerns.<br/></p>","submitted_at":1441918057000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1421},{"algo_id":149,"object_id":"6a5d316f-8e3c-11e3-8351-040108385a01","username":"diego","algoname":"RetrieveTweetsByUser","algolabel":"Retrieve Tweets By User","language":"java3","card_line":"Takes in a username as a string input and returns a list of most recent tweets for that user (sent or mentioned) Rate limited by Twitter.","summary":"Takes in a username as a string input and returns a list of most recent tweets for that user (sent or mentioned)<div><br/></div><div>Rate limited by Twitter.</div>","submitted_at":1429837646000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1238},{"algo_id":16038,"object_id":"e881d354-4069-11e5-aae6-12ad1a8c1691","username":"mheimann","algoname":"ImageReflection","algolabel":"Image Reflection","language":"python2-2","card_line":"This algorithm reflects images either horizontally (around the y-axis) or vertically (around the x-axis).","summary":"<p>This algorithm reflects images either horizontally (around the y-axis) or vertically (around the x-axis).  Images may be passed in as one of two forms:</p><p>1) via a path to where they are stored in an Algorithmia data collection (note: the path must be to an Algorithmia data collection, i.e. start with &#34;data://&#34;!  Users interested in passing in an image with an arbitrary URL should check out the <a href=\"https://algorithmia.com/algorithms/ANaimi/URL2Data\">URL 2 Data</a> algorithm).  In this case, the image will be saved to the same data collection with the same name plus the addition of a &#34;_reflected_&#34;  tag and the reflection option (see below for details).  </p><p>2) as base64 encoding, which can be done, for example, with the base64 module in Python.  In this case, the base64 encoding of the reflected image will be returned.  This is intended to support the needs of algorithms that call this algorithm internally, which will likely use this format.  </p><p>Additionally, the user must specify which direction reflection should be performed.  To reflect an image about the x-axis, the user can either type &#34;X&#34; or &#34;vertical&#34;; to reflect an image about the y-axis, the user can either type &#34;Y&#34; or &#34;horizontal&#34;.  Capitalization does not matter. </p>","submitted_at":1439400556000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1171},{"algo_id":3963,"object_id":"398ba1a1-ad83-11e4-840d-12f53eafe9d2","username":"WebPredict","algoname":"GetNGramFrequencies","algolabel":"GetNGramFrequencies","language":"java3","card_line":"Gets lists of N grams from an input text.","summary":"Gets lists of N grams from an input text. Input is: size of N-gram (number of words), cutoff size for max # of results returned, whether or not to ignore capitalization, and whether or not to sort from most frequent to least.","submitted_at":1445290352000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1159},{"algo_id":4588,"object_id":"74d3e6ac-b3f9-11e4-840d-12f53eafe9d2","username":"ngram","algoname":"TweetNgram","algolabel":"Tweet N-Gram","language":"java3","card_line":"Generates random tweets from your existing tweets.","summary":"<p>Generates random tweets from your existing tweets. The input is the Twitter username String, an integer (2 for bigrams or 3 for trigrams) and a String that contains the URL to a Data collection. The generated &#34;tweets&#34; might not adhere to the 140 character limit! </p>","submitted_at":1433794055000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1134},{"algo_id":13828,"object_id":"86f18e45-e2e5-11e4-8df1-12f53eafe9d2","username":"conctest","algoname":"DigitRecognition","algolabel":"Digit Recognition","language":"python2-2","card_line":"Recognizes handwritten digits using a pre trained  Convolutional Neural Network .","summary":"<p>Recognizes handwritten digits using a pre trained <a href=\"https://en.wikipedia.org/wiki/Convolutional_neural_network\">Convolutional Neural Network</a>. Input has to be a representation of 28x28 image that contains a digit (784 pixel values).</p>","submitted_at":1434987585000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":1123},{"algo_id":3248,"object_id":"a0ef78cf-a58c-11e4-be78-12e1fbfbf82c","username":"karan","algoname":"ScrapeSubReddit","algolabel":"ScrapeSubReddit","language":"java3","card_line":"Given a name of a subreddit, scrapes and returns it's RSS feed including post title, link and publish timestamp,","summary":"Given a name of a subreddit, scrapes and returns it's RSS feed including post title, link and publish timestamp,","submitted_at":1445377286000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1051},{"algo_id":2735,"object_id":"e30408bd-992c-11e4-be78-12e1fbfbf82c","username":"TimeSeries","algoname":"RemoveSeasonality","algolabel":"Remove Seasonality","language":"java3","card_line":"Removes seasonal components from a time series.","summary":"<div>Removes seasonal components from a time series. It uses autocorrelation to identify the periods of dominant seasonal components, then subtracts the seasonal average from each point to yield a series of the seasonal residuals. Because of the autocorrelation step it is recommended that the series be de-trended first using &#34;/TimeSeries/LinearDetrend&#34; as a linear trend may result in undesirable autocorrelation artifacts. For instance, it has been observed in test cases that removing seasonality from series with a noticeable linear trend and non-zero mean yields a series in which almost all entries are zero, except for points at the beginning and end.</div><div><br/></div><div>There are two options,&#160;<span>&#34;givenPeriod&#34; and</span><span>&#160;&#34;topNPeriods&#34;. Calling [[series],k,&#34;givenPeriod&#34;] subtracts from each point it's period length k seasonal average, removing a seasonal trend with period k.&#160;</span><span>[[series],k,&#34;topNPeriods&#34;] removes the top k strongest seasonal trends as identified by autocorrelation. Calling the algorithm with just the series means the default option, e.g. removing only the strongest seasonal pattern, will be used.</span><span>&#160;</span></div><div><br/></div>Note that removing a period of length 1 is a linear detrending that subtracts out the mean value, resulting in a series with slope and mean 0. When removing the top N trends, we ignore periods of length 1, as doing so can cause unwanted artifacts.<div><br/></div>","submitted_at":1431589694000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1026},{"algo_id":14390,"object_id":"911d6a4f-f064-11e4-849b-0670f2dc1320","username":"opencv","algoname":"CensorFace","algolabel":"Censor Face","language":"java3","card_line":"This algorithm uses Face Detection to detect any faces in an image and blacks them out.","summary":"This algorithm uses <a href=\"https://algorithmia.com/algorithms/opencv/FaceDetection\">Face Detection</a> to detect any faces in an image and blacks them out.","submitted_at":1435614430000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":958},{"algo_id":14741,"object_id":"483ce3e6-fe5d-11e4-89ff-123a3b0693f5","username":"opencv","algoname":"NoseDetection","algolabel":"Nose Detection","language":"java3","card_line":"Uses a pretrained model to detect noses in a given image.","summary":"<p>Uses a pretrained model to detect noses in a given image. Send your input as a url to a picture that is either hosted on our data API or is a direct link, and the output is the same image, with rectangles around the detected noses, written to your collection. A text file that contains all the coordinates of the rectangles is also output to the same collection for convenience.</p><div style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\"><br/></div><div style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\">P.S. Please make sure that the second input to this algorithm is a data collection that YOU own. You can create data collections from the &#34;Data&#34; link above.</div><p></p>","submitted_at":1438803011000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":894},{"algo_id":5062,"object_id":"a602ba96-b6fe-11e4-840d-12f53eafe9d2","username":"ngram","algoname":"RandomTextFromBigram","algolabel":"Random Text From Bigram","language":"scala2","card_line":"This algorithm generates random text from a trained bigram model.","summary":"This algorithm generates random text from a trained bigram model. The inputs are the Data URL that contains the trained file, and a beginning and an end token that will specify legitimate sentence beginnings and ends. If no tokens are given, the algorithm selects a random bigram to start with and ends the sentence randomly after 5-12 words.&#160;&#160;You can learn more about Data collections on the&#160;<a href=\"https://algorithmia.com/algorithms/ngram/GenerateTrigramFrequencies\">Trigram generator algorithm page</a>.","submitted_at":1433794124000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":868},{"algo_id":16290,"object_id":"e1a03998-4542-11e5-aae6-12ad1a8c1691","username":"mheimann","algoname":"LinearSVMwithStochasticGradientDescent","algolabel":"Linear SVM with Stochastic Gradient Descent","language":"python2-2","card_line":"Learns a linear SVM trained with stochastic gradient descent, based on the implementation in scikit-learn, for classification of binary-labeled data.","summary":"<p>Learns a linear SVM trained with stochastic gradient descent, based on the implementation in scikit-learn, for classification of binary-labeled data.   Can be used for training or testing, depending on the arguments passed in:</p><p>For training: takes in a data collection file path to write a trained model to and two other data collection paths to read data and labels in from, along with hyperparameter settings (in order: regularization coefficient, initial learning rate, learning rate decay parameter, and number of iterations of stochastic gradient descent).  Writes the trained model to the file at the specified data collection path.  </p><p>For testing: takes in one path to a file in a data collection that contains a trained model to use, another file path to a test data set, and a third file path to which to write predictions.  </p>","submitted_at":1440546789000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":786},{"algo_id":3586,"object_id":"6ad6bbbd-a7f1-11e4-840d-12f53eafe9d2","username":"ocr","algoname":"RecognizeCharacters","algolabel":"RecognizeCharacters","language":"java3","card_line":"Uses Tesseract to perform OCR on a given image.","summary":"<p>Uses <a href=\"https://code.google.com/p/tesseract-ocr/\">Tesseract</a> to perform OCR on a given image. As the trained model, it uses the latest model uploaded to Tesseract's <a href=\"https://drive.google.com/folderview?id=0B7l10Bj_LprhQnpSRkpGMGV2eE0&amp;usp=sharing\">Google Drive</a>.</p><div><b>Suggestion:</b> If your image has noise that you would like to get rid of, you may wish to try out the <a href=\"https://algorithmia.com/algorithms/opencv/ImageBinarization\">ImageBinarization</a> algorithm first, before feeding it to this algorithm.</div><div><br/></div><p>The input should be an image and can be from an arbitrary url, the data api, or binary. The output is the recognized text.</p><p>If you would like to write the output to the data api, you can provide a second input that contains the target data api url (with filename). The output is same as this second input.</p><p></p>","submitted_at":1443655923000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":708},{"algo_id":2727,"object_id":"9835ebff-97d9-11e4-be78-12e1fbfbf82c","username":"anowell","algoname":"Dijkstra","algolabel":"Dijkstra","language":"java3","card_line":"Dijkstra's Path Planning Algorithm based on /kenny/Dijkstra but using input that specifies absolute edge distances rather than computing euclidian distance.&#10;","summary":"Dijkstra's&#160; Path Planning Algorithm based on /kenny/Dijkstra but using input that specifies absolute edge distances rather than computing euclidian distance.&#10;<br/><br/><div>Input:</div><div><ul><li>Nested Map of directed edges with distance, e.g., { &#34;a&#34;: { &#34;b&#34;: 3 }} implies the edge from &#34;a&#34; to &#34;b&#34; has a distance of 3<br/></li><li>Start vertex</li><li>Goal vertex</li></ul></div>","submitted_at":1426639404000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":705},{"algo_id":3921,"object_id":"0b75849d-acaa-11e4-840d-12f53eafe9d2","username":"WebPredict","algoname":"Sylllables","algolabel":"Sylllables","language":"java3","card_line":"Breaks up a word into syllables.","summary":"Breaks up a word into syllables. Still needs a bit of work for long/short vowel detection in order to break including / excluding consonant surrounded by vowels in this case.","submitted_at":1445290265000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":690},{"algo_id":3205,"object_id":"704d8945-a29a-11e4-be78-12e1fbfbf82c","username":"TimeSeries","algoname":"OutlierDetection","algolabel":"Outlier Detection","language":"java3","card_line":"Detects outliers in time series data.","summary":"<p>Detects outliers in time series data. Takes a double[] of time series data and a double t, returns an array which matches the input array on all outlier points and is zero on all non-outliers. An outlier is defined as a datapoint that differs from the mean of the data by more than t times the standard deviation. The default setting of t is 2.</p>","submitted_at":1445374232000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":660},{"algo_id":584,"object_id":"d88cb0c4-fd3b-11e3-9109-04011d260101","username":"brejnko","algoname":"UrlLinkList","algolabel":"Url Link List","language":"java3","card_line":"Link extractor.","summary":"<b>Link extractor.&#160;</b><br/><br/>On input URL the HTML is fetched and all of the distinct links (a[href]) are extracted and presented as Set&lt;String&gt;.<div><br/></div><div>Dependencies:<br/><ul><li>jsoup</li><li>Apache commons validator</li></ul><div><br/></div>The algorithm does a url validation check and connection timeout is set to 5 seconds.<br/></div>","submitted_at":1430947571000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":573},{"algo_id":14634,"object_id":"6b876dd0-f9a9-11e4-89ff-123a3b0693f5","username":"etl","algoname":"AggregateSocrataDataByMonth","algolabel":"Aggregate Socrata Data By Month","language":"python2-2","card_line":"Aggregates Socrata Data by month.","summary":"<p>Aggregates Socrata Data by month.</p>","submitted_at":1432146205000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":536},{"algo_id":15850,"object_id":"abbb08c4-356f-11e5-aae6-12ad1a8c1691","username":"ANaimi","algoname":"FaceDetection","algolabel":"Face Detection","language":"java3","card_line":"Based on the /opencv/FaceDetection, this algorithm takes a base64 encoding of an image and returns an array of rectangles (x, y, width, height) bounding each face identified.","summary":"<p>Based on the /opencv/FaceDetection, this algorithm takes a base64 encoding of an image and returns an array of rectangles (x, y, width, height) bounding each face identified.</p><p><b>Input Format</b><br/>Base64 representation of an image.</p><p><b>Output Format</b><br/>Array of rectangles. Example:<br/>[<br/>    {'y': 10, 'x': 10, 'height': 100, 'width': 100},<br/>    {'y': 20, 'x': 20, 'height': 100, 'width': 100},<br/>    {'y': 30, 'x': 30, 'height': 100, 'width': 100}<br/><span>]</span></p>","submitted_at":1438652407000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":525},{"algo_id":14684,"object_id":"3a839447-fc1f-11e4-89ff-123a3b0693f5","username":"abe238","algoname":"CenterPoint","algolabel":"CenterPoint","language":"java3","card_line":"This algorithm finds the center (or mid) point for an array of Lat/Long positions.","summary":"<p>This algorithm finds the center (or mid) point for an array of Lat/Long positions. </p><p>Input: </p><p><span style=\"color: rgb(187, 187, 187);text-align: left;float: none;background-color: rgb(255, 255, 255);\">[{&#34;Latitude&#34;: 1.0,&#34;Longitude&#34;: 2.0},{&#34;Latitude&#34;: 3.0,&#34;Longitude&#34;: 4.0}]</span><br/></p><p>Output:</p><div class=\"jquery-console-prompt-box\" style=\"color: rgb(187, 187, 187);text-align: left;\">{&#34;Latitude&#34;:2.0003044085023722,&#34;Longitude&#34;:2.999390393801055}<br/></div>","submitted_at":1431821834000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":505},{"algo_id":16486,"object_id":"347ba624-51cc-11e5-aae6-12ad1a8c1691","username":"opencv","algoname":"SmartThumbnail","algolabel":"Smart Thumbnail","language":"java4","card_line":"Takes an image (data uri, base64 encoded, or web url) and dimensions for a thumbnail and returns the binary of the resulting PNG encoded image.","summary":"<p>Takes an image (data uri, base64 encoded, or web url) and dimensions for a thumbnail and returns the binary of the resulting PNG encoded image.</p><p>If a face is detected in the given image, the resulting thumbnail will be centered around the face. </p><p>Pipe your input to this algorithm as an array with first element the string containing the image in one of the formats mentioned above, an integer for desired thumbnail width and an integer for desired thumbnail height.</p>","submitted_at":1443803446000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":495},{"algo_id":16303,"object_id":"df6d52ae-45cd-11e5-aae6-12ad1a8c1691","username":"mheimann","algoname":"SVMSGDWrapper","algolabel":"SVM-SGD Wrapper","language":"python2-2","card_line":"This is a wrapper function for the Linear SVM with Stochastic Gradient Descent , designed to be passed into Bayesian optimization .","summary":"<p>This is a wrapper function for the <a href=\"https://algorithmia.com/algorithms/mheimann/LinearSVMwithStochasticGradientDescent\">Linear SVM with Stochastic Gradient Descent</a>, designed to be passed into <a href=\"https://algorithmia.com/algorithms/mheimann/BayesianOptimization\">Bayesian optimization</a>.  It takes in an array of four hyperparameters: a regularization coefficient, initial learning rate, weight decay parameter, and number of iterations to perform stochastic gradient descent.  The <a href=\"https://archive.ics.uci.edu/ml/datasets/SMS+Spam+Collection\">data</a>, which is a collection of SMS messages to be classified as &#34;spam&#34; or &#34;ham&#34;, is supplied manually, broken into training, validation, and test data (training and validation are used here).  A model is trained with the given hyperparameters on the training data, and the output is the classification error on the validation data.  </p><p>This algorithm is designed to be used as a demonstration for Bayesian optimization.  Stochastic gradient descent shines most on larger scale data, but this job will finish in enough time to allow Bayesian optimization with a &#34;reasonable&#34; number of jobs to finish in a &#34;reasonable&#34; amount of time.  </p>","submitted_at":1440547005000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":494},{"algo_id":2738,"object_id":"b077b67e-993b-11e4-be78-12e1fbfbf82c","username":"TimeSeries","algoname":"SimpleMovingAverage","algolabel":"Simple Moving Average","language":"java3","card_line":"Returns the Simple Moving Average of a time series ( http://en.wikipedia.org/wiki/Moving_average#Simple_moving_average ).","summary":"Returns the Simple Moving Average of a time series (<a href=\"http://en.wikipedia.org/wiki/Moving_average#Simple_moving_average\">http://en.wikipedia.org/wiki/Moving_average#Simple_moving_average</a>). The lag time may be specified as a second argument, or, if it is omitted, will be defaulted to 3. This parameter determines how far in the past the average is calculated for each point. This is, if there is a lag of k, each point is replaced by the average of itself and the k points that proceeded it, or, if the point is within the lag factor of the the start of the series, with the average of it and all earlier points. This can be used to clean or smooth a time series.","submitted_at":1430441550000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":472},{"algo_id":15623,"object_id":"0219c355-2992-11e5-a825-06910d997133","username":"mheimann","algoname":"BayesianOptimization","algolabel":"Bayesian Optimization","language":"python2-2","card_line":"This algorithm performs Bayesian optimization to automatically set the hyperparameters of a machine learning algorithm for good performance on a training dataset (as measured by pe...","summary":"<p>This algorithm performs Bayesian optimization to automatically set the hyperparameters of a machine learning algorithm for good performance on a training dataset (as measured by performance on a validation set).  Users must pass in three or optionally four things: </p><ul><li><span>the name of an Algorithmia algorithm that takes in ONLY the hyperparameters to be optimized and returns a number that should be minimized (for supervised learning tasks, this could be the error on the validation data after training on the training data with the hyperparameters supplied).  All other parameters must be supplied manually.  For many algorithms on the system that probably return either a trained model or predictions for input data, this will necessitate the writing of a short wrapper function.  </span><br/></li><li>the number of jobs Bayesian optimization should run (i.e. times to call the Hyperparameters --&gt; Function Value to Minimize algorithm).</li><li>the path to a data collection containing a config file.  This is a json file with the format config_&lt;ALGORITHM_NAME&gt;.json (not including the username of the algorithm creator), which for each variable must contain: the variable name, type (int, float, etc.), minimum value, maximum value, and number (if the user has, say, 2 variables with the exact same specifications, they can make this number 2 (otherwise it should be 1) instead of making duplicate entries).  </li><li>optionally, the data collection path to write a results file (which will be titled results_&lt;ALGORITHM_NAME&gt;.dat) containing the results (function value and time taken) and hyperparameter settings of all jobs run for further analysis.  If this value is not supplied, by default it will write to the same collection as the config file.  </li></ul><p>After Bayesian optimization is performed, the results of the best job (job number, time, and function value--plus hyperparameter settings) will be returned in JSON format, while as mentioned above the results of all jobs will be written in a file to a data collection.</p><p>Note about the sample input: probably more jobs should be run to achieve better results.  This number of jobs was chosen so it would finish quickly while still illustrating the format of the sample output.  </p>","submitted_at":1440805885000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":469},{"algo_id":14136,"object_id":"0f5699c4-e7e6-11e4-849b-0670f2dc1320","username":"marcky","algoname":"WebImageSorter","algolabel":"WebImageSorter","language":"java3","card_line":"This algorithm takes a the following parameters: URL, Minimum image height Maximum image height Minimum image width Maximum image width Sort order (\"desc\" or \"asc\", case-insensitiv...","summary":"This algorithm takes a the following parameters:<div><ol><li><span>URL,&#160;</span></li><li><span>Minimum image height</span></li><li><span>Maximum image height</span></li><li><span>Minimum image width&#160;</span></li><li><span>Maximum image width</span></li><li><span>Sort order (&#34;desc&#34; or &#34;asc&#34;, case-insensitive)</span></li></ol><span>It returns a list of images (within the minimum/maximum height/width) with their complete qualified URLs, height, width, and total pixels; sorted by total pixels, in the order specified (ascending or descending).</span><br/></div><div><br/>Note: image dimensions are determined by the actual file image dimensions, disregarding the markup of &#34;height&#34; and &#34;width&#34; in the image tag.</div>","submitted_at":1429606424000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":454},{"algo_id":3297,"object_id":"4a5e2f28-a5d1-11e4-be78-12e1fbfbf82c","username":"sphinx","algoname":"SpeechRecognition","algolabel":"SpeechRecognition","language":"java3","card_line":"This algorithm uses CMU Sphinx open source library to recognize speech in audio files that are uploaded to the Data API or Youtube videos that are licensed under Creative Commons.","summary":"<p>This algorithm uses CMU Sphinx open source library to recognize speech in audio files that are uploaded to the Data API or Youtube videos that are licensed under Creative Commons. The models that are used to perform speech recognition are the latest Generic English models published by CMU on their <a href=\"http://sourceforge.net/projects/cmusphinx/files/\">Sourceforge website</a>.  After doing a Youtube search with keywords on <a href=\"www.youtube.com\">www.youtube.com</a>, you can open filters and select Creative Commons to see what videos are available.</p><div><br/></div><div>The first input to the algorithm is the link to the media file (either a Data API url or a Youtube video url). There is an optional second input that points to a .tar.gz folder in the Data API that includes a new language model that you trained. The folder structure should be flat, including the .lm.dmp file (language model file) and the .dict file (dictionary file). The files that are required for the acoustic model should also be there (means, mixture_weights, etc).</div><p><br/></p><p>The output is a Json object that contains the following fields:</p><p>text: The transcribed text of the audio file</p><p>wordtimes: When the actual words were spoken (or silences)</p><p>best3: Best 3 guesses for all of the phrases from the file</p><div><br/></div><div><b>Warning:</b> Please note that depending on the length of the media file, if you are using the website console and the video is longer than 4 minutes, it might time out.</div><div><br/></div><p></p>","submitted_at":1445384339000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":435},{"algo_id":2656,"object_id":"6b59e06e-8721-11e4-be78-12e1fbfbf82c","username":"opencv","algoname":"ChangeImageFormat","algolabel":"Change Image Format","language":"java3","card_line":"Converts an image to a specified format and returns the URL that the new image was posted to.","summary":"Converts an image to a specified format and returns the URL that the new image was posted to.","submitted_at":1426115283000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":422},{"algo_id":3482,"object_id":"ddf69570-a679-11e4-840d-12f53eafe9d2","username":"nlp","algoname":"ProfanityDetection","algolabel":"Profanity Detection","language":"java3","card_line":"The implements a rudimentary profanity detector based on string matching.","summary":"<p>The implements a rudimentary profanity detector based on string matching. The default usage just checks the input string to see if any of its substrings match a list of known obscenities and profanities, and returns a Map with identified profanities as keys and the number of times that profanity appeared as value. Our default dictionary of profanity includes about 340 words drawn from <a href=\"http://www.noswearing.com\">http://www.noswearing.com</a> on 01/28/2015. Note that for compound profanities this may over count. <span>This is not as straight forward to use as a boolean return value, but provides additional information that might be useful - for instance, a single use of the word &#34;damn&#34;, or references to genitalia in a medical context, may not be considered objectionable, whereas stronger profanity or large volumes of profanity might be. For the maximum strictness, just check for an empty Map.</span></p><div><span><br/></span></div><div><span>Note that this is word-based only. It may miss some words, miss certain misspellings, or double entendres and other material that is offensive in context.</span></div><div><span><br/></span></div><div><span>The algorithm may be customized with your own list of objectionable words. To do this, send three inputs, the text to assets, a String[] with each entry corresponding to an objectionable word of interest, and a boolean (which we internally call customizedExclusive). If the latter is true, it means that the custom set of objectionable words is to be used exclusively. If it is set to false, the set will be combined with our default list of obscenities.</span></div><div><span><br/></span></div><div><span><br/></span></div><p></p>","submitted_at":1430946696000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":401},{"algo_id":1151,"object_id":"de9423e9-33f7-11e4-8a15-04011d260101","username":"zskurultay","algoname":"ImageSimilarity","algolabel":"Image Similarity","language":"java3","card_line":"Given two URLs that point to images, this algorithm outputs a similarity score between 0 and 1, 1 for images that are perceived to be the same and 0 for images that are utterly unr...","summary":"Given two URLs that point to images, this algorithm outputs a similarity score between 0 and 1, 1 for images that are perceived to be the same and 0 for images that are utterly unrelated.<div><br/></div><div>Algorithm makes use of OpenCV's keypoint extraction and extracts matches between the two images' keypoints.&#160;</div>","submitted_at":1435106864000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":382},{"algo_id":12855,"object_id":"1d0d8129-d262-11e4-8df1-12f53eafe9d2","username":"williamaustinwebb","algoname":"SiteMatcher","algolabel":"SiteMatcher","language":"java3","card_line":"This algorithm takes a web address and returns a summary relevant structural details of the site.","summary":"This algorithm takes a web address and returns a summary relevant structural details of the site. Specifically, it is intended to identify the relevant pages on a hotel website, returning selected metadata and the relative importance of various pages as measured by PageRank.&#160;<div><br/></div><div><span>The returned information includes:</span></div><div><ul><li>url - the original address given, assumed to be the main page of the website.</li><li>language - the language of the main page. See&#160;<a href=\"https://algorithmia.com/algorithms/nlp/LanguageIdentification\">https://algorithmia.com/algorithms/nlp/LanguageIdentification</a>&#160;for a guide to the returned language symbols.</li><li>tags - important terms from the website.</li><li>important pages - we check to identify which pages on the site are used for rooms, reservations/booking, photos, and location. For this we currently support English, Spanish, Italian, German, and Portuguese.</li><li>pageRanks - an ordered list of pages on the site by page rank, the higher the rank, the more likely the page is to be important.</li></ul></div>","submitted_at":1428549884000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":357},{"algo_id":88,"object_id":"6775a1f6-8e3c-11e3-8351-040108385a01","username":"diego","algoname":"isPrime","algolabel":"isPrime","language":"java3","card_line":"Checks to see if input integer is prime.","summary":"Checks to see  if input integer is prime. If prime returns True , if not Prime returns false.","submitted_at":1430947072000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":345},{"algo_id":15971,"object_id":"dbbe2831-3bc1-11e5-aae6-12ad1a8c1691","username":"ANaimi","algoname":"URL2Data","algolabel":"URL 2 Data","language":"java3","card_line":"This algorithm will download a binary URL file to a specified local path.","summary":"<p>This algorithm will download a binary URL file to a specified local path. If no path is given, it will return the Base64 representation of that remote file.</p>","submitted_at":1438815201000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":342},{"algo_id":3083,"object_id":"173e290a-a197-11e4-be78-12e1fbfbf82c","username":"FCC","algoname":"NGramCommentGenerator","algolabel":"NGramCommentGenerator","language":"scala2","card_line":"Outputs a randomly generated comment based on 3-ngram data trained on FCC comments on net neturality (Input is ignored)","summary":"<div><span>Outputs a randomly generated comment based on 3-ngram data trained on FCC comments on net neturality</span><br/></div><div><span><br/></span></div><div><span><br/></span></div><div>(Input is ignored)<span><br/></span></div>","submitted_at":1430947868000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":337},{"algo_id":13750,"object_id":"326d095d-e205-11e4-8df1-12f53eafe9d2","username":"docs","algoname":"JavaAddOne","algolabel":"Java Add One","language":"java3","card_line":"Takes a long and adds one to it Used in Algorithmia documentation to demonstrate API requests","summary":"<p>Takes a long and adds one to it</p><div><br/></div><div>Used in Algorithmia <a href=\"/docs\">documentation</a> to demonstrate API requests</div><p></p>","submitted_at":1435343494000,"discoverable_world":true,"source_world":true,"license":"mit","call_count":332},{"algo_id":2298,"object_id":"27e24469-7520-11e4-bad7-04011d260101","username":"diego","algoname":"TwitterRateLimitinfo","algolabel":"Twitter Rate Limit info","language":"java3","card_line":"Used for other Algorithmia demos.","summary":"Used for other Algorithmia demos. Returns [remaining bandwidth,rate limit,seconds tuntil reset] for Algorithmia's twitter access credentials.","submitted_at":1429837690000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":325},{"algo_id":30741,"object_id":"da074f22-7591-11e5-aae6-12ad1a8c1691","username":"opencv","algoname":"FaceDetectionBox","algolabel":"Face Detection Box","language":"java4","submitted_at":1445170799000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":313},{"algo_id":16447,"object_id":"0dd78780-500a-11e5-aae6-12ad1a8c1691","username":"z","algoname":"DynamoDB","algolabel":"Dynamo DB","language":"python2-2","card_line":"Demo algorithm for integration with DynamoDB.","summary":"<p>Demo algorithm for integration with DynamoDB. Calls NudityDetection with files in an S3 bucket and writes results to a table.</p>","submitted_at":1442420769000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":309},{"algo_id":14828,"object_id":"e6d4b4de-0499-11e5-89ff-123a3b0693f5","username":"web","algoname":"GenerateRecommendations","algolabel":"Generate Recommendations","language":"java3","submitted_at":1433365229000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":290},{"algo_id":3848,"object_id":"e90ae5b4-ac09-11e4-840d-12f53eafe9d2","username":"media","algoname":"ExtractSoundFromVideo","algolabel":"ExtractSoundFromVideo","language":"java3","card_line":"This algorithm takes in two Data urls.","summary":"<p>This algorithm takes in two Data urls. It fetches the video file from the first one and writes the extracted sound to the next one. Please make sure that the sound file url has a valid extension since this is taken into account during conversion.</p>","submitted_at":1443822461000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":273},{"algo_id":4626,"object_id":"076b05a5-b462-11e4-840d-12f53eafe9d2","username":"bonfatti81","algoname":"aemsecurity","algolabel":"aemsecurity","language":"java3","card_line":"Check AEM security configuration This is a private version of https://algorithmia.com/algorithms/bonfatti81/CheckMyAEM.","summary":"Check AEM security configuration<div><br/></div><div>This is a private version of&#160;https://algorithmia.com/algorithms/bonfatti81/CheckMyAEM.</div><div><br/></div><div><span>If you want to use this version of the API please contact Coresecure:&#160;</span><a href=\"http://www.coresecure.com/\">http://www.coresecure.com/</a></div>","submitted_at":1445378552000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":261},{"algo_id":2594,"object_id":"ecbb7919-84a3-11e4-be78-12e1fbfbf82c","username":"nus","algoname":"BackgroundSearch","algolabel":"BackgroundSearch","language":"java3","card_line":"This algorithm can be used to search the web specifically for people.","summary":"<div>This algorithm can be used to search the web specifically for people.</div><div><br/></div>In contrast to the SearchEngineAggregator algorithm, this algorithm searches Facebook and Twitter for people instead of pages and tweets, respectively.","submitted_at":1445289344000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":251},{"algo_id":14255,"object_id":"82306866-eae3-11e4-849b-0670f2dc1320","username":"s3utilities","algoname":"DownloadFileFromBucket","algolabel":"Download File From Bucket","language":"java3","card_line":"This algorithm downloads a file from an Amazon S3 bucket to a Data API collection.","summary":"<div>This algorithm downloads a file from an Amazon S3 bucket to a Data API collection. Please specify the path to the credentials file, the region of the bucket, the key of the file to be downloaded and the Data API collection URL that the file should be uploaded to as an input array to this algorithm. The first argument, credentials file, should be a file in the Data API that contains name of the bucket, access key ID and the secret access key.</div><p><br/></p><p>Warning: You may get an exception that says &#34;The bucket you are attempting to access must be addressed using the specified endpoint.&#34; This means the region you have entered is incorrect for that specific bucket.</p><div><br/></div><div>The possible regions are:</div><div><br/><table class=\"overviewSummary\" border=\"0\" cellpadding=\"3\" cellspacing=\"0\" summary=\"Enum Constant Summary table, listing enum constants, and an explanation\"><tbody><tr class=\"altColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#AP_NORTHEAST_1\">AP_NORTHEAST_1</a></strong></code> </td></tr><tr class=\"rowColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#AP_SOUTHEAST_1\">AP_SOUTHEAST_1</a></strong></code> </td></tr><tr class=\"altColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#AP_SOUTHEAST_2\">AP_SOUTHEAST_2</a></strong></code> </td></tr><tr class=\"rowColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#CN_NORTH_1\">CN_NORTH_1</a></strong></code> </td></tr><tr class=\"altColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#EU_CENTRAL_1\">EU_CENTRAL_1</a></strong></code> </td></tr><tr class=\"rowColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#EU_WEST_1\">EU_WEST_1</a></strong></code> </td></tr><tr class=\"altColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#GovCloud\">GovCloud</a></strong></code> </td></tr><tr class=\"rowColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#SA_EAST_1\">SA_EAST_1</a></strong></code> </td></tr><tr class=\"altColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#US_EAST_1\">US_EAST_1</a></strong></code> </td></tr><tr class=\"rowColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#US_WEST_1\">US_WEST_1</a></strong></code></td></tr><tr class=\"altColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#US_WEST_2\">US_WEST_2</a></strong></code> </td></tr></tbody></table></div>","submitted_at":1444030577000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":251},{"algo_id":15685,"object_id":"152723bd-2c30-11e5-a825-06910d997133","username":"ANaimi","algoname":"SimpleVoteRingDetection","algolabel":"SimpleVoteRingDetection","language":"java3","card_line":"This algorithm computes a collusion ratio for a given set of posts and user votes.","summary":"<p></p><p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\">This algorithm computes a collusion ratio for a given set of posts and user votes. For example, this could be used to flag user activity in social collaboration websites, such as Product Hunt / Hacker News / Reddit. It works by finding the ratio of common votes (among a group of users) over the sum of uncommon votes and total votes.</p><p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\"><b><b><br/></b></b></p><p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\"><b><b>Input Format</b></b></p><p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\">Input must be a CSV file with comma delimited numbers (without header). Each line represents the votes a single post received. The first number in every line is the post_id, while the remaining numbers are the user ids of the users who voted for that post/item.</p><p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\">The input string can be a path to a local CSV file (data://), remote file (http://), or straight-up CSV content.</p><p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\">The second parameter is the LIMIT, which is a double value between 0 and 1. This tells the algorithm to only return ratios that are larger than the specified limit.</p><p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\"><b><b>Output Format</b></b></p><p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\">The output is an array of CollusionRatio. Each CollusionRatio element has the following properties:</p><ul style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\"><li>Ratio: see computation above</li><li>CommonVotes: # of votes in common among given users, a.k.a. Votes(U,P)</li><li>OutsideVotes: # of votes not in common among given users, a.k.a. Votes(U, -P)</li><li>AllVotes: # of votes by all users made on any post, a.k.a. Votes(U, *)</li><li>UserCount: # of users part of this computation</li><li>Users: array with ids of users involved in the computation</li><li>PostId: the post id that was used to identify the group of users</li></ul><p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\"><br/></p>","submitted_at":1437171471000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":251},{"algo_id":14268,"object_id":"18ac6d01-eb66-11e4-849b-0670f2dc1320","username":"gparuthi","algoname":"airpressure_parser","algolabel":"airpressure_parser","language":"python2-2","card_line":"Generates a plot for the air pressure of a given city.","summary":"Generates a plot for the air pressure of a given city.<div>It retrieves the data from the site:&#160;http://w1.weather.gov/obhistory/KARB.html</div><div>KARB is the city code for Ann Arbor in this link.&#160;</div><div>Output is a json with a key as &#34;png&#34; and value as the base64 encoded png file generated.</div>","submitted_at":1430190001000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":243},{"algo_id":14564,"object_id":"aa15bfe7-f661-11e4-89ff-123a3b0693f5","username":"marksskram","algoname":"SocrataOpenDataQuery","algolabel":"SocrataOpenDataQuery","language":"java3","card_line":"A pass at creating an algorithm that uses soda-java  (Socrata's Java SDK) to query data and pull down data.Â  My initial thoughts are to have another algorithm that callsÂ https://...","summary":"<p>A pass at creating an algorithm that uses <a href=\"https://github.com/socrata/soda-java\">soda-java</a> (Socrata's Java SDK) to query data and pull down data.Â </p><p>My initial thoughts are to have another algorithm that callsÂ https://algorithmia.com/algorithms/marksskram/SomeStats to calculate summary statistics for each number column.</p>","submitted_at":1431264337000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":238},{"algo_id":16602,"object_id":"6d1c4ad7-57e0-11e5-aae6-12ad1a8c1691","username":"youtube","algoname":"DownloadYoutubeVid","algolabel":"Download Youtube Vid","language":"python2-2","card_line":"This algorithm downloads the given Youtube video to the DataAPI.","summary":"<p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\">This algorithm downloads the given Youtube video to the DataAPI. The video has to be licensed exclusively with Creative Commons license. The first link is the Youtube link and the second link is the target Data url.</p>","submitted_at":1445384826000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":223},{"algo_id":465,"object_id":"76fb3940-dadf-11e3-b18f-040108385a01","username":"util","algoname":"Curl","algolabel":"Curl","language":"java3","card_line":"This algorithm pulls a webpage via URL and returns as text","summary":"This algorithm pulls a webpage via URL and returns as text","submitted_at":1426720933000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":219},{"algo_id":14862,"object_id":"a85398e6-069c-11e5-89ff-123a3b0693f5","username":"marcky","algoname":"MachineTranslateWordByWord","algolabel":"MachineTranslateWordByWord","language":"java3","card_line":"Translates word by word from one language (auto detected) to a target language.","summary":"<p>Translates word by word from one language (auto detected) to a target language. Accepts input as a string of text (space separated) to translate, and a string as the language (either language name in English, or language code). Valid languages listed below:</p><p><br/></p><table style=\"color: rgb(0, 0, 0);\"><tbody><tr><th style=\"background-color: rgb(242, 242, 242);\">Language Name</th><th style=\"background-color: rgb(242, 242, 242);\">Language code</th></tr><tr><td>Albanian</td><td>sq</td></tr><tr><td>Arabian</td><td>ar</td></tr><tr><td>Armenian</td><td>hy</td></tr><tr><td>Azeri</td><td>az</td></tr><tr><td>Belarusian</td><td>be</td></tr><tr><td>Bosnian</td><td>bs</td></tr><tr><td>Bulgarian</td><td>bg</td></tr><tr><td>Catalan</td><td>ca</td></tr><tr><td>Croatian</td><td>hr</td></tr><tr><td>Czech</td><td>cs</td></tr><tr><td>Chinese</td><td>zh</td></tr><tr><td>Danish</td><td>da</td></tr><tr><td>Dutch</td><td>nl</td></tr><tr><td>English</td><td>en</td></tr><tr><td>Estonian</td><td>et</td></tr><tr><td>Finnish</td><td>fi</td></tr><tr><td>French</td><td>fr</td></tr><tr><td>Georgian</td><td>ka</td></tr><tr><td>German</td><td>de</td></tr><tr><td>Greek</td><td>el</td></tr><tr><td>Hebrew</td><td>he</td></tr><tr><td>Hungarian</td><td>hu</td></tr><tr><td>Icelandic</td><td>is</td></tr><tr><td>Indonesian</td><td>id</td></tr><tr><td>Italian</td><td>it</td></tr><tr><td>Japanese</td><td>ja</td></tr><tr><td>Korean</td><td>ko</td></tr><tr><td>Latvian</td><td>lv</td></tr><tr><td>Lithuanian</td><td>lt</td></tr><tr><td>Macedonian</td><td>mk</td></tr><tr><td>Malay</td><td>ms</td></tr><tr><td>Maltese</td><td>mt</td></tr><tr><td>Norwegian</td><td>no</td></tr><tr><td>Polish</td><td>pl</td></tr><tr><td>Portuguese</td><td>pt</td></tr><tr><td>Romanian</td><td>ro</td></tr><tr><td>Russian</td><td>ru</td></tr><tr><td>Spanish</td><td>es</td></tr><tr><td>Serbian</td><td>sr</td></tr><tr><td>Slovak</td><td>sk</td></tr><tr><td>Slovenian</td><td>sl</td></tr><tr><td>Swedish</td><td>sv</td></tr><tr><td>Thai</td><td>th</td></tr><tr><td>Turkish</td><td>tr</td></tr><tr><td>Ukrainian</td><td>uk</td></tr><tr><td>Vietnamese</td><td>vi</td></tr></tbody></table>","submitted_at":1432974533000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":217},{"algo_id":15497,"object_id":"75130d20-20dd-11e5-a825-06910d997133","username":"mheimann","algoname":"WMD","algolabel":"WMD","language":"python2-2","card_line":"Implementation of techniques from Kusner et.","summary":"<p>Implementation of techniques from Kusner et. al, 2015: <a href=\"http://jmlr.org/proceedings/papers/v37/kusnerb15.pdf\">From Word Embeddings to Document Distances</a>.  Represents documents as list of word vectors using the celebrated <a href=\"https://code.google.com/p/word2vec/\">word2vec</a> embedding to represent the words in the documents.  Implements heuristic distance metrics described in the paper (word centroid distance and relaxed word mover's distance) to compute distances between documents for k-nearest neighbor classification.  (The original paper showed that rWMD outperformed a wide variety of other ways of representing text data on a number of benchmark document classification tasks).  </p><p>This algorithm has a preprocess mode: takes in a text file where each line is a label followed by the text of a document on the same line (with the two separated by a tab).  Additionally, a user must pass in the path to an ID map file in a data collection.  This file will hold a map from (human-readable) IDs for documents (e.g. &#34;sports&#34;, &#34;politics&#34;) to numeric algorithm-readable labels (e.g. 0, 1).   If a file exists at this path, the labels will be preprocessed using this ID map.  (So test data can have its IDs converted the same way that the training data was, which is important.)  If no file exists at this path, one will be formed when preprocessing the data and written to that path.  Currently, the preprocess mode assumes that even test data has tab-separated labels as well as the document text on a line, though the labels need not be used when testing (unless the user wants to compute the accuracy for test format).  So if test data is unlabeled, random labels may be added to each line of the data file to satisfy the required data format.  When the data is preprocessed, it will be written to the same data collection as the original data and a message to this effect will be returned.</p><p>Additionally, this algorithm may be run in performance mode, where it is used for kNN classification.  Here the user must pass in training data (in a pickle file as returned by the preprocess mode of this algorithm), training labels, test data, and the number of neighbors to use for kNN classification.  Optionally, the user may pass in the test labels, in which case the program will return the accuracy.  Otherwise, a message informing the user that the predicted labels for the test data have been written to the data collection will be returned (either way, the predicted labels will be written to the data collection).  </p>","submitted_at":1440720844000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":208},{"algo_id":1458,"object_id":"ac821947-5a83-11e4-b63d-04011d260101","username":"nus","algoname":"SearchEngineAggregator","algolabel":"SearchEngineAggregator","language":"java3","card_line":"A search engine wrapper that aggregates results from different search engines and adds benchmarks for all at the end.","summary":"<p>A search engine wrapper that aggregates results from different search engines and adds benchmarks for all at the end.&#160;</p><p><b>Basic use:</b> Just input the query and the algorithm will search all of the supported engines and return the top 10 results!</p><p><b>Alternative use:</b> Format inputs as a simple Json with clients, query and the desired number of results, as in the example below.</p><p><i><b>Clients:</b></i> Specify engines desired with a space in between (e.g. &#34;google facebook&#34;) or try &#34;all&#34; to see all of them.</p><p><i><b>Query: </b></i>The keyword that you would like to search on the clients.</p><p><b><i>NumResults:</i></b> The number of results that you would like to retrieve.</p><h3>Currently supported engines</h3><div><ul><li>Google</li><li>Twitter</li><li>Bing</li><li>Wikipedia</li><li>DuckDuckGo</li><li><span>Facebook</span></li></ul><div>Hint: Try using ':)' or ':(' with your Twitter search query to retrieve Tweets with these sentiments!</div></div>","submitted_at":1444198219000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":200},{"algo_id":14869,"object_id":"7b7835ba-075e-11e5-89ff-123a3b0693f5","username":"alixaxel","algoname":"CoordinatesToTimezone","algolabel":"CoordinatesToTimezone","language":"java3","card_line":"This algorithm takes a latitude-longitude pair and outputs the timezone information for that location.","summary":"<p>This algorithm takes a latitude-longitude pair and outputs the timezone information for that location.</p><p>Depending on the time of the year and the matching timezone, the &#34;name&#34; property will be modified to represent the potential <i>current</i> daylight saving time (i.e: Standard vs Daylight Time), e.g.:</p><pre class=\"well well-sm sample-output ng-binding\" style=\"color: rgb(85, 85, 85);background-color: rgb(242, 242, 242);\">{&#34;id&#34;:&#34;America/Los_Angeles&#34;,&#34;name&#34;:&#34;Pacific Standard Time&#34;,&#34;offset&#34;:-28800,&#34;offset_dst&#34;:0}</pre><pre class=\"well well-sm sample-output ng-binding\" style=\"color: rgb(85, 85, 85);background-color: rgb(242, 242, 242);\">{&#34;id&#34;:&#34;America/Los_Angeles&#34;,&#34;name&#34;:&#34;Pacific Daylight Time&#34;,&#34;offset&#34;:-28800,&#34;offset_dst&#34;:3600}</pre><p>To get the current local time, clients should perform the following operation:</p><pre><span>local_time = UTC_time() + offset + offset_dst</span></pre><p><span>Both &#34;offset&#34; and &#34;offset_dst&#34; are provided in <i><b>seconds</b></i>.</span></p><p><span><br/></span></p><p><span>In locations where timezones are not applicable, UTC is returned:</span></p><pre>{&#34;id&#34;:&#34;UTC&#34;,&#34;name&#34;:&#34;Coordinated Universal Time&#34;,&#34;offset&#34;:0,&#34;offset_dst&#34;:0}</pre>","submitted_at":1436216428000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":200},{"algo_id":393,"object_id":"b6f73af2-bbc8-11e3-8351-040108385a01","username":"kenny","algoname":"AutoCorrelate","algolabel":"Auto Correlate","language":"java3","card_line":"Computes the auto-correlation of a time series","summary":"Computes the auto-correlation of a time series","submitted_at":1429837559000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":195},{"algo_id":16426,"object_id":"4a12cc88-4de4-11e5-aae6-12ad1a8c1691","username":"opencv","algoname":"ImageForegroundExtraction","algolabel":"Image Foreground Extraction","language":"java4","card_line":"Takes in an image (in the form of a Data API URL or byte[]) and extracts the foreground after detecting the face in the image.","summary":"<p>Takes in an image (in the form of a Data API URL or byte[]) and extracts the foreground after detecting the face in the image. A single face should be present in the taken photo. The foreground is returned in the binary format.</p>","submitted_at":1442619068000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":191},{"algo_id":15638,"object_id":"9bbebf7d-2a4d-11e5-a825-06910d997133","username":"sfw","algoname":"NudityDetectionBinaryHelper","algolabel":"Nudity Detection Binary Helper","language":"java3","submitted_at":1436981990000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":188},{"algo_id":14653,"object_id":"4cab357e-fa70-11e4-89ff-123a3b0693f5","username":"etl","algoname":"CURL2DataAPI","algolabel":"CURL2DataAPI","language":"java3","submitted_at":1431669701000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":183},{"algo_id":91,"object_id":"6775a2d4-8e3c-11e3-8351-040108385a01","username":"diego","algoname":"EmailValidator","algolabel":"Email Validator","language":"java3","card_line":"Simple verifier that checks if input was a valid formed email address and returns True or False.","summary":"Simple verifier that checks if input was a valid formed email address and returns True or False.<div><br/></div><div><br/></div><div>Follows RFC Internet Message Format for validity</div><div><a href=\"https://tools.ietf.org/html/rfc2822\">https://tools.ietf.org/html/rfc2822</a><br/></div>","submitted_at":1430947328000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":172},{"algo_id":2733,"object_id":"fdbcc02a-9929-11e4-be78-12e1fbfbf82c","username":"TimeSeries","algoname":"FFTAutocorrelation","algolabel":"FFTAutocorrelation","language":"java3","card_line":"Takes a time series and returns the autocorrelation plot of that time series as an array.","summary":"Takes a time series and returns the autocorrelation plot of that time series as an array.&#160;<span>The size of the entry at i of the autocorrelation plot is a measure of how similar the signal is to a lagged version of itself. Note that the 0th entry of the output is the correlation of the signal with itself (no lag) and is always the largest value.&#160;</span><span>Nonzero values at lat 1 are indicative of a linear trend. Beyond 1, positive values index i indicate a periodic signal with period i.  </span><span>Thus, the most interested entry is that with the second largest value - specifically, the index of this entry is the period of the strongest seasonal trend in the signal. It is recommended that the signal have linear trends removed (as by application of the /TimeSeries/LinearDetrend algorithm) before applying this algorithm, as linear trends make the results of autocorrelation more difficult to interpret.&#160;</span><span>See&#160;</span><a href=\"http://en.wikipedia.org/wiki/Autocorrelation\">http://en.wikipedia.org/wiki/Autocorrelation</a><span>&#160;for more information.</span><div><div><br/></div><div>This is based on an implementation of the Fast Fourier Transform (in this the real Fourier Transform in the JTranforms library - <a href=\"https://sites.google.com/site/piotrwendykier/software/jtransforms\">https://sites.google.com/site/piotrwendykier/software/jtransforms</a>) Note that there are many different conventions used in signal processing, so be careful as the ones chosen here may not be the ones you need.&#160;</div></div>","submitted_at":1430441380000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":172},{"algo_id":2332,"object_id":"60e02dce-79a6-11e4-bad7-04011d260101","username":"StanfordNLP","algoname":"NamedEntityRecognition","algolabel":"Named Entity Recognition","language":"java3","card_line":"Identifies named (PERSON,LOCATION,ORGANIZATION,MISC) and numerical (MONEY,NUMBER,DATA,TIME,DURATION,SET) in text, outputs the text of each entity along with its identifier.","summary":"Identifies named (PERSON,LOCATION,ORGANIZATION,MISC) and numerical (MONEY,NUMBER,DATA,TIME,DURATION,SET) in text, outputs the text of each entity along with its identifier. Specifically, this algorithm takes a string as input, splits it into sentences, finds the named entities in each sentence, and for each sentence, outputs a list of the named entities along with their type as a two-element string array.<div><br/></div><div>For more information, please refer to&#160;<a href=\"http://nlp.stanford.edu/software/corenlp.shtml\">http://nlp.stanford.edu/software/corenlp.shtml</a>&#160;or&#160;Manning, Christopher D., Surdeanu, Mihai, Bauer, John, Finkel, Jenny, Bethard, Steven J., and McClosky, David. 2014.&#160;<a href=\"http://nlp.stanford.edu/pubs/StanfordCoreNlp2014.pdf\">The Stanford CoreNLP Natural Language Processing Toolkit</a>. In&#160;<i>Proceedings of 52nd Annual Meeting of the Association for Computational Linguistics: System Demonstrations</i>, pp. 55-60.&#160;</div>","submitted_at":1430421232000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":167},{"algo_id":2689,"object_id":"2e82e8ef-8a38-11e4-be78-12e1fbfbf82c","username":"opencv","algoname":"MovementDetectionDemo","algolabel":"Movement Detection Demo","language":"java3","card_line":"Usage: [\" data://opencv/MLabsVideos/0018850277aa-defaultPrimary.flv","summary":"<span class=\"ng-binding\">Usage:</span><div><br/></div><div><span class=\"ng-binding\">[&#34;<font face=\"Menlo, Monaco, Ubuntu Mono, Droid Sans Mono, Consolas, Courier New, Courier, monospace\"><span>data://opencv/MLabsVideos/0018850277aa-defaultPrimary.flv</span></font><span>&#34;, 0]</span><br/></span></div><div><span class=\"ng-binding\"><br/></span></div><div><span class=\"ng-binding\">Input 1: URL to the video on the Data API (<a href=\"http://algorithmia.com/data\">http://algorithmia.com/data</a>).</span></div><div><span class=\"ng-binding\">Input 2: If 1, frames of the video are flipped. If 0, no flip. It is important to give the correct value for this parameter because the algorithm adjusts the background subtraction parameters according to the position of objects in the frame and orientation affects this vastly.</span></div><div><span class=\"ng-binding\">Output shows where the file that contains the results were written. The text file is going to contain &#34;Frame# [Rectangle1,Rectangle2,...,RectangeN]&#34; on each line where rectangles are going to have their x, y, width and height separated by spaces.</span></div><div><span class=\"ng-binding\"><br/></span></div><div><span class=\"ng-binding\">Warning: This algorithm performs best on videos that resemble security video footage of humans moving through a stable background. It may not perform well on other types of video.</span></div>","submitted_at":1444691438000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":160},{"algo_id":4128,"object_id":"a621a67e-b19e-11e4-840d-12f53eafe9d2","username":"kenny","algoname":"MakeBuzzwords","algolabel":"Make Buzzwords","language":"java3","card_line":"Manufactures Buzzwords in the Cloud","summary":"Manufactures Buzzwords in the Cloud","submitted_at":1445291327000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":157},{"algo_id":489,"object_id":"313f51a9-eb7a-11e3-8686-040108385a01","username":"ml","algoname":"Clickstream","algolabel":"Clickstream","language":"java3","card_line":"Analyzes clickstream data, looking for the most \"interesting\" transitions necessary to reach a given \"goal state\".","summary":"Analyzes clickstream data, looking for the most &#34;interesting&#34; transitions necessary to reach a given &#34;goal state&#34;.","submitted_at":1445289450000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":157},{"algo_id":2345,"object_id":"84ce580e-7bf0-11e4-8b54-04011d260101","username":"cmu","algoname":"ParallelMSTinC","algolabel":"ParallelMSTinC","language":"java3","card_line":"This algorithm takes as input a Data API URL to a GML file that contains the input graph.","summary":"This algorithm takes as input a Data API URL to a GML file that contains the input graph. It then computes the weight of the minimum spanning tree using Parallel Kruskal's algorithm.<div><br/></div><div>Based on</div><div><span>Blelloch, Guy E., Fineman, Jeremy T., Gibbons, Phillip B. and Shun, Julian. &#34;Internally deterministic parallel algorithms can be fast..&#34; Paper presented at the meeting of the PPOPP, 2012.</span><br/></div>","submitted_at":1445289948000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":149},{"algo_id":15822,"object_id":"3007cdee-33ee-11e5-aae6-12ad1a8c1691","username":"zskurultay","algoname":"RecoTest","algolabel":"RecoTest","language":"java3","submitted_at":1438044156000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":148},{"algo_id":575,"object_id":"5817591f-fd12-11e3-9109-04011d260101","username":"tags","algoname":"RecommendGithub","algolabel":"Recommend Github","language":"java3","card_line":"Given an existing public Github repo, recommend others based on similar content.","summary":"Given an existing public Github repo, recommend others based on similar content. First input is the Github username (e.g. &#34;rails&#34;) and the second input is the name of the repository (e.g. &#34;rails&#34;).","submitted_at":1435603200000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":145},{"algo_id":4547,"object_id":"2c7b60c6-b3d7-11e4-840d-12f53eafe9d2","username":"ngram","algoname":"GenerateTrigramFrequencies","algolabel":"Generate Trigram Frequencies","language":"scala2","card_line":"Generates trigram frequencies from given text (given as array of Strings).","summary":"<p>Generates trigram frequencies from given text (given as array of Strings). Needs beginning and end tags in the data. Writes the model to the Data API url that is passed in as the fourth parameter. </p>","submitted_at":1433793889000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":143},{"algo_id":14556,"object_id":"9bbce81e-f5dd-11e4-89ff-123a3b0693f5","username":"opencv","algoname":"PixelateFace","algolabel":"Pixelate Face","language":"java3","card_line":"This algorithm uses   Face Detection   to detect any faces in an image and pixellates them.","summary":"<div class=\"text-wordwrap ng-binding\" style=\"color: rgb(85, 85, 85);\">This algorithm uses<span class=\"Apple-converted-space\"> </span><a href=\"https://algorithmia.com/algorithms/opencv/FaceDetection\" style=\"color: rgb(153, 99, 255);background-color: transparent;\">Face Detection</a><span class=\"Apple-converted-space\"> </span>to detect any faces in an image and pixellates them. The first argument is the source image and the second is the destination. The third argument is the amount of pixelation, the higher this parameter, the more pixelated the face.</div><div style=\"color: rgb(85, 85, 85);\"></div><div class=\"clearfix\" style=\"color: rgb(85, 85, 85);\"></div><div class=\"row\" style=\"color: rgb(85, 85, 85);\"><div class=\"col-md-6\" style=\"float: left;width: 345.65625px;\"></div></div>","submitted_at":1436395722000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":136},{"algo_id":14341,"object_id":"28bf1df2-eeaf-11e4-849b-0670f2dc1320","username":"sklearn","algoname":"GeographicSpectralClustering","algolabel":"Geographic Spectral Clustering","language":"python2-2","card_line":"Spectral clustering for geographic (lat/long) data.","summary":"<span>Spectral clustering for geographic (lat/long) data. Input is json for a python dictionary containing keys</span><div><ul><li>&#34;data&#34; - whose value is a list of lat/long pairs</li><li>&#34;numClusters&#34; - whose value is an integer denoting the number of clusters that the data will be partitioned into.</li></ul><div>The output is an ordered list containing the cluster label of each point.</div><div><br/></div><div>We use inverse distance (in km, as calculated by the Haversine formula) &#160;for similarity, so close points are more similar. Any points within about a meter of each other are counted as the same point. We cannot guarantee the accuracy of Haversine distances on very nearby points, so be careful. The advantage of spectral clustering is that is does not depend on cluster centers, like K-means, and so can resolve clusters that are naturally non-convex. This is based on scikit-learn's&#160;<a href=\"http://scikit-learn.org/stable/modules/clustering.html\">spectral clustering implementation</a>. Read more about spectral clustering&#160;<a href=\"http://en.wikipedia.org/wiki/Spectral_clustering\">here</a></div></div>","submitted_at":1430442141000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":131},{"algo_id":7444,"object_id":"4fd10a76-c8fb-11e4-abe1-12f53eafe9d2","username":"nrg3","algoname":"Editdistance","algolabel":"Edit distance","language":"java3","card_line":"This algorithm finds editing distance of two given strings, which is based on insertions, deletions and substitutions.","summary":"This algorithm finds editing distance of two given strings, which is based on insertions, deletions and substitutions. <br/>The algorithm takes 5 arguments:<br/>- first string;<br/>- second string;<br/>- price of insertion;<br/>- price of deletion;<br/>- price of substitution;<br/>The algorithm returns one integer, which corresponds to minimal editing distance price using given prices for operations from input.<br/><br/>Time complexity O(n*m), space complexity O(n), where n and m are minimal and maximal sizes of input strings respectively.<br/><br/>If all prices are set to 1, then the algorithm calculates Levenshtein distance, i.e. merely number of required editing operations in order to convert first string into second one. <br/><br/>More details:<br/>http://en.wikipedia.org/wiki/Edit_distance<br/>http://en.wikipedia.org/wiki/Levenshtein_distance<br/><br/>Usage: natural language processing, bioinformatics...<br/><br/><br/>","submitted_at":1426197116000,"discoverable_world":true,"source_world":true,"license":"gpl3","call_count":131},{"algo_id":16847,"object_id":"b71c734e-6620-11e5-aae6-12ad1a8c1691","username":"jdkilby","algoname":"MazeGeneration","algolabel":"Maze Generation","language":"python2-2","card_line":"This is an implementation of Eller's Algorithm ( http://www.neocomputer.org/projects/eller.html ) for generating a square or rectangular 2D maze.","summary":"<p>This is an implementation of Eller's Algorithm (<a href=\"http://www.neocomputer.org/projects/eller.html\">http://www.neocomputer.org/projects/eller.html</a>) for generating a square or rectangular 2D maze. It takes two integers - one for width and one for height - and returns a two-dimensional array of cells indexed by [column][row]. Each cell is in turn an array of four boolean values that, when true, indicates a wall. This array is indexed as follows: [north wall, east wall, south wall, west wall].<br/></p>","submitted_at":1443673221000,"discoverable_world":true,"source_world":true,"license":"mit","call_count":121},{"algo_id":15863,"object_id":"711850ed-361c-11e5-aae6-12ad1a8c1691","username":"ANaimi","algoname":"Base64DataConverter","algolabel":"Base64-Data Converter","language":"java3","card_line":"Use this algorithm to convert from base64 to DataAPI files and vise versa.","summary":"<p>Use this algorithm to convert from base64 to DataAPI files and vise versa.</p><p><b>Base64 to Local Data<br/></b><span>Input: content (String), path (String)<br/></span><span>Description: will convert the base64 content to binary and will save it to the specified path.</span></p><p><b>Local Data to Base 64</b><br/>Input: path (String)<br/><span>Description: will read file in path and return a base64 representation.</span></p>","submitted_at":1439232700000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":121},{"algo_id":12854,"object_id":"c7d82d67-d261-11e4-8df1-12f53eafe9d2","username":"infotrie","algoname":"Sentiment_history","algolabel":"Sentiment_history","language":"python2-2","card_line":"This API returns news sentiment history for all equities as listed on InfoTrie","summary":"This API returns news sentiment history for all equities as listed on InfoTrie","submitted_at":1433495601000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":118},{"algo_id":468,"object_id":"14689b52-dc83-11e3-b18f-040108385a01","username":"util","algoname":"ForEach","algolabel":"For Each","language":"java3","card_line":"An algorithm to run another algorithm on a list of inputs.","summary":"An algorithm to run another algorithm on a list of inputs.<div><br/></div><div><div><span>This algorithm takes</span></div><div><ol><li><span>The name of an algorithm (eg- &#34;/util/Echo&#34;)</span><br/></li><li><span>A list of inputs which will map each input to the output of the given algorithm</span></li></ol></div></div>","submitted_at":1444959088000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":116},{"algo_id":6337,"object_id":"f50cd9ee-c7f1-11e4-abe1-12f53eafe9d2","username":"gmm297","algoname":"Classifier","algolabel":"Classifier","language":"java3","card_line":"The file format given must contain 2 columns.","summary":"The file format given must contain 2 columns. The first column should contain sales, and the second columns should contain the future loyalty of the customers.<div><br/></div><div>Sales is given by a double, and loyalty by 0 (unloyal) or 1(loyal).&#160;</div>","submitted_at":1427905813000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":115},{"algo_id":3865,"object_id":"010c2087-ac19-11e4-840d-12f53eafe9d2","username":"swm8023","algoname":"quicksort","algolabel":"quicksort","language":"java3","card_line":"A quicksort algorithm.","summary":"A quicksort algorithm.","submitted_at":1445290572000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":114},{"algo_id":16343,"object_id":"127ee991-476b-11e5-aae6-12ad1a8c1691","username":"ryval","algoname":"LogisticRegression","algolabel":"LogisticRegression","language":"python2-2","card_line":"Train a Logistic Regression model and use it to predict unknown classifiers.","summary":"<p>Train a Logistic Regression model and use it to predict unknown classifiers.  You supply data of arbitrary number of features to train the model.  Once trained, the model can be used to classify test data.  The predicted results, as well as an accuracy measure, are returned to the user.  </p><p>The input must be formatted as a dictionary </p><p>{'X_train' : [x_train_data], 'y_train' : [y_train_data], 'X_test'  : [x_test_data]} </p><p>X_train should be a matrix of size (n_samples, n_features), y_train should be a list of size (n_samples,), X_test must have the same number of features as X_train</p>","submitted_at":1440113050000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":114},{"algo_id":296,"object_id":"971e4469-9b1a-11e3-8351-040108385a01","username":"codeb34v3r","algoname":"FindMinMax","algolabel":"FindMinMax","language":"java3","card_line":"Finding min and max in 3n/2 (reference CLR Introduction to Algorithm)","summary":"Finding min and max in 3n/2 (reference CLR Introduction to Algorithm)","submitted_at":1445289924000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":112},{"algo_id":14155,"object_id":"01628b90-e84e-11e4-849b-0670f2dc1320","username":"z","algoname":"IndexJsonforClustering","algolabel":"Index Json for Clustering","language":"java3","card_line":"This algorithm can be used to cluster and visualize Socrata data presented as a CSV file.","summary":"<div>This algorithm can be used to cluster and visualize Socrata data presented as a CSV file. In theory, and CSV file that you would like to cluster and visualize according to a &#34;title&#34; and latitude and longitude can be fed into this algorithm. The resulting map is written to your Data collection, given as the last input to this algorithm.</div><div><br/></div><div>The example in the sample input below clusters Assault events taken from raw Seattle crime data.</div><div><br/></div>Takes as input:<div><ul><li>Dataset CSV</li><li>column index of crime type</li><li>column index of latitude</li><li>column index of longitude</li><li>crime type to cluster</li><li>number of clusters</li><li>data api destination</li></ul><div><br/></div></div>","submitted_at":1433796167000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":108},{"algo_id":13266,"object_id":"c9546930-d899-11e4-8df1-12f53eafe9d2","username":"Prikkel","algoname":"customerPredictionAlgorithm","algolabel":"customerPredictionAlgorithm","language":"python2-2","submitted_at":1427969593000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":108},{"algo_id":14616,"object_id":"8633e5e1-f8fe-11e4-89ff-123a3b0693f5","username":"anowell","algoname":"pinky","algolabel":"Pinky","language":"python2-2","card_line":"For when you want to know if Pinky is pondering what you're pondering... Go ahead... Ask Pinky...","summary":"<p>For when you want to know if Pinky is pondering what you're pondering...</p><p>Go ahead... Ask Pinky...<br/></p><img src=\"https://dl.dropboxusercontent.com/u/39033486/pondering.jpg\"/>","submitted_at":1442994364000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":107},{"algo_id":14160,"object_id":"9ea0577c-e867-11e4-849b-0670f2dc1320","username":"z","algoname":"CustomMapFromJson","algolabel":"Custom Map From Json","language":"python2-2","card_line":"Given an array of Double arrays that are of the form: ['latitude', 'longitude', 'cluster number'], draws these points on a map.","summary":"Given an array of Double arrays that are of the form: ['latitude', 'longitude', 'cluster number'], draws these points on a map. The last value defines the color of the pinpoint.","submitted_at":1430341039000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":107},{"algo_id":3578,"object_id":"851fc1fe-a7b6-11e4-840d-12f53eafe9d2","username":"jagiella","algoname":"BirthDeathProcess","algolabel":"BirthDeathProcess","language":"java3","submitted_at":1445291554000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":106},{"algo_id":10738,"object_id":"3ea3b335-cbf0-11e4-abe1-12f53eafe9d2","username":"EHadoux","algoname":"HMM","algolabel":"HMM","language":"java3","card_line":"This algorithm let you generate a sequence of observations from an HMM.","summary":"This algorithm let you generate a sequence of observations from an HMM.<div><br/></div><div>Input is:</div><div><ul><li>starting state probability distribution</li><li>transition function</li><li>observation function</li><li>size of the sequence to generate</li></ul></div>","submitted_at":1426520406000,"discoverable_world":true,"source_world":true,"license":"mit","call_count":106},{"algo_id":2925,"object_id":"ce60d407-9df5-11e4-be78-12e1fbfbf82c","username":"kenny","algoname":"SiteTags","algolabel":"SiteTags","language":"java3","card_line":"Scrapes a site for links, and then runs auto-tagging on the crawled sites, and aggregates the tags.","summary":"Scrapes a site for links, and then runs auto-tagging on the crawled sites, and aggregates the tags.&#160;","submitted_at":1445291323000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":105},{"algo_id":5191,"object_id":"fd709227-b7f4-11e4-840d-12f53eafe9d2","username":"thatguy2048","algoname":"SimpleKNN","algolabel":"SimpleKNN","language":"java3","card_line":"This is a simple KNN classifier which accepts a given number of training data points, classes for those points and sample points to evaluate.","summary":"This is a simple KNN classifier which accepts a given number of training data points, classes for those points and sample points to evaluate.<div><br/></div><div><b>Inputs:</b></div><pre><b>int</b> k - the number of points to be counted, default 5&#10;<b>String </b>distanceCalculation - the distance calculation to use, currently only supports &#34;squaredEuclidean&#34; which is the default.&#10;<b>String </b>votingType - the way to calculate the class given the classes of the K closest points, currently only supports &#34;majority&#34; voting, which is the default.&#10;<b>ArrayList&lt;double[]&gt;</b> data - the training data&#10;<b>int[]</b> classes - the class for each data points&#10;<b>ArrayList&lt;double[]&gt;</b> points - the sample points<b><br/></b></pre><div></div><p></p>","submitted_at":1445290510000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":99},{"algo_id":15366,"object_id":"2ea89d43-1c3a-11e5-a825-06910d997133","username":"ANaimi","algoname":"GetTwitterFriends","algolabel":"Get Twitter Friends","language":"java3","card_line":"Takes a screenName as input and returns an array of TwitterProfile as output.","summary":"<p>Takes a screenName as input and returns an array of TwitterProfile as output.</p><p>TwitterProfile has the following: handle, name, description, image_small, image_large, followers, friends, favorites.</p><p>At the moment the algorithm is not setup to complain about Twitter rate limit, so you might get a weird/unfriendly exception if that happens. </p>","submitted_at":1435351169000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":99},{"algo_id":3298,"object_id":"ebc67d95-a5d1-11e4-be78-12e1fbfbf82c","username":"sphinx","algoname":"AdaptiveSpeechRecognition","algolabel":"AdaptiveSpeechRecognition","language":"java3","card_line":"This algorithm uses CMU Sphinx open source library to recognize speech in audio files that are uploaded to the Data API or Youtube videos that are licensed under Creative Commons.","summary":"<p>This algorithm uses CMU Sphinx open source library to recognize speech in audio files that are uploaded to the Data API or Youtube videos that are licensed under Creative Commons. The difference from <a href=\"https://algorithmia.com/algorithms/sphinx/SpeechRecognition\">/sphinx/SpeechRecognition</a> is that this algorithm makes an attempt to adapt the recognition stats to the specific speaker in the media file. Note that this causes this algorithm to run twice as slow. The models that are used to perform speech recognition are the latest Generic English models published by CMU on their <a href=\"http://sourceforge.net/projects/cmusphinx/files/\">Sourceforge website</a>. </p><div><br/></div><div></div><div style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\">The first input to the algorithm is the link to the media file (either a Data API url or a Youtube video url). There is an optional second input that points to a .tar.gz folder in the Data API that includes a new language model that you trained. The folder structure should be flat, including the .lm.dmp file (language model file) and the .dict file (dictionary file). The files that are required for the acoustic model should also be there (means, mixture_weights, etc).</div><p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\">The output is a Json object that contains the following fields:</p><p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\">text: The transcribed text of the audio file</p><p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\">wordtimes: When the actual words were spoken (or silences)</p><p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\">best3: Best 3 guesses for all of the phrases from the file</p><div><br/></div><div><b>Warning:</b> Please note that depending on the length of the media file, if you are using the website console, it might time out if the input is longer than 4 minutes.</div><div><br/></div><p></p>","submitted_at":1445388489000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":95},{"algo_id":2948,"object_id":"f5aae193-a006-11e4-be78-12e1fbfbf82c","username":"JaCoP","algoname":"IntegerProgramming","algolabel":"Integer Programming","language":"java3","card_line":"This is an algorithm for integer programming (also known as integer linear programming) built on the JaCoP Constraint Programming Solver ( https://github.com/radsz/jacop","summary":"This is an algorithm for integer programming (also known as integer linear programming) built on the JaCoP Constraint Programming Solver (<a href=\"https://github.com/radsz/jacop\">https://github.com/radsz/jacop</a>). Read more about integer programming at&#160;<a href=\"https://en.wikipedia.org/wiki/Integer_programming\">https://en.wikipedia.org/wiki/Integer_programming</a>.&#160;It's arguments are<div><ol><li>A String array of variable names</li><li>An int vector c defining the cost of the returned solution via c^(T)x.</li><li>An int array of lower bounds for the corresponding variables</li><li>An int array of upper bounds for the corresponding variables</li><li>An int matrix (int[][]) that defines the matrix part of the linear constraints</li><li>A String array denoting the nature of each constraint, either &#34;&lt;&#34;,&#34;&gt;&#34;,&#34;&lt;=&#34;, or &#34;&gt;=&#34;.</li><li><span>An int array (int[]) defining the right hand side of the linear constraints.</span><br/></li></ol>The output is a Map&lt;String,Int&gt; containing each variable name as key and its value in the found solution as value. &#160;</div><div><br/></div><div><span>Note that this implementation minimizes&#160;</span><span>c^(T)x&#160;</span><span>and uses branch-and-bound. To maximize, change the signs of the integers in c.</span><span>&#160;</span><span>&#160;For more information consult the JaCoP documentation at&#160;</span><a href=\"http://jacopguide.osolpro.com/guideJaCoP.html#x1-510006\">http://jacopguide.osolpro.com/guideJaCoP.html#x1-510006</a><span>.</span></div>","submitted_at":1445373280000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":95},{"algo_id":15056,"object_id":"28f50546-0f96-11e5-89ff-123a3b0693f5","username":"desolatora","algoname":"isPrime","algolabel":"isPrime","language":"java3","card_line":"Using the fact that all primes are in the form c#k+i , where c# is the c-th primordial and i represents the numbers that are coprime to c# the algorithm implements primality testin...","summary":"<p>Using the fact that all primes are in the form <b>c#k+i</b>, where <b>c#</b> is the <a href=\"http://en.wikipedia.org/wiki/Primorial\">c-th primordial</a> and<b> i </b>represents the numbers that are <a href=\"http://en.wikipedia.org/wiki/Coprime_integers\">coprime </a>to <b>c#</b> the algorithm implements primality testing using <a href=\"http://en.wikipedia.org/wiki/Trial_division\"><b>Trial Division</b></a> using divisors only in the form <b>210k+i</b>, which makes it <u>several times faster</u>.</p><p>Works for all numbers smaller than <b>9223372036854775807</b> (long max value). </p><p>Sample input with <b>2147483647</b> also known as the 8-th <a href=\"http://en.wikipedia.org/wiki/Mersenne_prime\">mersenne prime</a>.<br/></p>","submitted_at":1433964644000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":94},{"algo_id":2331,"object_id":"60df9b15-79a6-11e4-bad7-04011d260101","username":"StanfordNLP","algoname":"Lemmatizer","algolabel":"Lemmatizer","language":"java3","card_line":"Maps all words to their canonical forms for easier analysis.","summary":"Maps all words to their canonical forms for easier analysis. For example, the canonical form of &#34;running&#34; and &#34;ran&#34; is &#34;run&#34;. This uses the&#160;CoreAnnotations.LemmaAnnotation annotation from Stanford CoreNLP.&#160;<div><br/></div><div>For more information, please refer to <a href=\"http://nlp.stanford.edu/software/corenlp.shtml\">http://nlp.stanford.edu/software/corenlp.shtml</a>&#160;or&#160;<span>Manning, Christopher D., Surdeanu, Mihai, Bauer, John, Finkel, Jenny, Bethard, Steven J., and McClosky, David. 2014.&#160;</span><a href=\"http://nlp.stanford.edu/pubs/StanfordCoreNlp2014.pdf\">The Stanford CoreNLP Natural Language Processing Toolkit</a><span>. In&#160;</span><i>Proceedings of 52nd Annual Meeting of the Association for Computational Linguistics: System Demonstrations</i><span>, pp. 55-60</span>.&#160;</div>","submitted_at":1430421052000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":94},{"algo_id":5175,"object_id":"9450adae-b7b6-11e4-840d-12f53eafe9d2","username":"thatguy2048","algoname":"SimpleEuclidean","algolabel":"SimpleEuclidean","language":"java3","card_line":"This is a simple algorithm which performs the euclidean distance calculation on input arrays.","summary":"<p>This is a simple algorithm which performs the euclidean distance calculation on input arrays. &#160;</p><p><b>Input: </b>data is a set of arrays to perform the euclidean distance calculation on, and squared is a boolean which if true uses squared euclidean distance instead of euclidean distance. The default value is false if left unspecified.</p>&#10;<table>&#10;<tbody><tr>&#10;<td>&#10;<b>In: </b><br/>&#10;<p>&#34;{<span><br/>data:[<br/>&#160;&#160;&#160;[ &#160;[1,2,3] , [2,3,4] &#160;],<br/>&#160;&#160;&#160;[ &#160;[1,2,3] , [2,3,4] &#160;]<br/>&#160;&#160;&#160;&#160;]<br/>}&#34;</span></p>&#10;</td>&#10;<td><p>&#160;&#160;&#160;&#160;&#160;</p></td>&#10;<td>&#10;<p>&#10;<b>Out:</b><br/>&#10;[1.7320508075688772,1.7320508075688772]<br/>&#10;</p>&#10;</td>&#10;</tr>&#10;</tbody></table>","submitted_at":1445290514000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":92},{"algo_id":30752,"object_id":"2d7f5464-75bc-11e5-aae6-12ad1a8c1691","username":"opencv","algoname":"FindPolygonsInImage","algolabel":"Find Polygons In Image","language":"java4","card_line":"Searches for regular polygons in an image.","summary":"<p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\">Searches for regular polygons in an image.</p><p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\">Given an image and a number of sides, searches for regular polygons with that number of sides in am image (for example 3 for triangles, 4 for a square, etc..)</p>","submitted_at":1445189400000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":91},{"algo_id":6144,"object_id":"6c758cbd-beac-11e4-840d-12f53eafe9d2","username":"Aluxian","algoname":"AffinityAnalysisFPGrowth","algolabel":"Affinity Analysis for Market Basket Recommendation (FP-Growth)","language":"java3","card_line":"Affinity analysis is an analytical technique that aims to discover relationships between activities and preferences that pertain to specific individuals.","summary":"<p dir=\"ltr\">Affinity analysis is an analytical technique that aims to discover relationships between activities and preferences that pertain to specific individuals. Based on recorded information, after the analysis, future behaviour can be statistically predicted. For a general overview see&#160;<a href=\"http://en.wikipedia.org/wiki/Affinity_analysis\">http://en.wikipedia.org/wiki/Affinity_analysis</a>.&#160;Specific applications include clickstream analysis and market basket analysis.</p><p dir=\"ltr\">One important area of application is market basket analysis, which has widespread use in planning promotions, designs and sales strategies. Market basket analysis is necessarily somewhat open-ended, but one of the more useful angles of attack is the extraction of <a href=\"http://en.wikipedia.org/wiki/Association_rule_learning\">association rules</a>.</p><p dir=\"ltr\">This API uses <a href=\"http://weka.sourceforge.net/doc.dev/weka/associations/FPGrowth.html\">this FP-Growth algorithm implementation</a> from the <a href=\"http://www.cs.waikato.ac.nz/ml/weka/\">Weka</a>&#160;library.</p><p dir=\"ltr\"><span><b>Input:&#160;</b></span><span>[url, options]</span></p><p dir=\"ltr\"><span>The program takes a DataAPI url to </span><span>a file with one session per line. A session represents the entities that were bought/used/visited in a single recorded event. This could be the urls seen in a given browsing session or items bought in a single visit to a store. For example:</span></p><pre>bread milk eggs<br/><span>beer diapers<br/></span>bread bottled_water hot_dogs lemonade</pre><p dir=\"ltr\">The items are not ordered and there is no customer identification. The items are separated by whitespace, and the only constraint on the format is that items must be uniquely identifiable by the string and the string may contain no white spaces.</p><p dir=\"ltr\">You can also use a CSV file instead, in which v<span>alues can contain any character except comma</span><span>:</span></p><pre>bread,milk,eggs<br/>beer,diapers<br/>bread,bottled water,hot dogs,lemonade</pre><p><span>You can customise the behaviour of the FP-Growth algorithm by supplying your own custom parameters:</span><br/></p><p></p><ul><li><b>-I &lt;max items&gt;</b><span> The maximum number of items to include in large items sets (and rules). (default = -1, i.e. no limit.)</span><br/></li><li><span><b>-N &lt;require number of rules&gt;</b> The required number of rules. (default = 10)</span><br/></li><li><span><b>-T &lt;0=confidence | 1=lift | 2=leverage | 3=Conviction&gt;</b> The metric by which to rank rules. (default = confidence)</span><br/></li><li><span><b>-C &lt;minimum metric score of a rule&gt;</b> The minimum metric score of a rule. (default = 0.9)</span><br/></li><li><span><b>-U &lt;upper bound for minimum support&gt;</b> Upper bound for minimum support. (default = 1.0)</span><br/></li><li><span><b>-M &lt;lower bound for minimum support&gt;</b> The lower bound for the minimum support. (default = 0.1)</span><br/></li><li><span><b>-D &lt;delta for minimum support&gt;</b> The delta by which the minimum support is decreased in each iteration. (default = 0.05)</span><br/></li><li><span><b>-S</b> Find all rules that meet the lower bound on minimum support and the minimum metric constraint. Turning this mode on will disable the iterative support reduction procedure to find the specified number of rules.</span><br/></li><li><span><b>-transactions &lt;comma separated list of attribute names&gt;</b> Only consider transactions that contain these items (default = no restriction)</span><br/></li><li><span><b>-rules &lt;comma separated list of attribute names&gt;</b> Only print rules that contain these items. (default = no restriction)</span><br/></li><li><span><b>-use-or</b> Use OR instead of AND for must contain list(s). Use in conjunction with <b>-transactions</b> and/or <b>-rules</b></span><br/></li></ul><p></p><p></p><p dir=\"ltr\"><b>Output</b></p><p dir=\"ltr\">An array of rules, where each rule contains:</p><p></p><ul><li><span><b>confidence</b>:&#160;</span>the proportion of the examples covered by the premise that are also covered by the consequence. Alternatively, this can be described as the&#160;probability that a rule is correct for a new transaction.<br/></li><li><span><b>lift</b>:&#160;</span>confidence divided by the proportion of all examples that are covered by the consequence. This is a measure of the importance of the association that is independent of support.<br/></li><li><span><b>leverage</b>:&#160;</span>the proportion of additional examples covered by both the premise and consequence above those expected if the premise and consequence were independent of each other.<br/></li><li><span><b>conviction</b>:&#160;</span>another measure of departure from independence.<br/></li><li><span><b>premise</b>: the 'premise' part of the rule.</span><br/></li><li><span><b>consequence</b>:&#160;</span>the 'consequence' part of the rule.<br/></li><li><b>premiseSupport: </b>the number of transactions (sessions) in the data set which contain the premise items.<br/></li><li><b>consequenceSupport&#160;</b>the number of transactions&#160;(sessions)&#160;in the data set which contain the consequence items.</li></ul><div><br/></div><div>In the context of Market Basket Analysis, the rules should be interpreted like this:&#160;<span>i</span><span>f a user buys an item in the premise item set, then the user will likely buy the item in the consequence item set too.</span></div><div><br/></div><div>The sample data set is taken from <a href=\"http://www.salemmarafi.com/code/market-basket-analysis-with-r/comment-page-1/\">here</a>.</div><p></p>","submitted_at":1445377478000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":90},{"algo_id":15832,"object_id":"12e27f3e-349a-11e5-aae6-12ad1a8c1691","username":"zskurultay","algoname":"KeywordAnalysis","algolabel":"Keyword Analysis","language":"java3","submitted_at":1438029781000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":88},{"algo_id":16952,"object_id":"92f270a3-6b31-11e5-aae6-12ad1a8c1691","username":"s3utilities","algoname":"ListObjects","algolabel":"List Objects","language":"java4","card_line":"This algorithm lists objects with a given prefix from Amazon S3.","summary":"<p>This algorithm lists objects with a given prefix from Amazon S3. Please specify the path to the credentials file, the key of the file to be downloaded and the Data API collection URL that the file should be uploaded to as an input array to this algorithm. The first argument, credentials file, should be a file in the Data API that contains name of the bucket, access key ID and the secret access key. The second argument should be the prefix of keys you would like to list in the bucket.<br/></p>","submitted_at":1444031201000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":87},{"algo_id":15959,"object_id":"191ef826-3af9-11e5-aae6-12ad1a8c1691","username":"mheimann","algoname":"TrainFaceRecognizer","algolabel":"Train Face Recognizer","language":"python2-2","card_line":"Trains a face recognizer from a labeled set of faces.","summary":"<p>Trains a face recognizer from a labeled set of faces. This is a wrapper for the FaceRecognition algorithm.  The FaceRecognition algorithm additionally requires a user to specify a &#34;train&#34; mode, so this wrapper makes things slightly more convenient. </p><p><span>Users must pass in a list of JSON objects, one for each image.  Each image JSON object must have a &#34;ID&#34; field with an ID (or label) saying whose face is pictured.  It must also have a &#34;Path&#34; field specifying the image URL (e.g. the path to the image in an Algorithmia collection).</span><br/></p><p>(Note: if an image has multiple faces, all faces will be detected and used in training, but each face will have the ID specified to the image as a whole.  For instance, in a multi-face picture of the Smith siblings, each face will be used for training and each will have the image &#34;Smith siblings&#34;.   It is difficult to specify labels more precisely than that, so that is the greatest level of precision this algorithm supports.)</p><p>After preprocessing the image data by using an OpenCV face detector to detect faces, this program trains a face recognizer using Local Binary Pattern Histograms, also as implemented in OpenCV.  This face recognizer will be saved in XML format to a data collection of the user's choosing, along with a file of the same name (but with an additional _idList tag and a .txt extension) that maps people's IDs to numeric labels used internally.  For use when updating the model or classifying with it, both files must have the same name and must be in the same directory.<br/></p><p>Users must also specify an Algorithmia data collection to which a face recognizer can be written as well as a file name for the face recognizer.  This is done by specifying the full path that the .xml face recognizer file will have when saved (including the file name and a .xml extension).  If a file with this path exists, the model in that file will be updated with the new training images.  Otherwise, a new model will be created from scratch.  </p><p>Upon successful completion, a user will receive a notification: &#34;Successfully completed!&#34;  In the specified directory will then be the face recognition model (face recognizer and ID list).  </p><p><br/></p>","submitted_at":1438992209000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":83},{"algo_id":3548,"object_id":"fee8e257-a709-11e4-840d-12f53eafe9d2","username":"jagiella","algoname":"Covariance","algolabel":"Covariance","language":"java3","card_line":"Calculates the covariance matrix cov(A) of a input matrix A. Possible inputs are: - A - [A, N] A is a n-times-d-matrix and N the type of covariance matrix.","summary":"Calculates the covariance matrix cov(A) of a input matrix A.<div><br/></div><div>Possible inputs are:</div><div>- A</div><div>- [A, N]</div><p>A is a n-times-d-matrix and N the type of covariance matrix. If N=0 (default), then the output is the unbiased estimate of the covariance matrix normalizing by n-1. If N=1, then the algorithm normalizes by N and produces the second moment matrix of the observations about their mean.&#160;</p>","submitted_at":1445291550000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":82},{"algo_id":628,"object_id":"efc93d8c-07f3-11e4-9109-04011d260101","username":"jtbandes","algoname":"NegativeWeightCycles","algolabel":"NegativeWeightCycles","language":"java3","card_line":"Detects negative-weight cycles in a complete, directed graph, using the Floyd&#8211;Warshall algorithm.","summary":"Detects negative-weight cycles in a complete, directed graph, using the Floyd&#8211;Warshall algorithm.<div><br/></div><div>No guarantees are made about whether <i>all</i>&#160;negative cycles are detected, or which cycles, but that at least one will be detected if it exists. To improve on this lack-of-guarantee, see&#160;http://www.sciencedirect.com/science/article/pii/S0166218X01002013.</div>","submitted_at":1445289577000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":82},{"algo_id":2640,"object_id":"75525aaf-86f7-11e4-be78-12e1fbfbf82c","username":"ApacheOpenNLP","algoname":"TokenizeBySentence","algolabel":"Tokenize By Sentence","language":"java3","card_line":"Takes in a string as input, splits into sentences and tokenizes each sentence, placing each token into a String array.","summary":"Takes in a string as input, splits into sentences and tokenizes each sentence, placing each token into a String array. This set of arrays is returned as a list. The default setting is English, splitting sentences according to the model&#160;en-sent.bin and tokenizing according to en-token.bin (both located in data://ApacheOpenNLP/models/).<div><br/></div><div>To use this with other sentence and tokenization models, call</div><div>[&lt;input text&gt;,&#34;data://ApacheOpenNLP/models/&lt;sentence detection model&gt;&#34;,&#34;data://ApacheOpenNLP/models/&lt;tokenizer model&gt;&#34;]</div><div><br/></div><div>For more information visit&#160;<a href=\"http://opennlp.apache.org/\">http://opennlp.apache.org</a>.<br/></div>","submitted_at":1430446050000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":82},{"algo_id":15477,"object_id":"5051ee87-2047-11e5-a825-06910d997133","username":"sound","algoname":"TextToSpeech","algolabel":"Text To Speech","language":"python2-2","card_line":"This algorithm takes in a text, an output data api url and an output file name and writes the text as a speech wav file to this location.","summary":"<p>This algorithm takes in a text, an output data api url and an output file name and writes the text as a speech wav file to this location. </p>","submitted_at":1436477442000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":81},{"algo_id":11172,"object_id":"5340ef69-cdf0-11e4-abe1-12f53eafe9d2","username":"thatguy2048","algoname":"HaarWavelet","algolabel":"Haar Wavelet","language":"java3","card_line":"This algorithm performs the Daubechies D4 Wavelet Transform (or inverse transform) on a one dimensional signal.&#10;","summary":"This algorithm performs the <a href=\"http://en.wikipedia.org/wiki/Daubechies_wavelet\">Daubechies D4 Wavelet Transform</a> (or inverse transform) on a one dimensional signal.&#10;<br/><br/>&#10;This algorithm expects a signal which whose length is divisible by 2, and will perform the transform for as long as the length can be divided by 2, while still being evenly divisible. &#160;Unless a max number of iterations is specified by an <b>int</b>&#160;before the input signal.<div><b><br/></b></div><div><b>Example Input</b></div><div><div><pre>[1,<span>[1,2,3,1,2,3,4,0]]</span></pre><div><br/></div><div><b>Example Output</b></div><pre><span>{&#34;transform&#34;:[2.1213203435596424,2.82842712474619,3.5355339059327373,2.82842712474619,-0.7071067811865475,1.414213562373095,-0.7071067811865475,2.82842712474619],&#34;i&#34;:1}</span><br/></pre>&#10;<b></b><div><b><br/></b></div><b>Inverse Input&#10;</b><pre>[[5.656854249492379,-0.7071067811865481,-0.49999999999999994,0.49999999999999994,-0.7071067811865475,1.414213562373095,-0.7071067811865475,2.82842712474619],3]&#10;</pre>&#10;<br/>&#10;<b>Inverse Output</b>&#10;<pre>[0.9999999999999992,1.9999999999999991,2.999999999999999,0.9999999999999992,1.9999999999999993,2.999999999999999,3.9999999999999996,-3.14018491736755e-16]&#10;(rounded)&#10;[1,2,3,1,2,3,4,0]&#10;</pre></div></div>","submitted_at":1426812862000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":81},{"algo_id":741,"object_id":"0f070fde-1766-11e4-b842-04011d260101","username":"kenny","algoname":"CacheTest","algolabel":"CacheTest","language":"java3","card_line":"Returns a random number, but with caching enabled.","summary":"Returns a random number, but with caching enabled.<div><br/></div><div>By running this algorithm repeatedly on the same input, this gives some idea of how the caching layer is working / distributing jobs to new workers.</div>","submitted_at":1443812313000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":80},{"algo_id":12918,"object_id":"591c1490-d336-11e4-8df1-12f53eafe9d2","username":"manduinca","algoname":"point_inside_polygon","algolabel":"point_inside_polygon","language":"python2-2","card_line":"If a point is inside of a polygon, return true and false in other case.","summary":"<div><div>If a point is inside of a polygon, return true and false in other case.</div><div>The entry are numbers separated by commas, that represent the coordinates of the vertices of the polygon, arranged in one sense. The last pair of coordinates belong to the required point .</div><div><br/></div><div>Note: if a point is in the sides, it is considered out.</div></div><div><br/></div>","submitted_at":1427336269000,"discoverable_world":true,"source_world":true,"license":"gpl3","call_count":80},{"algo_id":559,"object_id":"46d42b81-f7c5-11e3-8686-040108385a01","username":"oren","algoname":"ReVerb","algolabel":"ReVerb","language":"java3","submitted_at":1445289332000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":79},{"algo_id":13293,"object_id":"e311666c-d936-11e4-8df1-12f53eafe9d2","username":"laurens93","algoname":"BIPMfinal","algolabel":"BIPM-final","language":"python2-2","submitted_at":1427986139000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":79},{"algo_id":9786,"object_id":"f37c701a-ca87-11e4-abe1-12f53eafe9d2","username":"thatguy2048","algoname":"ConwaysGameOfLife","algolabel":"Conway's Game Of Life","language":"java3","card_line":"This algorithm computes Conway's Game of Life .","summary":"This algorithm computes <a href=\"http://en.wikipedia.org/wiki/Conway%27s_Game_of_Life\">Conway's Game of Life</a>. <br/> The basic input is: <b>[ boardWidth , boardHeight , ListOfLiveCells ]</b><br/>&#10;Which will return the list of live cells in the next iteration of the game.  The list of live cells expects <b>List(int[])</b> where each <b>int[]</b> in the list is a pair of <b>int</b> values corresponding to a position on the board. <br/> The other inputs are <b>[ ... , ... , ... , doesBoardWrap , numberOfIterations , returnAllIterations, returnEntireBoard].</b><br/><br/>&#10;<pre><table>&#10;<tbody><tr>&#10;<td><b>Name</b></td>&#10;<td>&#160;&#160;&#160;</td>&#10;<td><b>Type</b></td>&#10;<td>&#160;&#160;&#160;</td>&#10;<td><b>Description</b></td>&#10;</tr>&#10;<tr><td></td><td>&#160;</td><td></td></tr>&#10;<tr>&#10;<td><b>doesBoardWrap</b></td>&#10;<td>&#160;&#160;&#160;</td>&#10;<td><b>boolean</b></td>&#10;<td>&#160;&#160;&#160;</td>&#10;<td>Determines if the edges of the board wrap to the opposite side.</td>&#10;</tr>&#10;<tr>&#10;<td><b>numberOfIterations </b></td>&#10;<td>&#160;&#160;&#160;</td>&#10;<td><b>int</b></td>&#10;<td>&#160;&#160;&#160;</td>&#10;<td>The number of iterations to run.</td>&#10;</tr>&#10;<tr>&#10;<td><b>returnAllIterations</b></td>&#10;<td>&#160;&#160;&#160;</td>&#10;<td><b>boolean</b></td>&#10;<td>&#160;&#160;&#160;</td>&#10;<td>If all iterations should be returned.</td>&#10;</tr>&#10;<tr>&#10;<td><b>returnEntireBoard</b></td>&#10;<td>&#160;&#160;&#160;</td>&#10;<td><b>boolean</b></td>&#10;<td>&#160;&#160;&#160;</td>&#10;<td>If the return type should be a <b>boolean[][]</b> of the board.</td>&#10;</tr>&#10;</tbody></table></pre>&#10;<br/>&#10;If <b>returnEntireBoard</b> is used <b>returnAllIterations</b> is ignored, and if set to false will only return the last instance of the board, while set to true will return all iterations of the board.<br/>","submitted_at":1426406940000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":77},{"algo_id":16000,"object_id":"c36721d7-3d5c-11e5-aae6-12ad1a8c1691","username":"docs","algoname":"JavaBinaryInAndOut","algolabel":"Java Binary In And Out","language":"java3","card_line":"Example Java algorithm that accepts binary input and echos it as binary output","summary":"<p>Example Java algorithm that accepts binary input and echos it as binary output</p>","submitted_at":1438990461000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":75},{"algo_id":30721,"object_id":"7e69c3e0-7562-11e5-aae6-12ad1a8c1691","username":"opencv","algoname":"FindObjectInImage","algolabel":"Find Object In Image","language":"java4","card_line":"Given an image of an object, searches for that object in an image.","summary":"<p>Given an image of an object, searches for that object in an image.</p><p><span>Returns if the object was found and the center of the object if it was found.</span><br/></p>","submitted_at":1445462309000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":74},{"algo_id":13100,"object_id":"54b64398-d6e0-11e4-8df1-12f53eafe9d2","username":"Muhammet","algoname":"BIPM","algolabel":"BIPM","language":"java3","submitted_at":1427834182000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":74},{"algo_id":14660,"object_id":"cbb91381-fa90-11e4-89ff-123a3b0693f5","username":"etl","algoname":"FileExists","algolabel":"FileExists","language":"java3","submitted_at":1431646291000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":73},{"algo_id":14570,"object_id":"f20384d5-f714-11e4-89ff-123a3b0693f5","username":"marksskram","algoname":"SocrataOpenDataAnalysis","algolabel":"SocrataOpenDataAnalysis","language":"java3","card_line":"Summary The goal here is to combine my first two algorithms:  /marksskram/SocrataOpenDataQuery   which queries data given a dataset ID, domain, and query (an empty string is equiva...","summary":"<h3><span>Summary</span></h3><p><span>The goal here is to combine my first two algorithms: </span><b><a href=\"https://algorithmia.com/algorithms/marksskram/SocrataOpenDataQuery\">/marksskram/SocrataOpenDataQuery</a> </b><span>which queries data given a dataset ID, domain, and query (an empty string is equivalent to a SELECT *) and </span><b><a href=\"https://algorithmia.com/algorithms/marksskram/SomeStats\">/marksskram/SomeStats</a> </b><span>which calculates mean, variance, median, and more.Â </span><br/></p><p>See <a href=\"https://gist.github.com/marks/5c1c41df93b9cfa0f681\">https://gist.github.com/marks/5c1c41df93b9cfa0f681</a> for a pretty version of the JSON output for the sample below</p><p><span>Feedback is always welcome. You can tweet me at @Skram or email me at mark.silverberg@socrata.com</span><br/></p><h3>Example Inputs to Try</h3><p>The top 100 White House salaries (&#34;salary&#34; column)</p><pre>[&#34;open.whitehouse.gov&#34;,&#34;rcp4-3y7g&#34;,&#34;select * order by salary desc limit 100&#34;]</pre><p>City of Chicago owned property (&#34;sq_ft&#34; column)</p><pre>[&#34;data.cityofchicago.org&#34;,&#34;aksk-kvfp&#34;,&#34;select * where ward = 20&#34;]<br/></pre><p><br/></p><p><b>Known Issues<br/></b>- Will probably break if you do not do a &#34;select *&#34;<br/>- Need to document what happens with null and non-numeric values</p>","submitted_at":1431289366000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":71},{"algo_id":8290,"object_id":"8a84a9f3-c96c-11e4-abe1-12f53eafe9d2","username":"lgastako","algoname":"JSONDiff","algolabel":"JSON Diff","language":"java3","submitted_at":1427679206000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":70},{"algo_id":14920,"object_id":"cfdd25e6-0a49-11e5-89ff-123a3b0693f5","username":"bkyan","algoname":"URL2PNG","algolabel":"URL-2-PNG","language":"python2-2","card_line":"Functionality: This algorithm takes a screenshot of the input URL with a 1416x732 viewport and returns the URL of the screenshot PNG.","summary":"<div><b>Functionality:</b><br/></div><span></span><div><span><br/></span></div>This algorithm takes a screenshot of the input URL with a 1416x732 viewport and returns the URL of the screenshot PNG.  The PNG will remain available at the returned URL for the next hour.<div><br/></div><p><b>Status:</b></p><div>This algorithm should not be used for production purposes at the moment, as it relies upon a PhantomJS web service on one of my personal (virtual private) servers.  My plan is to migrate this algorithm into Algorithmia's scalable environment once they have incorporated PhantomJS, allowing for production usage.</div><div><br/></div><p><b>Processing Time:</b></p><p>This algorithm typically takes about 10 seconds to run.  I have the timeout set at 30 seconds, as something is probably went wrong with the render, if the web service hasn't provided a response by then.</p><p><b>Known Issues: </b></p><p><span></span></p><p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\"><span>Flash and WebGL are not supported.</span></p><p><span>PhantomJS appears to have trouble establishing an SSL handshake with sites using certain older cryptography.  Please let me know in the comments, below, if an HTTPS page that you are trying to capture, fails to render.</span></p><p><span><br/></span></p>","submitted_at":1433387086000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":69},{"algo_id":1728,"object_id":"d7b5dd33-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"RandomForest","algolabel":"RandomForest","language":"java3","card_line":"This is the RandomForest classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/RandomForest.html","summary":"<div><span>This is the RandomForest classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/RandomForest.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/RandomForest.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430442826000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":69},{"algo_id":10100,"object_id":"47bb0c38-cae8-11e4-abe1-12f53eafe9d2","username":"thatguy2048","algoname":"piCalculation","algolabel":"piCalculation","language":"java3","card_line":"Pi calculated using Nilakantha series.","summary":"Pi calculated using&#160;Nilakantha series.","submitted_at":1426408156000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":69},{"algo_id":2171,"object_id":"088bcfba-6f9d-11e4-bad7-04011d260101","username":"mahout","algoname":"Recommendation","algolabel":"Recommendation","language":"java3","card_line":"Overview The algorithm encapsulates most of Mahout's recommendation capabilities.","summary":"<div><b>Overview</b></div><div><br/></div>The algorithm encapsulates most of Mahout's recommendation capabilities. It takes as argument a string array of length 2, the first entry being the url of the appropriately formatted data file, the second a recommender option flag, &#34;user&#34; for user-based recommendation, &#34;item&#34; for item-based recommendation, and &#34;matrix&#34; for a matrix factorization based recommendation (currently ALS with default parameters). <span>Eventually we will expand this to allow different parameters and options for neighborhood and similarity functions.</span><div><div><br/></div><div>One of the more convenient datasets is the MovieLens 100k dataset at <a href=\"http://www.grouplens.org/system/files/ml-100k.zip\">http://www.grouplens.org/system/files/ml-100k.zip</a>. More detailed documentation can be found at <a href=\"https://mahout.apache.org/users/recommender/recommender-documentation.html\">https://mahout.apache.org/users/recommender/recommender-documentation.html</a></div><div><br/><div><b>User-based recommendation</b></div><div><b><br/></b></div><div>In this mode, the recommender returns a set of item recommendations for each user, along with the predicted rating for the item. Think of this as generating recommendations based on user similarity. </div><div><b><br/></b></div><div><b>Item-based recommendation</b></div><div><b><br/></b></div><div>This returns, for each item, a list of similar items. </div><div><b><br/></b></div><div><b>Matrix Factorization recommendation (with Alternating Least Squares)</b></div></div><div><b><br/></b></div><div>An alternate and often more effective approach to recommendation that can be useful for uncovering latent explanatory factors. We plan to expose more of this soon, meanwhile, it acts as a user-based recommender.</div><div><br/></div><div><b>Upcoming Features</b></div><div><b><br/></b></div><div>We plan to add ALS on implicit feedback and weighted matrix factorization soon. </div></div>","submitted_at":1435613356000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":68},{"algo_id":14029,"object_id":"7e747a2f-e60e-11e4-849b-0670f2dc1320","username":"ANaimi","algoname":"PDFToText","algolabel":"PDFToText","language":"java3","card_line":"This algorithm takes a PDF file with two coordinates and returns the text bounded within the rectangle of the coordinates.","summary":"<p>This algorithm takes a PDF file with two coordinates and returns the text bounded within the rectangle of the coordinates. </p><div><br/></div><div><b>Input #1</b> (url, page, x1, y1, x2, y2):</div><div><ul><li>URL for PDF file</li><li>Page number - choose 0 for all pages</li><li><span>Coordinate X1 - top left of the rectangle</span><br/></li><li>Coordinate Y1 - top left of the rectangle</li><li>Coordinate X2 - bottom right of the rectangle</li><li>Coordinate Y2 - bottom right of the rectangle</li></ul><div><b>Input #2</b> (url, page, space, x1, y1, x2, y2):</div></div><div>Same as above with an additional space parameter to specify the expected width of whitespace character. The default is 2.0.</div><div><br/></div><div><b>Output</b>:</div><div>Always an array of strings, one element for each page.</div><div><br/></div><div><b>Sample Document</b>:</div><div>https://algorithmia.com/v1/data/ANaimi/PDFtoText/sample.pdf</div><div><br/></div><p></p>","submitted_at":1429761529000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":68},{"algo_id":10915,"object_id":"4d770e93-cc8b-11e4-abe1-12f53eafe9d2","username":"difernal","algoname":"DateTimeCalcutator","algolabel":"DateTime Calcutator","language":"java3","card_line":"Like a alarm Calculate the next up DateTime for an initial DateTime, you can specify the valid days and interval (for example every 3 hour or every 45 minutes or combine both).","summary":"Like a alarm Calculate the next up DateTime for an initial DateTime, you can specify the valid days and interval (for example every 3 hour or every 45 minutes or combine both).<div><br/></div><div>The system return an array with the DateTimes for execution.</div><div><br/></div><div>the imput is:</div><div>[[initHour], [interval], [lowerBound], [upperBound], [days], iterarions]</div><div><br/></div><div><b>initHour:</b> is the Start Time, for example at 8:00 [8, 0]</div><div><b>interval:</b> is the repeated time for example repeat every 1:30 hours [1,0]</div><div><b>lowerbound:</b> when the alarm init for example sinse 7:00AM [7,0]</div><div><b>upper bound:</b> same as lower bound the valid until time like 23:59 &#160;[23, 59]</div><div><b>days:</b> the week days starting by monday must be a boolean [true, true ,true , true, true, false, false]</div><div><b>iterations: &#160;</b>is the window beyond to calculate time.</div><div><br/></div><div>other options to call are:&#160;</div><div>&#160; &#160;</div><div>&#160; &#160;&#160;<span>[[initHour], [interval], [lowerBound], [upperBound], iterarions]</span></div><div><span>&#160; &#160;&#160;</span><span>[[initHour], [interval], iterarions]</span></div><div><span>&#160; &#160;&#160;</span><span>[[initHour], iterarions]</span></div><div><span>&#160; &#160;&#160;</span><span>[initHour]</span><span><br/></span></div><div><br/></div>","submitted_at":1426835506000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":68},{"algo_id":4889,"object_id":"7812dc8c-b6a5-11e4-840d-12f53eafe9d2","username":"sagar_ranglani","algoname":"RandomGreetings","algolabel":"RandomGreetings","language":"java3","card_line":"Generate Random Greetings!","summary":"Generate Random Greetings!<div><br/></div><div>Just provide a &#34;Name&#34; and get a random greeting generated for you! :-)</div>","submitted_at":1445290822000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":67},{"algo_id":16761,"object_id":"6e174686-61af-11e5-aae6-12ad1a8c1691","username":"fdarvas","algoname":"GregoryLoredoAlgorithm","algolabel":"Gregory-Loredo Algorithm","language":"python2-2","card_line":"Computes the Gregory-Loredo algorithm on a list of arrival times This function computes the likelihood of a set of arrival times originating from a periodic process rather than con...","summary":"<p>Computes the Gregory-Loredo algorithm on a list of arrival times <br/></p><p>This function computes the likelihood of a set of arrival times originating from a periodic process rather than constant rate (Poisson) process (e.g. background noise).</p><p>based on Gregory, P. C. and Thomas. J. Loredo, 1992, &#34;A New Method For The Detection Of A Periodic Signal Of Unknown Shape And Period&#34; in The Astrophysical Journal, Astrophysical J., 398, p.146</p><p>Inputs</p><ul><li>Tlist (required)- a list of arrival times</li><li>m_max  (optional, default m_max=12) - number of phase bins</li><li>w_range (optional, default min(20,N/10)*pi/T, N= number of arrival times, T= max(Tlist)) - frequency range to scan for periodicity</li><li>ni (optional, default ni=10) - number of bins for numerical integration of the phase from 0:2pi/m</li><li>parallel (optional, default parallel=False) - parallel execution flag</li></ul><p>Outputs</p><ul><li>O_period - odds ratio for periodic process <br/></li><li>p_period - probability of periodic process (0&lt;=p_period&lt;=1)</li><li>m_opt - optimal bin size <br/></li><li>S - spectrum for m_opt</li><li>w - frequency range of S</li><li>w_peak - most likely frequency</li><li>w_mean - mean frequency</li><li>w_conf - 95% confidence interval of frequency  <br/></li></ul><p>Other sample inputs: </p><p>{&#34;Tlist&#34; : [80,921,2281,5831,6095,7703,8205,8761,11010,11095,14201,22531], &#34;m_max&#34; : 5}</p><p>{&#34;Tlist&#34; : [80,921,2281,5831,6095,7703,8205,8761,11010,11095,14201,22531],&#34;m_max&#34; :5, &#34;ni&#34; : 20}</p>","submitted_at":1444694048000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":66},{"algo_id":14721,"object_id":"2cb6c470-fdab-11e4-89ff-123a3b0693f5","username":"WebPredict","algoname":"NGramsFromSite","algolabel":"NGramsFromSite","language":"java3","card_line":"Return list of N grams from a particular URL, after the text has been extracted from it.","summary":"<p>Return list of N grams from a particular URL, after the text has been extracted from it.</p>","submitted_at":1432038856000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":66},{"algo_id":8051,"object_id":"03dd6147-c951-11e4-abe1-12f53eafe9d2","username":"aburan28","algoname":"BoyerMooreMajority","algolabel":"Boyer-Moore-Majority","language":"python2-2","submitted_at":1426235161000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":65},{"algo_id":2686,"object_id":"2e77337c-8a38-11e4-be78-12e1fbfbf82c","username":"opencv","algoname":"BodyDetection","algolabel":"Body Detection","language":"java3","card_line":"Uses a pretrained model to detect bodies in a given image.","summary":"<span>Uses a pretrained model to detect bodies in a given image. Send your input as a url to a picture that is hosted on our data API, and the output is the same image, with rectangles around the detected bodies, written to the same collection. A text file that contains all the coordinates of the rectangles is also output to the same collection for convenience.</span>","submitted_at":1430445504000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":64},{"algo_id":13275,"object_id":"d602bde5-d8ba-11e4-8df1-12f53eafe9d2","username":"atMaarten","algoname":"ConvertsClassifier","algolabel":"ConvertsClassifier","language":"python2-2","submitted_at":1427927381000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":64},{"algo_id":2688,"object_id":"2e800174-8a38-11e4-be78-12e1fbfbf82c","username":"opencv","algoname":"SmileDetection","algolabel":"Smile Detection","language":"java3","card_line":"Uses a pretrained model to detect smiles in a given image.","summary":"<span>Uses a pretrained model to detect smiles in a given image. Send your input as a url to a picture that is hosted on our data API, and the output is the same image, with rectangles around the detected smiles, written to the same collection. A text file that contains all the coordinates of the rectangles is also output to the same collection for convenience.</span>","submitted_at":1430445509000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":62},{"algo_id":10069,"object_id":"4f1e35b7-cadf-11e4-abe1-12f53eafe9d2","username":"faddishworm","algoname":"ScrableAlgorithm","algolabel":"Scrable Algorithm","language":"java3","card_line":"Scrabble Anagram Finder Given an input of \"tiles\" you can find every legal english word you can make with that combination.","summary":"<h1>Scrabble Anagram Finder</h1><div><br/></div><div>Given an input of &#34;tiles&#34; you can find every legal english word you can make with that combination.<br/><br/>For example, if you have the letters &#34;atme&#34; it will return &#34;<span>meat&#34;,&#34;meta&#34;,&#34;tame&#34;,&#34;team&#34;</span><br/><br/>This is perfect for any word game algorithm that needs to know all legal permutations. In future I may add a bigger dictionary or let the user define a dictionary.</div>","submitted_at":1426411774000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":62},{"algo_id":6170,"object_id":"b8b6bedd-bfa1-11e4-840d-12f53eafe9d2","username":"Tommsy64","algoname":"ConvertCase","algolabel":"ConvertCase","language":"java3","card_line":"Arguments Action - A String Inputs - Either a String or a String Array Return String - if the input was a String Array - if the input was an Array Actions Sentence - Capitalize fir...","summary":"<h3>Arguments</h3><div><ul><li><span>Action - A String</span></li><li>Inputs - Either a String or a String Array</li></ul><h3>Return</h3><div><ul><li><span>String - if the input was a String</span></li><li><span>Array - if the input was an Array</span></li></ul></div><h3>Actions</h3></div><div><ul><li><b>Sentence</b>&#160;- Capitalize first letter of each sentence.</li><li><b>Word</b>&#160;- Capitalize First Letter Of Each Word.</li><li><b>Random</b>&#160;- RANdoM CASe fOR each LEtTer.</li><li><b>Upper</b> - ALL UPPER CASE.</li><li><b>Lower</b> - all lower case</li></ul><div><i><u>Actions are parsed by their first letter</u></i><span>; therefore, it is sufficient enough to do:</span></div></div><pre>[&#34;u&#34;, &#34;uppercase!&#34;]</pre>to get<pre>&#34;UPPERCASE!&#34;<br/></pre><i><b>&#10;toU</b>pper, and <b>toL</b>ower work as well!</i>","submitted_at":1445290444000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":61},{"algo_id":6252,"object_id":"7c898a83-c345-11e4-840d-12f53eafe9d2","username":"ClemensG","algoname":"Addition","algolabel":"Addition","language":"java3","submitted_at":1445292040000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":59},{"algo_id":3929,"object_id":"27b65345-acc8-11e4-840d-12f53eafe9d2","username":"WebPredict","algoname":"DoWordsRhyme","algolabel":"DoWordsRhyme","language":"java3","card_line":"Takes two English words and returns true if they rhyme, false if not.","summary":"Takes two English words and returns true if they rhyme, false if not. Certainly not perfect yet, but works for many cases.","submitted_at":1445290374000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":59},{"algo_id":315,"object_id":"87f0568f-a37b-11e3-8351-040108385a01","username":"codeb34v3r","algoname":"WorldLocations","algolabel":"WorldLocations","language":"java3","card_line":"An API to retrieve a list of World locations.","summary":"An API to retrieve a list of World locations.<div><br></div><div>Currently it supports:</div><pre>\"USA\": All US states</pre><pre>\"Australia\": 7 Australian states</pre><pre>\"TopWorldCities\":&nbsp;<span style=\"background-color: rgb(255, 255, 255);\">[\"Los Angeles\",\"New York\",\"Chicago\",\"San Francisco\",\"Houston\",\"Philadelphia\",\"Phoenix\",\"Pittsburg\",\"San Diego\",\"San Antonio\",\"Austin\",\"Dallas\",\"Detroit\",\"Portland\",\"Miami\",\"Utah\",\"Seattle\",\"Boston\",\"Washington D.C.\",\"Las Vegas\",\"Denver\",\"Singapore\",\"Jakarta\",\"Melbourne\",\"Sydney\",\"HongKong\",\"Shanghai\",\"Beijing\",\"Taipei\",\"Tokyo\",\"Seoul\",\"Mumbay\",\"Cairo\",\"Jerusalem\",\"Beirut\",\"Stockholm\",\"Copenhagen\",\"Frankfurt\",\"Munich\",\"Stuttgart\",\"Viena\",\"Rome\",\"Milan\",\"Paris\",\"Madrid\",\"Barcelona\",\"Porto\",\"London\",\"Liverpool\",\"Manchester\",\"Dublin\",\"Glasgow\"]</span></pre><div><div><br></div>\n\n\n\n\n\n\n\n</div>","submitted_at":1445289882000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":59},{"algo_id":269,"object_id":"99de583e-99bc-11e3-8351-040108385a01","username":"timdumol","algoname":"FordFulkersonMaxFlow","algolabel":"FordFulkersonMaxFlow","language":"java3","card_line":"Ford-Fulkerson (BFS-based aka Edmonds-Karp) Computes a maximum flow given a weighted directed graph.","summary":"<h3>Ford-Fulkerson (BFS-based aka Edmonds-Karp)</h3><div>&nbsp;</div><div>Computes a maximum flow given a weighted directed graph. Uses the scaling variant of Edmonds-Karp for stronger polynomial bounds (c.f. <i>Network Flows</i>&nbsp;by Ahuja, et al.).</div><div><br></div>Takes as input a list of node IDs, a list of edges, the source ID, and the sink ID. The edges should be input as a dictionary of the form:</div>\n\n<pre>{\"start\": &lt;start ID&gt;, \"end\": &nbsp;&lt;end ID&gt;, \"capacity\": &lt;integer&gt;}</pre>\n\n<p>Returns as output a dictionary with keys \"flow\", an integer denoting the total flow, and \"edges\", a list of edges in the form:</p>\n\n<pre>{\"start\": &lt;start ID&gt;, \"end\": &nbsp;&lt;end ID&gt;, \"flow\": &lt;integer&gt;}</pre>","submitted_at":1445289199000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":59},{"algo_id":2682,"object_id":"2e61ffc6-8a38-11e4-be78-12e1fbfbf82c","username":"opencv","algoname":"EyeDetection","algolabel":"Eye Detection","language":"java3","card_line":"Uses a pretrained model to detect eyes in a given image.","summary":"<span>Uses a pretrained model to detect eyes in a given image. Send your input as a url to a picture that is hosted on our data API, and the output is the same image, with rectangles around the detected eyes, written to the same collection. A text file that contains all the coordinates of the rectangles is also output to the same collection for convenience.</span>","submitted_at":1439496924000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":59},{"algo_id":13883,"object_id":"c9d11801-e3c2-11e4-8df1-12f53eafe9d2","username":"web","algoname":"PageRecommender","algolabel":"Page Recommender","language":"java3","card_line":"Crawls the domain and returns, for each crawled page, a list of similar pages within the domain, where similar pages are those that share keywords that are otherwise rare within th...","summary":"Crawls the domain and returns, for each crawled page, a list of similar pages within the domain, where similar pages are those that share keywords that are otherwise rare within the pages of the domain. Input is<div><br/><div><ol><li>A URL.</li><li>The max number of pages to crawl (in breadth-first order).</li><li>The maximum number of keywords to generate per page.</li><li>The maximum number of similar pages to return per page.</li></ol><div><br/></div></div><div>Output is an adjacency list of URLs in the form of a Map&lt;String,Set&lt;String&gt;&gt;. This algorithm is simply a composition of the following algorithms:</div><div><br/></div><div><ol><li><a href=\"https://algorithmia.com/algorithms/web/BreadthFirstSiteMap\">BreadthFirstSiteMap</a><br/></li><li><a href=\"https://algorithmia.com/algorithms/util/Url2Text\">Url2Text</a><br/></li><li><a href=\"https://algorithmia.com/algorithms/nlp/KeywordsForDocumentSet\">KeywordsForDocumentSet</a><br/></li><li><a href=\"https://algorithmia.com/algorithms/nlp/KeywordSetSimilarity\">KeywordSetSimilarity</a><br/></li></ol></div><div><br/></div></div>","submitted_at":1432343147000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":59},{"algo_id":232,"object_id":"9a26138b-98fd-11e3-8351-040108385a01","username":"graph","algoname":"TravelingSalesman","algolabel":"Traveling Salesman","language":"java3","card_line":"The travelling salesman problem (TSP) asks the following question: Given a list of cities, what is the shortest possible route that visits each city exactly once and returns to the...","summary":"The travelling salesman problem (TSP) asks the following question: Given a list of cities, what is the shortest possible route that visits each city exactly once and returns to the origin city? It is an NP-hard problem in combinatorial optimization, important in operations research and theoretical computer science.","submitted_at":1430444221000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":59},{"algo_id":8201,"object_id":"d2501ee8-c961-11e4-abe1-12f53eafe9d2","username":"progtiem","algoname":"meanturns","algolabel":"meanturns","language":"python2-2","card_line":"Return the expected number of turns to witness at least P% of a uniformly distributed set of N items.","summary":"Return the expected number of turns to witness at least P% of a uniformly distributed set of N items.<br/><br/>Input&#160; is given as [N, P]<br/>","submitted_at":1426345052000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":59},{"algo_id":288,"object_id":"695044f9-9aaf-11e3-8351-040108385a01","username":"codeb34v3r","algoname":"MergeSort","algolabel":"MergeSort","language":"java3","card_line":"MergeSort of integer array.","summary":"MergeSort of integer array.","submitted_at":1445289908000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":58},{"algo_id":14655,"object_id":"b62d792b-fa81-11e4-89ff-123a3b0693f5","username":"anowell","algoname":"cachedcurl","algolabel":"Cached Curl","language":"python2-2","card_line":"Curl a URL and cache the result Curl a URL and store the result in a data collection.","summary":"<p>Curl a URL and cache the result<br/></p><p>Curl a URL and store the result in a data collection. If there is a cached copy already, check the time that it was cached and only perform the curl if the cache is older than the specified `cache duration`.<br/></p><p>Input consists of 3 parameters:<br/></p><pre>URL - the URL to curl<br/>Cache Duration: Number of seconds to consider the cached copy valid<br/>Collection: Data URI where you cache results (requires write access)<br/></pre>","submitted_at":1441779916000,"discoverable_world":true,"source_world":true,"license":"mit","call_count":58},{"algo_id":2831,"object_id":"df05b335-9cdf-11e4-be78-12e1fbfbf82c","username":"cmu","algoname":"SequentialMST","algolabel":"SequentialMST","language":"java3","card_line":"This algorithm takes as input a Data API URL to a GML file that contains the input graph.","summary":"This algorithm takes as input a Data API URL to a GML file that contains the input graph. It then computes the weight of the minimum spanning tree using Kruskal's algorithm.","submitted_at":1445372843000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":57},{"algo_id":5395,"object_id":"e87af790-ba08-11e4-840d-12f53eafe9d2","username":"paranoia","algoname":"CombinatorialAuction","algolabel":"CombinatorialAuction","language":"java3","submitted_at":1445290965000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":57},{"algo_id":6266,"object_id":"9ce873e6-c39a-11e4-840d-12f53eafe9d2","username":"thatguy2048","algoname":"BurrowsWheeler","algolabel":"Burrows-Wheeler","language":"java3","card_line":"An implementation of the Burrows-Wheeler Transform which accepts either a String containing the value to be transformed, or a String , int to be reversed.","summary":"An implementation of the <a href=\"http://en.wikipedia.org/wiki/Burrows%E2%80%93Wheeler_transform\">Burrows-Wheeler Transform</a> which accepts either a <b>String</b>&#160;containing the value to be transformed, or a <b>String</b>,<b>int </b>to be reversed.<div><br/></div><div><br/></div>&#10;&#10;<table>&#10;<tbody><tr>&#10;<td><b>Sample Input</b></td>&#10;<td>&#160;&#160;&#160;&#160;</td>&#10;<td><b>Sample Output</b></td>&#10;</tr>&#10;<tr><td><pre>[&#34;nnbaaa&#34;,3]</pre></td>&#10;<td>&#160;&#160;&#160;&#160;</td>&#10;<td><pre>&#34;banana&#34;</pre></td>&#10;</tr><tr>&#10;</tr>&#10;</tbody></table>","submitted_at":1445290522000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":57},{"algo_id":14550,"object_id":"30544d81-f5a7-11e4-89ff-123a3b0693f5","username":"marksskram","algoname":"SomeStats","algolabel":"SomeStats","language":"java3","card_line":"Give this algorithm an array of numbers and it will tell you the: min max variance standardDeviation mean median sum n (number of items) This algorithm uses the  The Apache Commons...","summary":"<p>Give this algorithm an array of numbers and it will tell you the:</p><ul><li>min</li><li>max</li><li>variance</li><li>standardDeviation</li><li>mean</li><li>median</li><li>sum</li><li>n (number of items)</li></ul><p>This algorithm uses the <a href=\"http://commons.apache.org/proper/commons-math/\">The Apache Commons Mathematics Library</a></p><p><i>Inspired and some code borrowed from <a href=\"https://algorithmia.com/algorithms/kenny/SummaryStats\">https://algorithmia.com/algorithms/kenny/SummaryStats</a><a href=\"https://algorithmia.com/algorithms/kenny/SummaryStatsth\"></a></i></p>","submitted_at":1431208240000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":57},{"algo_id":3704,"object_id":"047d90b4-a94f-11e4-840d-12f53eafe9d2","username":"piaktipik","algoname":"matrixmultiplication","algolabel":"matrix multiplication","language":"java3","card_line":"multiply two matrices","summary":"multiply two matrices","submitted_at":1445290890000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":56},{"algo_id":3213,"object_id":"096a6e11-a2a9-11e4-be78-12e1fbfbf82c","username":"barcode","algoname":"QRCodeGenerator","algolabel":"QR Code Generator","language":"java3","card_line":"Input has form A String to encode.","summary":"Input has form<div><ol><li>A String to encode.</li><li>A String file path in the Algorithmia Data API format, for example,&#160;&#34;data://util/GeneratedQRCodes/&#34;.</li><li>A filename without a file exentsion, such as &#34;myBarcode&#34;.</li><li>A file extension, such as &#34;jpg&#34; or &#34;png&#34;.</li><li>An int denoting the height of the barcode (in pixels) to produce. 200 seems to work as a default in most cases.</li><li>An int denoting the width of the barcode (in pixels) to produce. 200 seems to work as a default in most cases.<br/></li></ol><div>The algorithm returns the full path of the generated barcode (file path + name + &#34;.&#34; + suffix).</div></div><div><br/></div><div>This is based on the zxing library (<a href=\"https://github.com/zxing/zxing\">https://github.com/zxing/zxing</a>).</div>","submitted_at":1445374065000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":55},{"algo_id":4939,"object_id":"59b13bfa-b6c1-11e4-840d-12f53eafe9d2","username":"v","algoname":"BigIntPrimalityTest","algolabel":"BigInt Primality Test","language":"java3","card_line":"This is a simple primality test using the BigInteger class that I wrote during my lunch break.","summary":"This is a simple primality test using the BigInteger class that I wrote during my lunch break. I'll improve efficiency once I figure out how to calculate the square root of a BigInteger in Java.&#160;","submitted_at":1445290414000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":55},{"algo_id":14431,"object_id":"2c2c1686-f27c-11e4-849b-0670f2dc1320","username":"sklearn","algoname":"GeographicOutlierDetection","algolabel":"Geographic Outlier Detection","language":"python2-2","card_line":"This algorithm finds the most unexpected events in a set of geographic events relative to some reference set of events.","summary":"This algorithm finds the most unexpected events in a set of geographic events relative to some reference set of events. Specifically, it takes, in the form of a python dictionary<div><ul><li>&#34;reference&#34; - a reference set of events as a list of latitude/longitude pairs</li><li>&#34;data&#34; - the evaluation set, which is also a set of lat/long pairs</li><li>&#34;n&#34; - &#160;the maximum number of events to return as outliers.</li></ul><div>The algorithm uses the first set to train a probabilistic model event occurences, specifically, using <a href=\"http://en.wikipedia.org/wiki/Kernel_density_estimation\">density estimation</a>&#160; for gaussian kernels. It then evaluates the probability of every event in the evaluation set. It then returns a dictionary with the following entries</div></div><div><ul><li>'outliers' - whose value is a list of the indices of the n least probable events in the evaluation set</li><li>'logprobs' - itself a dictionary whose keys are the indices returned above, with corresponding values being the log probabilities of the events.</li><li>'all_lp' - a list of the log probabilities of the events in the evaluation set in the original order. The purpose of this is to allow the user to make their own determination of what counts as an outlier. For instance, if the log probabilities of the outliers do not differ significantly from those of the rest of the set, the user may decide to ignore the classification.</li></ul><div>This is based on scikit-learn's&#160;<a href=\"http://scikit-learn.org/stable/modules/density.html\">implementation of kernel density estimation</a>.</div></div>","submitted_at":1430770588000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":55},{"algo_id":2632,"object_id":"3b95556e-86f5-11e4-be78-12e1fbfbf82c","username":"ApacheOpenNLP","algoname":"NamedEntityRecognition","algolabel":"Named Entity Recognition","language":"java3","card_line":"The Name Finder can detect named entities and numbers in text.","summary":"<span>The Name Finder can detect named entities and numbers in text. It is currently set to detect persons (proper names), organizations, locations, times, dates, money, and percentages. To be able to detect entities the Name Finder needs a model. The model is dependent on the language and entity type it was trained for. The OpenNLP projects offers a number of pre-trained name finder models which are trained on various freely available corpora. They are available in data://ApacheOpenNLP/models/.&#160;</span><span>To find names in raw text the text must be&#160;segmented into tokens and sentences, which this implementation handles by default for standard English. Its important that the tokenization for the training data and the input text is identical, so if working with something other than standard English, you need to pick different models from the models directory or train your own.</span><div><span><br/></span></div><div>For more information visit&#160;<a href=\"http://opennlp.apache.org/\">http://opennlp.apache.org</a>.<span><br/></span></div>","submitted_at":1430446051000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":55},{"algo_id":3210,"object_id":"85de8b54-a2a6-11e4-be78-12e1fbfbf82c","username":"barcode","algoname":"BarcodeGenerator","algolabel":"Barcode Generator","language":"java3","card_line":"Input has form Information to encode, which is a String but may have additional constraints depending upon the format, for instance EAN 8 requires an 8 digit number and will fail o...","summary":"Input has form<div><ol><li>Information to encode, which is a String but may have additional constraints depending upon the format, for instance EAN 8 requires an 8 digit number and will fail on other inputs. Consult the documentation on each individual standard to clarify.</li><li>A String file path in the Algorithmia Data API format, for example,&#160;&#34;data://util/GeneratedQRCodes/&#34;.</li><li>A filename without a file exentsion, such as &#34;myBarcode&#34;.</li><li>A file extension, such as &#34;jpg&#34; or &#34;png&#34;.</li><li>A String denoting the desired barcode format. See below for options.<br/></li><li>An int denoting the height of the barcode (in pixels) to produce. 200 seems to work as a default in most cases.</li><li>An int denoting the width of the barcode (in pixels) to produce. 200 seems to work as a default in most cases.<br/></li></ol><div>The algorithm returns the full path of the generated barcode (file path + name + &#34;.&#34; + suffix).</div><div><br/></div><div>This is based on the zxing library (<a href=\"https://github.com/zxing/zxing\">https://github.com/zxing/zxing</a>).<br/></div><div><br/></div>Options for barcode format include</div><div><ol><li>&#34;AZTEC&#34; for the 2D Aztec Code (<a href=\"http://en.wikipedia.org/wiki/Aztec_Code\">http://en.wikipedia.org/wiki/Aztec_Code</a>). Aztec is readable&#160;/util/BarcodeReader.</li><li>&#34;CODE_39&#34; for 1D Code 39 (<a href=\"http://en.wikipedia.org/wiki/Code_39\">http://en.wikipedia.org/wiki/Code_39</a>). This only accepts a certain set of characters and will fail if given a wrong character.</li><li>CODE_128 for 1D Code 128 (<a href=\"http://en.wikipedia.org/wiki/Code_128\">http://en.wikipedia.org/wiki/Code_128</a>). CODE 128 is readable by&#160;/util/BarcodeReader.<br/></li><li>DATA_MATRIX for the 2D Data Matrix code (<a href=\"http://en.wikipedia.org/wiki/Data_Matrix\">http://en.wikipedia.org/wiki/Data_Matrix</a>). This format can be generated but cannot currently be read by /util/BarcodeReader.</li><li>EAN_8 for 1D EAN 8 (<a href=\"http://en.wikipedia.org/wiki/EAN-8\">http://en.wikipedia.org/wiki/EAN-8</a>). This is not currently readable by&#160;/util/BarcodeReader.<br/></li><li>EAN-13 for 1D EAN 13 (). Must be 13 digits, the last of which is a checksum digit, for instance, &#34;0075678164125.&#34; This format is not currently readable by&#160;/util/BarcodeReader.<br/></li><li>ITF for Interleaved Two of Five (<a href=\"http://en.wikipedia.org/wiki/Interleaved_2_of_5\">http://en.wikipedia.org/wiki/Interleaved_2_of_5</a>).</li><li>&#34;PDF_417&#34; for PDF 417 (<a href=\"http://en.wikipedia.org/wiki/PDF417\">http://en.wikipedia.org/wiki/PDF417</a>). This is a stacked linear barcode that is readable by&#160;/util/BarcodeReader.<br/></li><li>&#34;QR_CODE&#34; for 2D QR Codes (<a href=\"http://en.wikipedia.org/wiki/QR_code\">http://en.wikipedia.org/wiki/QR_code</a>). This is readable by&#160;/util/BarcodeReader. For simplicity it is probably better to use /util/QRCodeGenerator and /util/QRCodeReader.</li><li>&#34;UPC_A&#34; for UPC A (<a href=\"http://en.wikipedia.org/wiki/Universal_Product_Code\">http://en.wikipedia.org/wiki/Universal_Product_Code</a>). This is not currently readable by&#160;/util/BarcodeReader.</li></ol></div>","submitted_at":1445373791000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":54},{"algo_id":67,"object_id":"67759c11-8e3c-11e3-8351-040108385a01","username":"kenny","algoname":"JavaSort","algolabel":"JavaSort","language":"java3","card_line":"Sort a list of numbers using the Java Collections class.","summary":"Sort a list of numbers using the Java Collections class.","submitted_at":1430446552000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":54},{"algo_id":4879,"object_id":"c6c435bf-b69e-11e4-840d-12f53eafe9d2","username":"sagar_ranglani","algoname":"TimeBasedGreetings","algolabel":"TimeBasedGreetings","language":"java3","card_line":"Introduction The API provides different greetings based on different timezones.","summary":"<p class=\"p1\"></p><h3>Introduction</h3><p>The API provides different greetings based on different timezones.</p><p>Just provide &#34;Name&#34; and the Time Zone&#34; and get a Custom Greeting String!</p><h3>Available Time Zones</h3><ul>    <li><span>Etc/GMT+12</span><br/></li>    <li><span>Etc/GMT+11</span><br/></li>    <li><span>MIT</span><br/></li>    <li><span>Pacific/Apia</span><br/></li>    <li><span>Pacific/Midway</span><br/></li>    <li><span>Pacific/Niue</span><br/></li>    <li><span>Pacific/Pago_Pago</span><br/></li>    <li><span>Pacific/Samoa</span><br/></li>    <li><span>US/Samoa</span><br/></li>    <li><span>America/Adak</span><br/></li>    <li><span>America/Atka</span><br/></li>    <li><span>Etc/GMT+10</span><br/></li>    <li><span>HST</span><br/></li>    <li><span>Pacific/Fakaofo</span><br/></li>    <li><span>Pacific/Honolulu</span><br/></li>    <li><span>Pacific/Johnston</span><br/></li>    <li><span>Pacific/Rarotonga</span><br/></li>    <li><span>Pacific/Tahiti</span><br/></li>    <li><span>SystemV/HST10</span><br/></li>    <li><span>US/Aleutian</span><br/></li>    <li><span>US/Hawaii</span><br/></li>    <li><span>Pacific/Marquesas</span><br/></li>    <li><span>AST</span><br/></li>    <li><span>America/Anchorage</span><br/></li>    <li><span>America/Juneau</span><br/></li>    <li><span>America/Nome</span><br/></li>    <li><span>America/Yakutat</span><br/></li>    <li><span>Etc/GMT+9</span><br/></li>    <li><span>Pacific/Gambier</span><br/></li>    <li><span>SystemV/YST9</span><br/></li>    <li><span>SystemV/YST9YDT</span><br/></li>    <li><span>US/Alaska</span><br/></li>    <li><span>America/Dawson</span><br/></li>    <li><span>America/Ensenada</span><br/></li>    <li><span>America/Los_Angeles</span><br/></li>    <li><span>America/Tijuana</span><br/></li>    <li><span>America/Vancouver</span><br/></li>    <li><span>America/Whitehorse</span><br/></li>    <li><span>Canada/Pacific</span><br/></li>    <li><span>Canada/Yukon</span><br/></li>    <li><span>Etc/GMT+8</span><br/></li>    <li><span>Mexico/BajaNorte</span><br/></li>    <li><span>PST</span><br/></li>    <li><span>PST8PDT</span><br/></li>    <li><span>Pacific/Pitcairn</span><br/></li>    <li><span>SystemV/PST8</span><br/></li>    <li><span>SystemV/PST8PDT</span><br/></li>    <li><span>US/Pacific</span><br/></li>    <li><span>US/Pacific-New</span><br/></li>    <li><span>America/Boise</span><br/></li>    <li><span>America/Cambridge_Bay</span><br/></li>    <li><span>America/Chihuahua</span><br/></li>    <li><span>America/Dawson_Creek</span><br/></li>    <li><span>America/Denver</span><br/></li>    <li><span>America/Edmonton</span><br/></li>    <li><span>America/Hermosillo</span><br/></li>    <li><span>America/Inuvik</span><br/></li>    <li><span>America/Mazatlan</span><br/></li>    <li><span>America/Phoenix</span><br/></li>    <li><span>America/Shiprock</span><br/></li>    <li><span>America/Yellowknife</span><br/></li>    <li><span>Canada/Mountain</span><br/></li>    <li><span>Etc/GMT+7</span><br/></li>    <li><span>MST</span><br/></li>    <li><span>MST7MDT</span><br/></li>    <li><span>Mexico/BajaSur</span><br/></li>    <li><span>Navajo</span><br/></li>    <li><span>PNT</span><br/></li>    <li><span>SystemV/MST7</span><br/></li>    <li><span>SystemV/MST7MDT</span><br/></li>    <li><span>US/Arizona</span><br/></li>    <li><span>US/Mountain</span><br/></li>    <li><span>America/Belize</span><br/></li>    <li><span>America/Cancun</span><br/></li>    <li><span>America/Chicago</span><br/></li>    <li><span>America/Costa_Rica</span><br/></li>    <li><span>America/El_Salvador</span><br/></li>    <li><span>America/Guatemala</span><br/></li>    <li><span>America/Managua</span><br/></li>    <li><span>America/Menominee</span><br/></li>    <li><span>America/Merida</span><br/></li>    <li><span>America/Mexico_City</span><br/></li>    <li><span>America/Monterrey</span><br/></li>    <li><span>America/North_Dakota/Center</span><br/></li>    <li><span>America/Rainy_River</span><br/></li>    <li><span>America/Rankin_Inlet</span><br/></li>    <li><span>America/Regina</span><br/></li>    <li><span>America/Swift_Current</span><br/></li>    <li><span>America/Tegucigalpa</span><br/></li>    <li><span>America/Winnipeg</span><br/></li>    <li><span>CST</span><br/></li>    <li><span>CST6CDT</span><br/></li>    <li><span>Canada/Central</span><br/></li>    <li><span>Canada/East-Saskatchewan</span><br/></li>    <li><span>Canada/Saskatchewan</span><br/></li>    <li><span>Chile/EasterIsland</span><br/></li>    <li><span>Etc/GMT+6</span><br/></li>    <li><span>Mexico/General</span><br/></li>    <li><span>Pacific/Easter</span><br/></li>    <li><span>Pacific/Galapagos</span><br/></li>    <li><span>SystemV/CST6</span><br/></li>    <li><span>SystemV/CST6CDT</span><br/></li>    <li><span>US/Central</span><br/></li>    <li><span>America/Bogota</span><br/></li>    <li><span>America/Cayman</span><br/></li>    <li><span>America/Detroit</span><br/></li>    <li><span>America/Eirunepe</span><br/></li>    <li><span>America/Fort_Wayne</span><br/></li>    <li><span>America/Grand_Turk</span><br/></li>    <li><span>America/Guayaquil</span><br/></li>    <li><span>America/Havana</span><br/></li>    <li><span>America/Indiana/Indianapolis</span><br/></li>    <li><span>America/Indiana/Knox</span><br/></li>    <li><span>America/Indiana/Marengo</span><br/></li>    <li><span>America/Indiana/Vevay</span><br/></li>    <li><span>America/Indianapolis</span><br/></li>    <li><span>America/Iqaluit</span><br/></li>    <li><span>America/Jamaica</span><br/></li>    <li><span>America/Kentucky/Louisville</span><br/></li>    <li><span>America/Kentucky/Monticello</span><br/></li>    <li><span>America/Knox_IN</span><br/></li>    <li><span>America/Lima</span><br/></li>    <li><span>America/Louisville</span><br/></li>    <li><span>America/Montreal</span><br/></li>    <li><span>America/Nassau</span><br/></li>    <li><span>America/New_York</span><br/></li>    <li><span>America/Nipigon</span><br/></li>    <li><span>America/Panama</span><br/></li>    <li><span>America/Pangnirtung</span><br/></li>    <li><span>America/Port-au-Prince</span><br/></li>    <li><span>America/Porto_Acre</span><br/></li>    <li><span>America/Rio_Branco</span><br/></li>    <li><span>America/Thunder_Bay</span><br/></li>    <li><span>America/Toronto</span><br/></li>    <li><span>Brazil/Acre</span><br/></li>    <li><span>Canada/Eastern</span><br/></li>    <li><span>Cuba</span><br/></li>    <li><span>EST</span><br/></li>    <li><span>EST5EDT</span><br/></li>    <li><span>Etc/GMT+5</span><br/></li>    <li><span>IET</span><br/></li>    <li><span>Jamaica</span><br/></li>    <li><span>SystemV/EST5</span><br/></li>    <li><span>SystemV/EST5EDT</span><br/></li>    <li><span>US/East-Indiana</span><br/></li>    <li><span>US/Eastern</span><br/></li>    <li><span>US/Indiana-Starke</span><br/></li>    <li><span>US/Michigan</span><br/></li>    <li><span>America/Anguilla</span><br/></li>    <li><span>America/Antigua</span><br/></li>    <li><span>America/Aruba</span><br/></li>    <li><span>America/Asuncion</span><br/></li>    <li><span>America/Barbados</span><br/></li>    <li><span>America/Boa_Vista</span><br/></li>    <li><span>America/Campo_Grande</span><br/></li>    <li><span>America/Caracas</span><br/></li>    <li><span>America/Cuiaba</span><br/></li>    <li><span>America/Curacao</span><br/></li>    <li><span>America/Dominica</span><br/></li>    <li><span>America/Glace_Bay</span><br/></li>    <li><span>America/Goose_Bay</span><br/></li>    <li><span>America/Grenada</span><br/></li>    <li><span>America/Guadeloupe</span><br/></li>    <li><span>America/Guyana</span><br/></li>    <li><span>America/Halifax</span><br/></li>    <li><span>America/La_Paz</span><br/></li>    <li><span>America/Manaus</span><br/></li>    <li><span>America/Martinique</span><br/></li>    <li><span>America/Montserrat</span><br/></li>    <li><span>America/Port_of_Spain</span><br/></li>    <li><span>America/Porto_Velho</span><br/></li>    <li><span>America/Puerto_Rico</span><br/></li>    <li><span>America/Santiago</span><br/></li>    <li><span>America/Santo_Domingo</span><br/></li>    <li><span>America/St_Kitts</span><br/></li>    <li><span>America/St_Lucia</span><br/></li>    <li><span>America/St_Thomas</span><br/></li>    <li><span>America/St_Vincent</span><br/></li>    <li><span>America/Thule</span><br/></li>    <li><span>America/Tortola</span><br/></li>    <li><span>America/Virgin</span><br/></li>    <li><span>Antarctica/Palmer</span><br/></li>    <li><span>Atlantic/Bermuda</span><br/></li>    <li><span>Atlantic/Stanley</span><br/></li>    <li><span>Brazil/West</span><br/></li>    <li><span>Canada/Atlantic</span><br/></li>    <li><span>Chile/Continental</span><br/></li>    <li><span>Etc/GMT+4</span><br/></li>    <li><span>PRT</span><br/></li>    <li><span>SystemV/AST4</span><br/></li>    <li><span>SystemV/AST4ADT</span><br/></li>    <li><span>America/St_Johns</span><br/></li>    <li><span>CNT</span><br/></li>    <li><span>Canada/Newfoundland</span><br/></li>    <li><span>AGT</span><br/></li>    <li><span>America/Araguaina</span><br/></li>    <li><span>America/Bahia</span><br/></li>    <li><span>America/Belem</span><br/></li>    <li><span>America/Buenos_Aires</span><br/></li>    <li><span>America/Catamarca</span><br/></li>    <li><span>America/Cayenne</span><br/></li>    <li><span>America/Cordoba</span><br/></li>    <li><span>America/Fortaleza</span><br/></li>    <li><span>America/Godthab</span><br/></li>    <li><span>America/Jujuy</span><br/></li>    <li><span>America/Maceio</span><br/></li>    <li><span>America/Mendoza</span><br/></li>    <li><span>America/Miquelon</span><br/></li>    <li><span>America/Montevideo</span><br/></li>    <li><span>America/Paramaribo</span><br/></li>    <li><span>America/Recife</span><br/></li>    <li><span>America/Rosario</span><br/></li>    <li><span>America/Sao_Paulo</span><br/></li>    <li><span>Antarctica/Rothera</span><br/></li>    <li><span>BET</span><br/></li>    <li><span>Brazil/East</span><br/></li>    <li><span>Etc/GMT+3</span><br/></li>    <li><span>America/Noronha</span><br/></li>    <li><span>Atlantic/South_Georgia</span><br/></li>    <li><span>Brazil/DeNoronha</span><br/></li>    <li><span>Etc/GMT+2</span><br/></li>    <li><span>America/Scoresbysund</span><br/></li>    <li><span>Atlantic/Azores</span><br/></li>    <li><span>Atlantic/Cape_Verde</span><br/></li>    <li><span>Etc/GMT+1</span><br/></li>    <li><span>Africa/Abidjan</span><br/></li>    <li><span>Africa/Accra</span><br/></li>    <li><span>Africa/Bamako</span><br/></li>    <li><span>Africa/Banjul</span><br/></li>    <li><span>Africa/Bissau</span><br/></li>    <li><span>Africa/Casablanca</span><br/></li>    <li><span>Africa/Conakry</span><br/></li>    <li><span>Africa/Dakar</span><br/></li>    <li><span>Africa/El_Aaiun</span><br/></li>    <li><span>Africa/Freetown</span><br/></li>    <li><span>Africa/Lome</span><br/></li>    <li><span>Africa/Monrovia</span><br/></li>    <li><span>Africa/Nouakchott</span><br/></li>    <li><span>Africa/Ouagadougou</span><br/></li>    <li><span>Africa/Sao_Tome</span><br/></li>    <li><span>Africa/Timbuktu</span><br/></li>    <li><span>America/Danmarkshavn</span><br/></li>    <li><span>Atlantic/Canary</span><br/></li>    <li><span>Atlantic/Faeroe</span><br/></li>    <li><span>Atlantic/Madeira</span><br/></li>    <li><span>Atlantic/Reykjavik</span><br/></li>    <li><span>Atlantic/St_Helena</span><br/></li>    <li><span>Eire</span><br/></li>    <li><span>Etc/GMT</span><br/></li>    <li><span>Etc/GMT+0</span><br/></li>    <li><span>Etc/GMT-0</span><br/></li>    <li><span>Etc/GMT0</span><br/></li>    <li><span>Etc/Greenwich</span><br/></li>    <li><span>Etc/UCT</span><br/></li>    <li><span>Etc/UTC</span><br/></li>    <li><span>Etc/Universal</span><br/></li>    <li><span>Etc/Zulu</span><br/></li>    <li><span>Europe/Belfast</span><br/></li>    <li><span>Europe/Dublin</span><br/></li>    <li><span>Europe/Lisbon</span><br/></li>    <li><span>Europe/London</span><br/></li>    <li><span>GB</span><br/></li>    <li><span>GB-Eire</span><br/></li>    <li><span>GMT</span><br/></li>    <li><span>GMT0</span><br/></li>    <li><span>Greenwich</span><br/></li>    <li><span>Iceland</span><br/></li>    <li><span>Portugal</span><br/></li>    <li><span>UCT</span><br/></li>    <li><span>UTC</span><br/></li>    <li><span>Universal</span><br/></li>    <li><span>WET</span><br/></li>    <li><span>Zulu</span><br/></li>    <li><span>Africa/Algiers</span><br/></li>    <li><span>Africa/Bangui</span><br/></li>    <li><span>Africa/Brazzaville</span><br/></li>    <li><span>Africa/Ceuta</span><br/></li>    <li><span>Africa/Douala</span><br/></li>    <li><span>Africa/Kinshasa</span><br/></li>    <li><span>Africa/Lagos</span><br/></li>    <li><span>Africa/Libreville</span><br/></li>    <li><span>Africa/Luanda</span><br/></li>    <li><span>Africa/Malabo</span><br/></li>    <li><span>Africa/Ndjamena</span><br/></li>    <li><span>Africa/Niamey</span><br/></li>    <li><span>Africa/Porto-Novo</span><br/></li>    <li><span>Africa/Tunis</span><br/></li>    <li><span>Africa/Windhoek</span><br/></li>    <li><span>Arctic/Longyearbyen</span><br/></li>    <li><span>Atlantic/Jan_Mayen</span><br/></li>    <li><span>CET</span><br/></li>    <li><span>ECT</span><br/></li>    <li><span>Etc/GMT-1</span><br/></li>    <li><span>Europe/Amsterdam</span><br/></li>    <li><span>Europe/Andorra</span><br/></li>    <li><span>Europe/Belgrade</span><br/></li>    <li><span>Europe/Berlin</span><br/></li>    <li><span>Europe/Bratislava</span><br/></li>    <li><span>Europe/Brussels</span><br/></li>    <li><span>Europe/Budapest</span><br/></li>    <li><span>Europe/Copenhagen</span><br/></li>    <li><span>Europe/Gibraltar</span><br/></li>    <li><span>Europe/Ljubljana</span><br/></li>    <li><span>Europe/Luxembourg</span><br/></li>    <li><span>Europe/Madrid</span><br/></li>    <li><span>Europe/Malta</span><br/></li>    <li><span>Europe/Monaco</span><br/></li>    <li><span>Europe/Oslo</span><br/></li>    <li><span>Europe/Paris</span><br/></li>    <li><span>Europe/Prague</span><br/></li>    <li><span>Europe/Rome</span><br/></li>    <li><span>Europe/San_Marino</span><br/></li>    <li><span>Europe/Sarajevo</span><br/></li>    <li><span>Europe/Skopje</span><br/></li>    <li><span>Europe/Stockholm</span><br/></li>    <li><span>Europe/Tirane</span><br/></li>    <li><span>Europe/Vaduz</span><br/></li>    <li><span>Europe/Vatican</span><br/></li>    <li><span>Europe/Vienna</span><br/></li>    <li><span>Europe/Warsaw</span><br/></li>    <li><span>Europe/Zagreb</span><br/></li>    <li><span>Europe/Zurich</span><br/></li>    <li><span>MET</span><br/></li>    <li><span>Poland</span><br/></li>    <li><span>ART</span><br/></li>    <li><span>Africa/Blantyre</span><br/></li>    <li><span>Africa/Bujumbura</span><br/></li>    <li><span>Africa/Cairo</span><br/></li>    <li><span>Africa/Gaborone</span><br/></li>    <li><span>Africa/Harare</span><br/></li>    <li><span>Africa/Johannesburg</span><br/></li>    <li><span>Africa/Kigali</span><br/></li>    <li><span>Africa/Lubumbashi</span><br/></li>    <li><span>Africa/Lusaka</span><br/></li>    <li><span>Africa/Maputo</span><br/></li>    <li><span>Africa/Maseru</span><br/></li>    <li><span>Africa/Mbabane</span><br/></li>    <li><span>Africa/Tripoli</span><br/></li>    <li><span>Asia/Amman</span><br/></li>    <li><span>Asia/Beirut</span><br/></li>    <li><span>Asia/Damascus</span><br/></li>    <li><span>Asia/Gaza</span><br/></li>    <li><span>Asia/Istanbul</span><br/></li>    <li><span>Asia/Jerusalem</span><br/></li>    <li><span>Asia/Nicosia</span><br/></li>    <li><span>Asia/Tel_Aviv</span><br/></li>    <li><span>CAT</span><br/></li>    <li><span>EET</span><br/></li>    <li><span>Egypt</span><br/></li>    <li><span>Etc/GMT-2</span><br/></li>    <li><span>Europe/Athens</span><br/></li>    <li><span>Europe/Bucharest</span><br/></li>    <li><span>Europe/Chisinau</span><br/></li>    <li><span>Europe/Helsinki</span><br/></li>    <li><span>Europe/Istanbul</span><br/></li>    <li><span>Europe/Kaliningrad</span><br/></li>    <li><span>Europe/Kiev</span><br/></li>    <li><span>Europe/Minsk</span><br/></li>    <li><span>Europe/Nicosia</span><br/></li>    <li><span>Europe/Riga</span><br/></li>    <li><span>Europe/Simferopol</span><br/></li>    <li><span>Europe/Sofia</span><br/></li>    <li><span>Europe/Tallinn</span><br/></li>    <li><span>Europe/Tiraspol</span><br/></li>    <li><span>Europe/Uzhgorod</span><br/></li>    <li><span>Europe/Vilnius</span><br/></li>    <li><span>Europe/Zaporozhye</span><br/></li>    <li><span>Israel</span><br/></li>    <li><span>Libya</span><br/></li>    <li><span>Turkey</span><br/></li>    <li><span>Africa/Addis_Ababa</span><br/></li>    <li><span>Africa/Asmera</span><br/></li>    <li><span>Africa/Dar_es_Salaam</span><br/></li>    <li><span>Africa/Djibouti</span><br/></li>    <li><span>Africa/Kampala</span><br/></li>    <li><span>Africa/Khartoum</span><br/></li>    <li><span>Africa/Mogadishu</span><br/></li>    <li><span>Africa/Nairobi</span><br/></li>    <li><span>Antarctica/Syowa</span><br/></li>    <li><span>Asia/Aden</span><br/></li>    <li><span>Asia/Baghdad</span><br/></li>    <li><span>Asia/Bahrain</span><br/></li>    <li><span>Asia/Kuwait</span><br/></li>    <li><span>Asia/Qatar</span><br/></li>    <li><span>Asia/Riyadh</span><br/></li>    <li><span>EAT</span><br/></li>    <li><span>Etc/GMT-3</span><br/></li>    <li><span>Europe/Moscow</span><br/></li>    <li><span>Indian/Antananarivo</span><br/></li>    <li><span>Indian/Comoro</span><br/></li>    <li><span>Indian/Mayotte</span><br/></li>    <li><span>W-SU</span><br/></li>    <li><span>Asia/Riyadh87</span><br/></li>    <li><span>Asia/Riyadh88</span><br/></li>    <li><span>Asia/Riyadh89</span><br/></li>    <li><span>Mideast/Riyadh87</span><br/></li>    <li><span>Mideast/Riyadh88</span><br/></li>    <li><span>Mideast/Riyadh89</span><br/></li>    <li><span>Asia/Tehran</span><br/></li>    <li><span>Iran</span><br/></li>    <li><span>Asia/Aqtau</span><br/></li>    <li><span>Asia/Baku</span><br/></li>    <li><span>Asia/Dubai</span><br/></li>    <li><span>Asia/Muscat</span><br/></li>    <li><span>Asia/Oral</span><br/></li>    <li><span>Asia/Tbilisi</span><br/></li>    <li><span>Asia/Yerevan</span><br/></li>    <li><span>Etc/GMT-4</span><br/></li>    <li><span>Europe/Samara</span><br/></li>    <li><span>Indian/Mahe</span><br/></li>    <li><span>Indian/Mauritius</span><br/></li>    <li><span>Indian/Reunion</span><br/></li>    <li><span>NET</span><br/></li>    <li><span>Asia/Kabul</span><br/></li>    <li><span>Asia/Aqtobe</span><br/></li>    <li><span>Asia/Ashgabat</span><br/></li>    <li><span>Asia/Ashkhabad</span><br/></li>    <li><span>Asia/Bishkek</span><br/></li>    <li><span>Asia/Dushanbe</span><br/></li>    <li><span>Asia/Karachi</span><br/></li>    <li><span>Asia/Samarkand</span><br/></li>    <li><span>Asia/Tashkent</span><br/></li>    <li><span>Asia/Yekaterinburg</span><br/></li>    <li><span>Etc/GMT-5</span><br/></li>    <li><span>Indian/Kerguelen</span><br/></li>    <li><span>Indian/Maldives</span><br/></li>    <li><span>PLT</span><br/></li>    <li><span>Asia/Calcutta</span><br/></li>    <li><span>IST</span><br/></li>    <li><span>Asia/Katmandu</span><br/></li>    <li><span>Antarctica/Mawson</span><br/></li>    <li><span>Antarctica/Vostok</span><br/></li>    <li><span>Asia/Almaty</span><br/></li>    <li><span>Asia/Colombo</span><br/></li>    <li><span>Asia/Dacca</span><br/></li>    <li><span>Asia/Dhaka</span><br/></li>    <li><span>Asia/Novosibirsk</span><br/></li>    <li><span>Asia/Omsk</span><br/></li>    <li><span>Asia/Qyzylorda</span><br/></li>    <li><span>Asia/Thimbu</span><br/></li>    <li><span>Asia/Thimphu</span><br/></li>    <li><span>BST</span><br/></li>    <li><span>Etc/GMT-6</span><br/></li>    <li><span>Indian/Chagos</span><br/></li>    <li><span>Asia/Rangoon</span><br/></li>    <li><span>Indian/Cocos</span><br/></li>    <li><span>Antarctica/Davis</span><br/></li>    <li><span>Asia/Bangkok</span><br/></li>    <li><span>Asia/Hovd</span><br/></li>    <li><span>Asia/Jakarta</span><br/></li>    <li><span>Asia/Krasnoyarsk</span><br/></li>    <li><span>Asia/Phnom_Penh</span><br/></li>    <li><span>Asia/Pontianak</span><br/></li>    <li><span>Asia/Saigon</span><br/></li>    <li><span>Asia/Vientiane</span><br/></li>    <li><span>Etc/GMT-7</span><br/></li>    <li><span>Indian/Christmas</span><br/></li>    <li><span>VST</span><br/></li>    <li><span>Antarctica/Casey</span><br/></li>    <li><span>Asia/Brunei</span><br/></li>    <li><span>Asia/Chongqing</span><br/></li>    <li><span>Asia/Chungking</span><br/></li>    <li><span>Asia/Harbin</span><br/></li>    <li><span>Asia/Hong_Kong</span><br/></li>    <li><span>Asia/Irkutsk</span><br/></li>    <li><span>Asia/Kashgar</span><br/></li>    <li><span>Asia/Kuala_Lumpur</span><br/></li>    <li><span>Asia/Kuching</span><br/></li>    <li><span>Asia/Macao</span><br/></li>    <li><span>Asia/Macau</span><br/></li>    <li><span>Asia/Makassar</span><br/></li>    <li><span>Asia/Manila</span><br/></li>    <li><span>Asia/Shanghai</span><br/></li>    <li><span>Asia/Singapore</span><br/></li>    <li><span>Asia/Taipei</span><br/></li>    <li><span>Asia/Ujung_Pandang</span><br/></li>    <li><span>Asia/Ulaanbaatar</span><br/></li>    <li><span>Asia/Ulan_Bator</span><br/></li>    <li><span>Asia/Urumqi</span><br/></li>    <li><span>Australia/Perth</span><br/></li>    <li><span>Australia/West</span><br/></li>    <li><span>CTT</span><br/></li>    <li><span>Etc/GMT-8</span><br/></li>    <li><span>Hongkong</span><br/></li>    <li><span>PRC</span><br/></li>    <li><span>Singapore</span><br/></li>    <li><span>Asia/Choibalsan</span><br/></li>    <li><span>Asia/Dili</span><br/></li>    <li><span>Asia/Jayapura</span><br/></li>    <li><span>Asia/Pyongyang</span><br/></li>    <li><span>Asia/Seoul</span><br/></li>    <li><span>Asia/Tokyo</span><br/></li>    <li><span>Asia/Yakutsk</span><br/></li>    <li><span>Etc/GMT-9</span><br/></li>    <li><span>JST</span><br/></li>    <li><span>Japan</span><br/></li>    <li><span>Pacific/Palau</span><br/></li>    <li><span>ROK</span><br/></li>    <li><span>ACT</span><br/></li>    <li><span>Australia/Adelaide</span><br/></li>    <li><span>Australia/Broken_Hill</span><br/></li>    <li><span>Australia/Darwin</span><br/></li>    <li><span>Australia/North</span><br/></li>    <li><span>Australia/South</span><br/></li>    <li><span>Australia/Yancowinna</span><br/></li>    <li><span>AET</span><br/></li>    <li><span>Antarctica/DumontDUrville</span><br/></li>    <li><span>Asia/Sakhalin</span><br/></li>    <li><span>Asia/Vladivostok</span><br/></li>    <li><span>Australia/ACT</span><br/></li>    <li><span>Australia/Brisbane</span><br/></li>    <li><span>Australia/Canberra</span><br/></li>    <li><span>Australia/Hobart</span><br/></li>    <li><span>Australia/Lindeman</span><br/></li>    <li><span>Australia/Melbourne</span><br/></li>    <li><span>Australia/NSW</span><br/></li>    <li><span>Australia/Queensland</span><br/></li>    <li><span>Australia/Sydney</span><br/></li>    <li><span>Australia/Tasmania</span><br/></li>    <li><span>Australia/Victoria</span><br/></li>    <li><span>Etc/GMT-10</span><br/></li>    <li><span>Pacific/Guam</span><br/></li>    <li><span>Pacific/Port_Moresby</span><br/></li>    <li><span>Pacific/Saipan</span><br/></li>    <li><span>Pacific/Truk</span><br/></li>    <li><span>Pacific/Yap</span><br/></li>    <li><span>Australia/LHI</span><br/></li>    <li><span>Australia/Lord_Howe</span><br/></li>    <li><span>Asia/Magadan</span><br/></li>    <li><span>Etc/GMT-11</span><br/></li>    <li><span>Pacific/Efate</span><br/></li>    <li><span>Pacific/Guadalcanal</span><br/></li>    <li><span>Pacific/Kosrae</span><br/></li>    <li><span>Pacific/Noumea</span><br/></li>    <li><span>Pacific/Ponape</span><br/></li>    <li><span>SST</span><br/></li>    <li><span>Pacific/Norfolk</span><br/></li>    <li><span>Antarctica/McMurdo</span><br/></li>    <li><span>Antarctica/South_Pole</span><br/></li>    <li><span>Asia/Anadyr</span><br/></li>    <li><span>Asia/Kamchatka</span><br/></li>    <li><span>Etc/GMT-12</span><br/></li>    <li><span>Kwajalein</span><br/></li>    <li><span>NST</span><br/></li>    <li><span>NZ</span><br/></li>    <li><span>Pacific/Auckland</span><br/></li>    <li><span>Pacific/Fiji</span><br/></li>    <li><span>Pacific/Funafuti</span><br/></li>    <li><span>Pacific/Kwajalein</span><br/></li>    <li><span>Pacific/Majuro</span><br/></li>    <li><span>Pacific/Nauru</span><br/></li>    <li><span>Pacific/Tarawa</span><br/></li>    <li><span>Pacific/Wake</span><br/></li>    <li><span>Pacific/Wallis</span><br/></li>    <li><span>NZ-CHAT</span><br/></li>    <li><span>Pacific/Chatham</span><br/></li>    <li><span>Etc/GMT-13</span><br/></li>    <li><span>Pacific/Enderbury</span><br/></li>    <li><span>Pacific/Tongatapu</span><br/></li>    <li><span>Etc/GMT-14</span><br/></li>    <li><span>Pacific/Kiritimati</span><span> </span><br/></li></ul><p></p>","submitted_at":1445290818000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":53},{"algo_id":228,"object_id":"494c8f42-98f6-11e3-8351-040108385a01","username":"graph","algoname":"Diameter","algolabel":"Diameter","language":"java3","card_line":"Returns the diameter of a directed graph.","summary":"Returns the diameter of a directed graph. The diameter of a graph is the longest distance between any two connected vertices.<div><br></div><div>Input:</div><div><ul><li>A graph represented as a map from vertices (strings) to a list of neighbors (list of strings).&nbsp;</li></ul></div>","submitted_at":1430444222000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":53},{"algo_id":13663,"object_id":"27c44114-dfb3-11e4-8df1-12f53eafe9d2","username":"nlp","algoname":"FuseNGrams","algolabel":"Fuse NGrams","language":"java3","card_line":"This routine is used for processing text prior to tagging (with an algorithm such as https://algorithmia.com/algorithms/kenny/LDA or https://algorithmia.com/algorithms/nlp/Keywords...","summary":"<div>This routine is used for processing text prior to tagging (with an algorithm such as <a href=\"https://algorithmia.com/algorithms/kenny/LDA\">https://algorithmia.com/algorithms/kenny/LDA</a>&#160;or&#160;<a href=\"https://algorithmia.com/algorithms/nlp/KeywordsForDocumentSet\">https://algorithmia.com/algorithms/nlp/KeywordsForDocumentSet</a>). It turns important multi-word terms (n-grams) into a single word (by replacing spaces with underscores, so &#34;machine learning&#34; becomes &#34;machine_learning&#34;) so tagging routines will &#34;recognize&#34; the importance of the term and not treat it as a collection of unrelated words. It can either do this for a designated set of terms or it can automatically detect which n-grams are likely to be important and process these.</div><div><br/></div><div>If you already know the terms you want to fuse, simply supply the text to process as well as a list of the terms to fuse, for example, if you enter&#160;</div><div><span><br/></span></div><div><span>[&#34;Machine&#160;learning&#160;is&#160;the&#160;future&#160;of&#160;technology!&#34;,[&#34;machine&#160;learning&#34;,&#34;future&#160;of&#160;technology&#34;]]</span></div><div><br/></div><div><font color=\"#bbbbbb\" face=\"monospace\">you will get</font></div><div><font color=\"#bbbbbb\" face=\"monospace\"><br/></font></div><div><span>&#34;machine_learning is the future_of_technology!&#34;</span><font color=\"#bbbbbb\" face=\"monospace\"><br/></font></div><div><span><br/></span></div><div><span>If you want to automatically discover terms that should be fused, input</span></div><div><span><br/></span></div><div><ul><li>The input text, either a String or a String[].</li><li>n for the desired type of n-gram. 2 is the most common, for example, &#34;machine learning&#34; and &#34;big data&#34; are important 2-grams/bigrams.</li><li>A List&lt;String&gt; of known n-grams. If you don't know what these should be just use an empty list.</li><li>An int for the maximum number of n-grams to consider (default is 5).</li><li>An int for the minimum frequency of the n-gram in the text (the number of times it appears) that will be considered (default is 5). If the first argument of a String, frequency is the total number of times the n-gram appears in it, if it is a String[], counts are taken across all entries.&#160;</li></ul></div><div>The output is the input with all relevant n-grams fused. All strings are converted to lower case for both processing and output.</div><div><br/></div>As mentioned above, if you input just a String or String[], the algorithm will search for a maximum of 5 bigrams, counting only those that appear more than five times, and will return, respectively, a String or String[] with all eligible bigrams fused.<br/><div><br/></div>","submitted_at":1429230548000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":53},{"algo_id":13823,"object_id":"774f3999-e2d9-11e4-8df1-12f53eafe9d2","username":"conctest","algoname":"DigitPreprocessing","algolabel":"Digit Preprocessing","language":"java3","submitted_at":1429200930000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":53},{"algo_id":12833,"object_id":"6ae5f699-d245-11e4-8df1-12f53eafe9d2","username":"pauljabernathy","algoname":"RandomNumberGenerator","algolabel":"RandomNumberGenerator","language":"java3","card_line":"Generates lists of pseduo random numbers, in either a uniform, normal, exponential, or binomial distribution.","summary":"Generates lists of pseduo random numbers, in either a uniform, normal, exponential, or binomial distribution.<div><br/></div><div>The first parameter is a string, saying which distribution to use. &#160;It can either be the English &#34;normal,&#34; &#34;binomial&#34; etc. or the name of the corresponding R function, &#34;rnorm,&#34; &#34;rbinom,&#34; etc. &#160;The second parameter is the number of pseudo random numbers to return. &#160;The other numerical parameters vary based on which distribution it is, but generally they are similar to the R signatures.<br/><div><br/></div><div>Examples:</div><div>[&#34;rnorm&#34;, 1000, 0.0, 1.0] - a normal/Gaussian distribution, 1000 numbers, mean of 0 and standard deviation of 1</div></div><div><br/></div><div>[&#34;runif&#34;, 1000, 0.0, 1.0] - 1000 numbers distributed uniformally between 0 and 1</div><div><br/></div><div>[&#34;rexp&#34;, 10000, 2, 0.0] - 10000 numbers from an exponential distribution, with gamma of 2. &#160;The 0 is a placeholder and is not used in this case.</div><div><br/></div><div>[&#34;rbinom&#34;,&#34;10000&#34;, &#34;.5&#34;] - 10000 numbers from a binomial distribution (think coin flips), with a probability of .5 of being either 1 or 0<br/></div><div><br/></div><div><br/></div><div><br/></div><div>Note, due to the way the JSON formatting is handled, decimal numbers less than one must be enclosed in quotes. &#160;So 1.0 is fine, but 0.5 will cause a JSON format error and must be written as &#34;0.5&#34;.</div>","submitted_at":1428841046000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":53},{"algo_id":2169,"object_id":"00999f98-6f99-11e4-bad7-04011d260101","username":"mahout","algoname":"RandomForestTrain","algolabel":"Random Forest Train","language":"java3","card_line":"Trains a Mahout random forest classifier.","summary":"Trains a Mahout random forest classifier. Takes as input a string array of the training data, a destination url for the model, a string data descriptor, and a number of trees, returns the Data API URL of the trained model. The trained model can be applied to test data using ApplyRandomForest.<div><br/></div><div>We assume that the first entry of any instance is the label, though Mahout does support other placement. The descriptor must be of form &#34;L X X X ...&#34;, where each X designates the type of its respective field, either&#160;I (ignored),&#160;N (numerical), or&#160;C (categorical).&#160;L designates the label label. Think of the descriptor as a header for the data. As an example, a dataset with four attributes (beyond the label) might have the first two as categorical, the third numerical, and the last ignored, and its header would be &#34;L C C N I&#34;.<br/></div>","submitted_at":1426108141000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":52},{"algo_id":13822,"object_id":"6a9b8568-e2d9-11e4-8df1-12f53eafe9d2","username":"conctest","algoname":"DigitExtraction","algolabel":"Digit Extraction","language":"java3","submitted_at":1429199498000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":51},{"algo_id":289,"object_id":"b81d91bd-9ab8-11e3-8351-040108385a01","username":"codeb34v3r","algoname":"IsIntegerPalindrome","algolabel":"IsIntegerPalindrome","language":"java3","card_line":"Check if the given integer is a palindrome","summary":"Check if the given integer is a palindrome","submitted_at":1445289916000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":50},{"algo_id":428,"object_id":"0edfd508-cb76-11e3-b18f-040108385a01","username":"ml","algoname":"LearnHMM","algolabel":"LearnHMM","language":"java3","card_line":"Learns a Hidden Markov Model (HMM) based on a series of example state transitions.","summary":"Learns a Hidden Markov Model (HMM) based on a series of example state transitions.","submitted_at":1445289438000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":50},{"algo_id":12953,"object_id":"f06ee579-d3d6-11e4-8df1-12f53eafe9d2","username":"williamaustinwebb","algoname":"ParallelSiteMatcher","algolabel":"ParallelSiteMatcher","language":"java3","submitted_at":1427839747000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":50},{"algo_id":626,"object_id":"9526a2aa-07ea-11e4-9109-04011d260101","username":"jtbandes","algoname":"Arbitrage","algolabel":"Arbitrage","language":"java3","card_line":"Detects arbitrage opportunities in a directed, complete graph of currency conversions.","summary":"Detects arbitrage opportunities in a directed, complete graph of currency conversions.<div><br/></div><div>Currency conversions are specified in a square matrix of edge weights. All conversion rates must be strictly positive; numbers on the diagonal are expected to be exactly 1.<div><br/></div><div>The output is a list of arbitrage opportunities, represented as lists of indices into the input matrix.<div><br/></div><div>The returned cycles will not overlap, but some cycles may be missed; currently, there is no guarantee that the opportunities returned are the best possible. For details, see also&#160;<a href=\"http://algorithmia.com/algorithms/jtbandes/NegativeWeightCycles\">jtbandes/NegativeWeightCycles</a>.</div></div></div>","submitted_at":1445289589000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":49},{"algo_id":30684,"object_id":"04b1437c-753f-11e5-aae6-12ad1a8c1691","username":"opencv","algoname":"GrabCut","algolabel":"Grab Cut","language":"java4","card_line":"Performs the  GrabCut  image segmentation algorithm on an image (data uri, base64 encoded, or web url) and returns the foreground.","summary":"<p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\">Performs the <a href=\"https://en.wikipedia.org/wiki/GrabCut\">GrabCut</a> image segmentation algorithm on an image (data uri, base64 encoded, or web url) and returns the foreground.</p><p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\"><span>The specified region is used to focus the algorithm on an object of interest in the image and must be smaller than the region of the whole image.</span><br/></p><p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\">Input consists of:</p><ul><li>The image to process, either as a Data API url (data://), a web url (http://), base64 encoded file, or as a raw POST body.</li><li>Optionally accepts a 2nd argument which specifies the bounding box of the foreground (eg- {&#34;x&#34;: 1, &#34;y&#34;: 1, &#34;width&#34;: 150, &#34;height&#34;: 150})</li><li>Optionally the 2nd argument can be a single integer which specifies how many pixels to shrink the window by, relative to the full image</li></ul>","submitted_at":1445147376000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":49},{"algo_id":14852,"object_id":"6584c2d8-05c6-11e5-89ff-123a3b0693f5","username":"marcky","algoname":"TimezoneByLatLong","algolabel":"TimezoneByLatLong","language":"java3","card_line":"Input a set of coordinates (latitude, longitude) and receive the following results: name: Timezone name offset: Timezone offset (against UTC) offset_dst: Daylight Savings Time offs...","summary":"<p>Input a set of coordinates (latitude, longitude) and receive the following results:</p><p>name: Timezone name</p><p>offset: Timezone offset (against UTC)</p><p>offset_dst: Daylight Savings Time offset (based on current exact date/time)</p>","submitted_at":1432903188000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":49},{"algo_id":93,"object_id":"6775a3b2-8e3c-11e3-8351-040108385a01","username":"diego","algoname":"LinearAlgebra_SolveLinearEq","algolabel":"Linear Algebra Solve Linear Equation","language":"java3","card_line":"Solver Linear Equation: Finds a solution of the linear equation A x = b where A is an n x m - matrix given as double [n][m], b is an m - vector given as double [m] and x is an n- v...","summary":"Solver Linear Equation: \n\n\nFinds a solution of the linear equation A x = b where A is an n x m - matrix given as double [n][m], b is an m - vector given as double [m] and x is an n- vector given as double [n].","submitted_at":1430947494000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":49},{"algo_id":90,"object_id":"6775a264-8e3c-11e3-8351-040108385a01","username":"diego","algoname":"WordFrequencyCounter","algolabel":"Word Frequency Counter","language":"java3","card_line":"Takes in a string and returns a Map of [word,frequency].","summary":"Takes in a string and returns a Map of [word,frequency]. Note that internal quotation marks must be escaped or removed.","submitted_at":1430947452000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":49},{"algo_id":8333,"object_id":"72213114-c973-11e4-abe1-12f53eafe9d2","username":"tbenjis","algoname":"KeywordCipher","algolabel":"Keyword Cipher","language":"java3","card_line":"This keyword cipher includes a space in order to encrypt and decrypt phrases with spaces in them.","summary":"<div>This keyword cipher includes a space in order to encrypt and decrypt phrases with spaces in them. Keyword cipher is a form of monoalphabetic substitution. A keyword is used as the key, and it determines the letter matchings of the cipher alphabet to the plain alphabet. Repeats of letters in the word are removed, then the cipher alphabet is generated with the keyword matching to A,B,C etc. until the keyword is used up, whereupon the rest of the ciphertext letters are used in alphabetical order, excluding those already used in the key.<br/></div><div><br/></div><div><b>Usage</b></div><div><b><br/></b></div><pre>[&#34;&lt;String&gt; encrypt/decrypt&#34;, &#34;&lt;String&gt; input&#34;, &lt;String&gt; key]</pre><div><div><br/></div><div><b>Sample</b></div><div><br/></div><div><pre class=\"well well-sm sample-input ng-binding\">[&#34;encrypt&#34;, &#34;American Standard Code for Information Interchange&#34;, &#34;bloob&#34;]</pre></div><div><pre class=\"well well-sm sample-input ng-binding\">[&#34;decrypt&#34;, &#34;<span>LKCRGBLM STLMALRA BNAC DNR GMDNRKLTGNM GMTCRBFLMEC</span><span>&#34;, &#34;bloob&#34;]</span><br/></pre></div></div><div><br/></div>","submitted_at":1426246109000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":49},{"algo_id":738,"object_id":"84b36175-1752-11e4-b842-04011d260101","username":"paranoia","algoname":"BronKerbosch","algolabel":"BronKerbosch","language":"java3","submitted_at":1445289324000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":48},{"algo_id":9979,"object_id":"2ef41b9e-cabe-11e4-abe1-12f53eafe9d2","username":"legeorges","algoname":"redditimagegrabber","algolabel":"reddit image grabber","language":"python2-2","card_line":"Grab images from a subreddit's front page.","summary":"Grab images from a subreddit's front page.<div><br/></div><div><ul><li>subreddit: The name of the subreddit.</li><li>category: Can be&#160;'hot', 'new', 'rising', 'controversial', or 'top'.</li><li>domains: The list of image host domains you want to grab images from. Defaults to a single domain: ['i.imgur.com'].</li></ul></div>","submitted_at":1426390633000,"discoverable_world":true,"source_world":true,"license":"gpl3","call_count":48},{"algo_id":12962,"object_id":"1477b073-d3f7-11e4-8df1-12f53eafe9d2","username":"thatguy2048","algoname":"knapsack","algolabel":"knapsack","language":"java3","card_line":"This is an attempt to solve the knapsack problem by adding items with the highest value to weight ratio.","summary":"This is an attempt to solve the <a href=\"http://en.wikipedia.org/wiki/Knapsack_problem\">knapsack problem</a> by adding items with the highest value to weight ratio. To lessen the effects of adding items with high ratios but little actual value, the max weight is increased while adding, then items are removed in order of least value, until the weight requirement is met.<div><br/></div><div>The expected input is a <b>List&lt;double[]&gt;,double </b>where the <b>List&lt;double[]&gt; </b>is a list of each item, each <b>double[] </b>is a separate item of a [weight,value] pair. The <b>double </b>is the maximum weight value of the sack.&#160;</div><div><br/></div><div>This does not check for negative weights or values, which may result in errors.</div>","submitted_at":1427409998000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":47},{"algo_id":13744,"object_id":"0b374f30-e204-11e4-8df1-12f53eafe9d2","username":"jdionicio","algoname":"FactorMoneda","algolabel":"FactorMoneda","language":"java3","card_line":"Obtiene Factor Moneda del Mes en Curso","summary":"Obtiene Factor Moneda del Mes en Curso<br/>","submitted_at":1431890821000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":45},{"algo_id":8953,"object_id":"8dee2ea7-c9d7-11e4-abe1-12f53eafe9d2","username":"Drabor","algoname":"primes_to","algolabel":"primes_to","language":"python2-2","card_line":"Find all the prime numbers less than or equal to a given integer.","summary":"<p>Find all the prime numbers less than or equal to a given integer.</p>","submitted_at":1428833715000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":45},{"algo_id":6666,"object_id":"ab3d4ff2-c8d5-11e4-abe1-12f53eafe9d2","username":"brilvio","algoname":"GraphicsToHtml","algolabel":"GraphicsToHtml","language":"java3","submitted_at":1426189044000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":45},{"algo_id":6235,"object_id":"81340132-c2be-11e4-840d-12f53eafe9d2","username":"sprague","algoname":"ScrapeHN2","algolabel":"ScrapeHN2","language":"java3","card_line":"Scrapes just the \"best of\" posts on Hacker News, instead of all the posts.","summary":"Scrapes just the &#34;best of&#34; posts on Hacker News, instead of all the posts. &#160;<div><br/></div><div>Based on the ScrapeHN algorithm.</div><div><br/></div>","submitted_at":1445379632000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":44},{"algo_id":11158,"object_id":"aa5b09b7-cdd2-11e4-abe1-12f53eafe9d2","username":"zskurultay","algoname":"SimpleGaussianFilter","algolabel":"SimpleGaussianFilter","language":"python2-2","card_line":"A simple Python script that takes an image and a sigma, and applies Gaussian filter.","summary":"A simple Python script that takes an image and a sigma, and applies Gaussian filter.","submitted_at":1439505138000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":44},{"algo_id":15413,"object_id":"fd3ed242-1ead-11e5-a825-06910d997133","username":"xubeisi","algoname":"codon2aminoacids","algolabel":"codon2aminoacids","language":"python2-2","card_line":"translation of a nucleotide (DNA/RNA) sequence to a protein sequence.","summary":"<p><span style=\"color: rgb(98, 98, 98);float: none;background-color: rgb(255, 255, 255);\">translation of a nucleotide (DNA/RNA) sequence to a protein sequence.</span></p><p><font color=\"#626262\">Parameter Lead seperate with ':' to sequences</font></p><p><span style=\"color: rgb(98, 98, 98);\">Lead with '-' will use the first ATG(AUG) as Start.</span><br/></p><p><span style=\"color: rgb(98, 98, 98);float: none;background-color: rgb(255, 255, 255);\">Otherwise use the number as frame start. </span></p><p><span style=\"color: rgb(98, 98, 98);float: none;background-color: rgb(255, 255, 255);\">Will ignore space, line break.</span></p>","submitted_at":1435619529000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":44},{"algo_id":2893,"object_id":"443d1e7e-9d3f-11e4-be78-12e1fbfbf82c","username":"TGRedBaron","algoname":"Sleep","algolabel":"Sleep","language":"java3","card_line":"Sleeps for {input} milliseconds","summary":"Sleeps for {input} milliseconds","submitted_at":1445290535000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":43},{"algo_id":16171,"object_id":"b9d000cf-41d4-11e5-aae6-12ad1a8c1691","username":"jcorreia","algoname":"StoneDivision","algolabel":"StoneDivision","language":"python2-2","card_line":"StoneDivision makes the fairest division in a divisible or indivisible item set (integer or float).","summary":"<p>StoneDivision makes the fairest division in a divisible or indivisible item set (integer or float).</p><p>Input explanation:</p><p>p - Number of &#34;people&#34; which receive the items values;</p><p>i - Items values separated by comma, can be integer or float;</p><p>d - If the items can be divided, always set 0 if the items cannot be divided or 1 if they can.</p><p><br/></p>","submitted_at":1443193423000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":43},{"algo_id":15992,"object_id":"4f33ba7d-3c97-11e5-aae6-12ad1a8c1691","username":"paranoia","algoname":"PiecewiseLinear","algolabel":"PiecewiseLinear","language":"java3","card_line":"Split a multidimensional timeseries such that a piece linear reconstruction has minimal error.","summary":"<p>Split a multidimensional timeseries such that a piece linear reconstruction has minimal error.</p><p>The input is first normalized such that each timeseries has a mean of 0 and a standard deviation of 0. This is to avoid overweighting one of the dimensions vs the others simply because of scaling differences.</p><p>The resulting timeseries is then run through a dynamic programming algorithm that produces the split with minimal SSE, running in time proportional to the size of the timeseries input and the number of segments.<br/></p>","submitted_at":1438908944000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":43},{"algo_id":734,"object_id":"cccbb255-174d-11e4-b842-04011d260101","username":"paranoia","algoname":"OrdinaryLeastSquares","algolabel":"OrdinaryLeastSquares","language":"java3","submitted_at":1445289320000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":42},{"algo_id":1297,"object_id":"f0b429a5-49c9-11e4-b63d-04011d260101","username":"zskurultay","algoname":"CaptchaGenerate","algolabel":"CaptchaGenerate","language":"java3","card_line":"Algorithm for generating a Captcha to test if your user is human","summary":"Algorithm for generating a Captcha to test if your user is human","submitted_at":1445289130000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":42},{"algo_id":16774,"object_id":"91734cc9-626b-11e5-aae6-12ad1a8c1691","username":"anowell","algoname":"EchoJson","algolabel":"Echo Json","language":"java4","submitted_at":1443065560000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":42},{"algo_id":15678,"object_id":"0e884796-2bf2-11e5-a825-06910d997133","username":"ANaimi","algoname":"JSONtoCSV","algolabel":"JSONtoCSV","language":"java3","card_line":"Takes a JSON array (as a single string) and outputs a CSV representation of that array.","summary":"<p>Takes a JSON array (as a single string) and outputs a CSV representation of that array. The column names are automatically generated from the first element.</p><p>The input can be:</p><p>1) Path to a local/data file, detected using the &#34;data://&#34; prefix</p><p>2) URL of a remove file, detected using the &#34;http://&#34; or &#34;https://&#34; prefix</p><p>3) Direct string of a JSON array representation.</p><p><br/></p><p><br/></p>","submitted_at":1437082799000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":42},{"algo_id":61,"object_id":"67759951-8e3c-11e3-8351-040108385a01","username":"kenny","algoname":"EmailValidator","algolabel":"Email Validator","language":"java3","card_line":"Checks whether a string is a legal email address.","summary":"Checks whether a string is a legal email address.","submitted_at":1430446298000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":42},{"algo_id":72,"object_id":"67759e67-8e3c-11e3-8351-040108385a01","username":"demo","algoname":"BubbleSort","algolabel":"BubbleSort","language":"java3","card_line":"Sorts a list of numbers using the Bubble Sort algorithm.","summary":"Sorts a list of numbers using the Bubble Sort algorithm. O(n^2)","submitted_at":1430440915000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":42},{"algo_id":13540,"object_id":"e9c896af-de8e-11e4-8df1-12f53eafe9d2","username":"GrantMarshall","algoname":"FrequentItemsets","algolabel":"FrequentItemsets","language":"python2-2","card_line":"Simple implementation of the Apriori algorithm for frequent itemset computation.","summary":"Simple implementation of the Apriori algorithm for frequent itemset computation.&#160;<div><br/></div><div>Note that the Apriori algorithm is a far cry from a fast algorithm and will run into the timeout cap of 5 minutes fairly quickly. Has been tested with up to ~1400 docs of length 6 on average with threshold of 12. Increasing threshold improves run time. Decreasing the number of documents or pruning the documents can also improve run time.</div>","submitted_at":1428980799000,"discoverable_world":true,"source_world":true,"license":"gpl3","call_count":42},{"algo_id":2290,"object_id":"b0f79a51-741e-11e4-bad7-04011d260101","username":"ml","algoname":"ClickStreamTransitions","algolabel":"Click Stream Transitions","language":"java3","card_line":"Returns the top 5 most \"interesting\" transitions learned by the Hidden Markov Model.","summary":"Returns the top 5 most &#34;interesting&#34; transitions learned by the Hidden Markov Model.","submitted_at":1445289446000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":41},{"algo_id":16753,"object_id":"64f3ea24-617c-11e5-aae6-12ad1a8c1691","username":"diego","algoname":"Getimagelinks","algolabel":"Get image links","language":"python2-2","card_line":"Given a url will return a list of all the image urls at the target url.","summary":"<p>Given a url will return a list of all the image urls at the target url.</p><p>Great for web crawling, image analysis at scale. </p>","submitted_at":1442965933000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":41},{"algo_id":462,"object_id":"9d6914a0-d95a-11e3-b18f-040108385a01","username":"tags","algoname":"RelatedTags","algolabel":"Related Tags","language":"java3","card_line":"Takes as input a mapping from each object to its tags, and a set of starting tags to generate recommendations for.","summary":"Takes as input a mapping from each object to its tags, and a set of starting tags to generate recommendations for.<div><br/></div><div>{&#34;object&#34; -&gt; [&#34;tagA&#34;, &#34;tagB&#34;]}, [&#34;tag1&#34;, &#34;tag2&#34;]</div><div><br/></div><div>This algorithm models the tags as a bipartite graph, and uses collaborative filtering to recommend new tags.</div><div><br/></div><div>This can be useful when paired with automatic tag generation, as it allows for generating new tags that don't necessarily appear in the auto-tagged documents, but may still be related.</div>","submitted_at":1429568691000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":41},{"algo_id":1995,"object_id":"abef4885-6e9c-11e4-bad7-04011d260101","username":"crdzoba","algoname":"isPrime","algolabel":"isPrime","language":"java3","card_line":"Evaluates up to 2^63 - 1 (Java long size limit).","summary":"Evaluates up to&#160;<span>2^63 - 1 (Java long size limit). &#160;Behavior beyond this limit is untested.</span>","submitted_at":1445289877000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":40},{"algo_id":16407,"object_id":"ccb77857-4cef-11e5-aae6-12ad1a8c1691","username":"mheimann","algoname":"SMSSpamDetector","algolabel":"SMS Spam Detector","language":"python2-2","card_line":"Given a string representing a SMS message, classifies it as \"spam\" or \"ham\" (not spam) using a Linear SVM with Stochastic Gradient Descent  trained on a publicly available dataset ...","summary":"<p>Given a string representing a SMS message, classifies it as &#34;spam&#34; or &#34;ham&#34; (not spam) using a <a href=\"https://algorithmia.com/algorithms/mheimann/LinearSVMwithStochasticGradientDescent\">Linear SVM with Stochastic Gradient Descent</a> trained on a publicly available <a href=\"https://archive.ics.uci.edu/ml/datasets/SMS+Spam+Collection\">dataset</a> from the well known <a href=\"https://archive.ics.uci.edu/ml/index.html\">UCI machine learning repository</a> whose hyperparameters were set with <a href=\"https://algorithmia.com/algorithms/mheimann/BayesianOptimization\">Bayesian Optimization</a>.  Designed to be a simple demonstration machine learning task whose performance was optimized with Bayesian optimization.  </p>","submitted_at":1440713172000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":40},{"algo_id":7622,"object_id":"7391aa2b-c911-11e4-abe1-12f53eafe9d2","username":"joergr","algoname":"RoundJSON","algolabel":"RoundJSON","language":"python2-2","card_line":"Takes a JSON with two keys to_round and prec .","summary":"Takes a JSON with two keys <i>to_round</i> and <i>prec</i>.<div><br/></div><div><i>to_round</i> is an object like a dictionary/map, a list or a number or string.&#160;</div><div><i>prec</i> is the needed rounding precision</div><div><br/></div><div>The algorithm will find all the floating point numbers and round them to <i>prec</i> decimal points and return the object. If <i>prec</i> &lt; 0, no rounding will happen.</div>","submitted_at":1426205211000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":40},{"algo_id":7535,"object_id":"5a403343-c904-11e4-abe1-12f53eafe9d2","username":"chinnikrishna55","algoname":"Test","algolabel":"Test","language":"java3","card_line":"Add two numbers","summary":"Add two numbers","submitted_at":1426200883000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":40},{"algo_id":16853,"object_id":"4ff90a77-6685-11e5-aae6-12ad1a8c1691","username":"NightR","algoname":"CRFTagger","algolabel":"CRF Tagger","language":"python2-2","submitted_at":1443522712000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":39},{"algo_id":78,"object_id":"6775a036-8e3c-11e3-8351-040108385a01","username":"diego","algoname":"GeographicDistance","algolabel":"Geographic Distance","language":"java3","card_line":"Calculates the geographic distance between two sets of coordinates provided as input in format {\"lat1\": XX,\"long1\":XX,\"lat2\":XX,\"long2\":XX} Distance returned in arc seconds.","summary":"Calculates the geographic distance between two sets of coordinates provided as input in format {\"lat1\": XX,\"long1\":XX,\"lat2\":XX,\"long2\":XX}\n\nDistance returned in arc seconds.","submitted_at":1430947496000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":39},{"algo_id":10759,"object_id":"33a25145-cbf7-11e4-abe1-12f53eafe9d2","username":"jdionicio","algoname":"TipoDeCambio","algolabel":"TipoDeCambio","language":"java3","card_line":"Obtiene el tipo de Cambio del Diario Oficial de la Federacion(D.O.F.)","summary":"Obtiene el tipo de Cambio del Diario Oficial de la Federacion(D.O.F.)<br/>","submitted_at":1427741478000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":39},{"algo_id":6201,"object_id":"6dc549dd-c0e4-11e4-840d-12f53eafe9d2","username":"MadDenker","algoname":"ResiBatChrg","algolabel":"ResiBatChrg","language":"java3","card_line":"Returns the optimal battery size for an imported list of historical loads for a building.","summary":"Returns the optimal battery size for an imported list of historical loads for a building.<div><br/></div><div>Two ways to run it:</div><div>1. enter location of csv data file as a String that contains only meter reads, one on each row. &#160;Defaults to &#34;data://MadDenker/LCTest1/LC2.csv&#34; &#160;Default file contains hourly kWh reads for a small residential building.</div><div>2. enter a one dimensional array of double values. &#160;Ex: [1.25, 1.47, ...]</div><div><br/></div><div>Output is the optimal battery size in the same units as the input.</div><div><div><br/></div></div>","submitted_at":1445379142000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":38},{"algo_id":3923,"object_id":"4ca2f14a-acb3-11e4-840d-12f53eafe9d2","username":"WebPredict","algoname":"Soundex","algolabel":"Soundex","language":"java3","card_line":"Your basic soundex algorithm.","summary":"Your basic soundex algorithm.","submitted_at":1445290277000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":37},{"algo_id":16597,"object_id":"d1d9a5ce-57be-11e5-aae6-12ad1a8c1691","username":"afader","algoname":"ReVerb","algolabel":"ReVerb","language":"scala3","card_line":"Runs the ReVerb Open Information Extraction software on a blob of HTML.","summary":"Runs the ReVerb Open Information Extraction software on a blob of HTML. The output is a collection of scored (argument1, relation, argument2) triples extracted from the HTML's text. For more information about ReVerb, see <a href=\"http://reverb.cs.washington.edu/\">http://reverb.cs.washington.edu/</a>","submitted_at":1441897841000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":37},{"algo_id":13463,"object_id":"b8d01ef2-de0e-11e4-8df1-12f53eafe9d2","username":"nlp","algoname":"SentimentByTerm","algolabel":"Sentiment By Term","language":"java3","card_line":"This algorithm analyzes a document to find the approximate sentiment associated with each of a given set of terms.","summary":"<span>This algorithm analyzes a document to find the approximate sentiment associated with each of a given set of terms. It does this by splitting the document into sentences and computing, for each provided term, the average sentiment of all sentences containing that term. It takes as input</span><div><ul><li>The document (as a string).</li><li>The list of terms as a List&lt;String&gt;. Terms can either be provided by hand or extracted automatically with a tagging (for instance,&#160;<a href=\"https://algorithmia.com/algorithms/tags/AutoTagURL\">/tags/AutoTagURL</a>) or entity recognition algorithm (<a href=\"https://algorithmia.com/algorithms/StanfordNLP/NamedEntityRecognition\">/StanfordNLP/NamedEntityRecognition</a>).</li><li>(Optional) Coreferences in the form of a Map&lt;String,List&lt;String&gt;&gt;, where each key is a member of the list of terms and the associated value is a list of terms that refer to the same entity. This ensures that all references to a given entity are accounted for, even if they don't all use the same term. This can be supplied either by hand or by previous application of an algorithm like <a href=\"https://algorithmia.com/algorithms/StanfordNLP/DeterministicCoreferenceResolution\">/StanfordNLP/DeterministicCoreferenceResolution</a><span>.</span></li></ul></div><div><span>Make sure that all strings in the term list and coreference map are lower case.</span></div><div><span><br/></span></div><div><span>For more information, please refer to&#160;</span><a href=\"http://nlp.stanford.edu/software/corenlp.shtml\">http://nlp.stanford.edu/software/corenlp.shtml</a><span>&#160;or&#160;Manning, Christopher D., Surdeanu, Mihai, Bauer, John, Finkel, Jenny, Bethard, Steven J., and McClosky, David. 2014.&#160;</span><a href=\"http://nlp.stanford.edu/pubs/StanfordCoreNlp2014.pdf\">The Stanford CoreNLP Natural Language Processing Toolkit</a><span>. In&#160;</span><i>Proceedings of 52nd Annual Meeting of the Association for Computational Linguistics: System Demonstrations</i><span>, pp. 55-60.&#160;</span><span><br/></span></div>","submitted_at":1428524064000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":37},{"algo_id":9902,"object_id":"da26697e-caa3-11e4-abe1-12f53eafe9d2","username":"Kflansburg","algoname":"ThinQRDecomposition","algolabel":"Thin QR Decomposition","language":"java3","card_line":"Computes the thin QR Decomposition of a matrix using Modified Gram-Schmidt Input # of rows,m, # of columns, n, and array of values.","summary":"Computes the thin QR Decomposition of a matrix using Modified Gram-Schmidt<br/><br/>Input # of rows,m, # of columns, n, and array of values. Values fill the matrix column by column. <br/><br/>For matrix:<br/>[ 1 2 3 4;<br/>&#160;5 6 7 8;<br/>&#160;9 10 11 12;<br/>&#160;13 14 15 16];<br/><br/>Input: [4,4,[1,5,9,13,2,6,10,14,3,7,11,15,4,8,12,16]]<br/>","submitted_at":1426376629000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":37},{"algo_id":14254,"object_id":"fa3865a4-eae1-11e4-849b-0670f2dc1320","username":"s3utilities","algoname":"UploadFiletoBucket","algolabel":"Upload File to Bucket","language":"java3","card_line":"This algorithm uploads a file (specified by the last input, filePath) to an Amazon S3 bucket.","summary":"<div>This algorithm uploads a file (specified by the last input, filePath) to an Amazon S3 bucket. You can give the file as a URL to a file or a Data API url to a file -the last input-. Please specify the region of the bucket, the url to the credentials file and the title you would like to give to the file. The second argument, credsFile, should be a file in a collection in the Data API with first line containing the bucket name, the second line your access key and the third line containing your secret key.</div><div><br/></div><div><b></b></div>Warning: You may get an exception that says &#34;The bucket you are attempting to access must be addressed using the specified endpoint.&#34; This means the region you have entered is incorrect for that specific bucket.<div><br/></div><div>The possible regions are:</div><div><br/><table class=\"overviewSummary\" border=\"0\" cellpadding=\"3\" cellspacing=\"0\" summary=\"Enum Constant Summary table, listing enum constants, and an explanation\"><tbody><tr class=\"altColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#AP_NORTHEAST_1\">AP_NORTHEAST_1</a></strong></code> </td></tr><tr class=\"rowColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#AP_SOUTHEAST_1\">AP_SOUTHEAST_1</a></strong></code> </td></tr><tr class=\"altColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#AP_SOUTHEAST_2\">AP_SOUTHEAST_2</a></strong></code> </td></tr><tr class=\"rowColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#CN_NORTH_1\">CN_NORTH_1</a></strong></code> </td></tr><tr class=\"altColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#EU_CENTRAL_1\">EU_CENTRAL_1</a></strong></code> </td></tr><tr class=\"rowColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#EU_WEST_1\">EU_WEST_1</a></strong></code> </td></tr><tr class=\"altColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#GovCloud\">GovCloud</a></strong></code> </td></tr><tr class=\"rowColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#SA_EAST_1\">SA_EAST_1</a></strong></code> </td></tr><tr class=\"altColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#US_EAST_1\">US_EAST_1</a></strong></code> </td></tr><tr class=\"rowColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#US_WEST_1\">US_WEST_1</a></strong></code></td></tr><tr class=\"altColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#US_WEST_2\">US_WEST_2</a></strong></code> </td></tr></tbody></table></div>","submitted_at":1444030415000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":36},{"algo_id":2737,"object_id":"9288e75e-9932-11e4-be78-12e1fbfbf82c","username":"TimeSeries","algoname":"FourierClean","algolabel":"Fourier Clean","language":"java3","card_line":"This algorithm takes a time series and a parameter k.","summary":"<div><div>This algorithm takes a time series and a parameter k. It takes the Fourier transform of the series, zeroes out the top k weakest frequencies, and maps the result back into a time series with an inverse Fourier transform.</div><div><br/></div><div>This is a speculative algorithm for removing cleaning and smoothing - use it for exploratory analysis but try not to draw too many conclusions unless you corroborate with other methods.</div></div><div><br/></div><div>This is based on an implementation of the Fast Fourier Transform (in this the real Fourier Transform in the JTranforms library -&#160;<a href=\"https://sites.google.com/site/piotrwendykier/software/jtransforms\">https://sites.google.com/site/piotrwendykier/software/jtransforms</a>) Note that there are many different conventions used in signal processing, so be careful as the ones chosen here may not be the ones you need.&#160;<br/></div>","submitted_at":1430441473000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":36},{"algo_id":15703,"object_id":"c4b7bbfc-2e34-11e5-aae6-12ad1a8c1691","username":"paranoia","algoname":"PyWaveletTransform","algolabel":"PyWaveletTransform","language":"python2-2","card_line":"Run some discrete-wavelet-related operation over the provided input data.","summary":"<p>Run some discrete-wavelet-related operation over the provided input data.        Input supports the following options:</p><ul><li><span>data, a required array of numbers to operate over</span></li><li><span>operation, specifies what to do with the data, currently supports:<br/></span><span> - forward, run a forward DWT from the time domain to the frequency domain<br/></span><span> - reverse, run a reverse DWT from frequency to time domain<br/></span><span> - denoise, run a forward DWT, zero out small coefficients, then reverse the transform</span></li><li><span>wavelet, the wavelet type to use for the transformation, see <a href=\"http://www.pybytes.com/pywavelets/ref/wavelets.html\">PyWavelets documentation</a></span></li><li><span>mode, how to treat the boundaries of the finite dataset, see the <a href=\"http://www.pybytes.com/pywavelets/ref/signal-extension-modes.html\">PyWavelets documentation</a></span></li><li><span>threshold, the cutoff level for component magnitudes below which they're zeroed, required if denoising</span></li></ul><p><span>For input data that is not sized as a power of 2, the data will first be decomposed into sublists    of sizes that do meet that requirement, and then each component is manipulated as before.</span></p>","submitted_at":1437328897000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":35},{"algo_id":1304,"object_id":"39a6a9e9-4c27-11e4-b63d-04011d260101","username":"CSutter","algoname":"ShiftCipher","algolabel":"Shift Cipher","language":"java3","card_line":"Also known as a Caesar cipher, takes a rotation count (n) and a string and returns the rot-n version of that string.","summary":"Also known as a Caesar cipher, takes a rotation count (n) and a string and returns the rot-n version of that string. Casing and non-alpha characters are maintained as-is. Not to be used for serious encryption.<br/><br/>O(n)<br/>","submitted_at":1445289862000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":34},{"algo_id":2328,"object_id":"60de4887-79a6-11e4-bad7-04011d260101","username":"StanfordNLP","algoname":"PartofspeechTagger","algolabel":"Part-of-speech Tagger","language":"java3","card_line":"Input a piece of text, get back the same piece of text with the parts of speech tagged according to the Stanford CoreNLP MaxEnt Tagger.","summary":"Input a piece of text, get back the same piece of text with the parts of speech tagged according to the Stanford CoreNLP MaxEnt Tagger. You can find a large list of pretrained taggers in the&#160;<span>&#34;data://StanfordNLP/models/&#34; directory, including English (multiple taggers), Arabic, German, Chinese, and Spanish. If you do not specify a tagger model a default English one will be used.</span><div><br/></div><div><div>Parts are tagged according to the conventions of the Penn Treebank Project (<a href=\"http://www.cis.upenn.edu/~treebank/\">http://www.cis.upenn.edu/~treebank/</a>). For example, a plural noun is denoted NNS, a singular or mass noun is NN, and a determiner (such as <i>a/an</i>, <i>every</i>, <i>no</i>, <i>the</i>,<i> another</i>, <i>any</i>, <i>some</i>, <i>each</i>, etc.) as DT.</div><div class=\"page\" title=\"Page 5\"><div class=\"layoutArea\"><div class=\"column\"><p><span><br/></span></p><p><span>For more information, please refer to</span><a href=\"http://nlp.stanford.edu/software/corenlp.shtml\">http://nlp.stanford.edu/software/corenlp.shtml</a><span>&#160;or&#160;Manning, Christopher D., Surdeanu, Mihai, Bauer, John, Finkel, Jenny, Bethard, Steven J., and McClosky, David. 2014.&#160;</span><a href=\"http://nlp.stanford.edu/pubs/StanfordCoreNlp2014.pdf\">The Stanford CoreNLP Natural Language Processing Toolkit</a><span>. In&#160;</span><i>Proceedings of 52nd Annual Meeting of the Association for Computational Linguistics: System Demonstrations</i><span>, pp. 55-60.&#160;</span><br/></p></div></div></div><div><span><br/></span></div></div>","submitted_at":1430421389000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":34},{"algo_id":15170,"object_id":"692c5faf-14d8-11e5-89ff-123a3b0693f5","username":"singhalutsav","algoname":"EMICalculator","algolabel":"EMI Calculator","language":"java3","card_line":"Calculates EMI using a double[] of 3 elements input[0] --&gt; Principal amount input[1] --&gt; Annual interest input[2] --&gt; Loan tenure in months The double[] must have exactly ...","summary":"<p>Calculates EMI using a double[] of 3 elements</p><p>input[0] --&gt; Principal amount</p><p>input[1] --&gt; Annual interest</p><p>input[2] --&gt; Loan tenure in months</p><p>The double[] must have exactly 3 elements and all elements must be greater than 0 otherwise an Exception would be thrown<br/></p>","submitted_at":1434542629000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":33},{"algo_id":14425,"object_id":"d7568c33-f253-11e4-849b-0670f2dc1320","username":"chrisrobbins157","algoname":"PairsGenerator","algolabel":"Pairs Generator","language":"python2-2","card_line":"This algorithm generates a list of all possible pairs from items in a list.","summary":"This algorithm generates a list of all possible pairs from items in a list. This is sometimes an important first step in analyzing and optimizing datasets.<div><br/></div><div>Please note this free version of Pairs Generator supports 10 items per dataset. To generate pairs for an unlimited number of items per dataset please see &#34;Pairs Generator - Unlimited Items Per List&#34;.</div>","submitted_at":1430839576000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":33},{"algo_id":11185,"object_id":"1aef803c-ce2f-11e4-abe1-12f53eafe9d2","username":"brunni","algoname":"AddressExtraction","algolabel":"Address Extraction","language":"java3","card_line":"Finds the imprint or contact &#10;page of a website (hostname supplied as argument) and extracts addresses, contact data, company names and other information.","summary":"<p>Finds the imprint or contact &#10;page of a website (hostname supplied as argument) and extracts addresses, contact data, company names and other information.<br/></p>&#10;<p>Emphasis currently is on Germany, Austria and Switzerland. The &#10;quality for other countries varies but can be optimized on demand.</p><p>'status' should usually be 'ok' - unless you supplied an empty hostname.</p><p>'crawl_status' contains 'ok' or an error message if no data could be extracted for some reason.</p>'url_imprint' is the URL of the imprint or contact page - if one was found.<br/><br/><p>'results' contains the extracted data (may be empty). The algorithm may return several results and several contact persons &#10;within a result. All results are sorted by descending relevance. You can&#10; simply use the first result returned. Each result contains:</p><p>country, zip, city, street, company, phone, fax, iban, bic: Should be self-explanatory.</p><p>emailhash: SHA-1-Hash of &#8216;mailto:&#8217; + mail address (to prevent abuse, plain addresses are not available)</p><p>vatidnr: VAT ID<br/></p><p>regnrde: Trade register number and town of register court (Germany only)<br/></p><p>managers: List of contact persons with relevant catchword and distance of name to catchword (currently only supported on german websites)<br/></p><p>blz: German bank code (Germany only)<br/></p><p>See http://www.netestate.de/en/information-extraction/software/imprint-crawler/ for more information or to try the algorithm for free.<br/></p>","submitted_at":1426770652000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":33},{"algo_id":15280,"object_id":"77654962-1a16-11e5-a825-06910d997133","username":"digi3colin","algoname":"fixsquares","algolabel":"fix squares","language":"java3","card_line":"Fit squares in a rectangle for layouts.","summary":"<p>Fit squares in a rectangle for layouts.</p><p>have option to fit width of the rectangle.</p><p><span>parameters are:<br/></span><span>[rectWidth, rectHeight, countOfSquare, <i>isMatchWidthOfRect</i>]</span></p><p>return:<br/>size of each square.</p>","submitted_at":1435124515000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":32},{"algo_id":8738,"object_id":"bdec4a71-c9aa-11e4-abe1-12f53eafe9d2","username":"malguzt","algoname":"throwing_dice","algolabel":"Throwing dice","language":"python2-2","card_line":"It's a simple API to get dice rolls for rol games or whatever you need.","summary":"<p>It's a simple API to get <span class=\"short_text\" lang=\"en\"><span class=\"hps\">dice rolls for rol games or whatever you need.</span></span></p><p><span class=\"short_text\" lang=\"en\"><span class=\"hps\">You must send a array of dictionaries with the max value of the dice and the number of throws.</span></span></p><p><br/></p><pre class=\"well well-sm sample-input ng-binding\">[&#10;&#9;{&#34;max&#34; : &lt;max number of the dice&gt;, &#34;n&#34; : &lt;number of throws&gt;}, &#10;&#9;{&#34;max&#34; : &lt;max number of the dice&gt;, &#34;n&#34; : &lt;number of throws&gt;}, &#10;&#9;{&#34;max&#34; : &lt;max number of the dice&gt;, &#34;n&#34; : &lt;number of throws&gt;}&#10;]</pre>","submitted_at":1426277297000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":32},{"algo_id":7002,"object_id":"2e0ec81f-c8e3-11e4-abe1-12f53eafe9d2","username":"sgoodman","algoname":"NumbertoBase3","algolabel":"Number to Base 3","language":"python2-2","card_line":"Converts a Base10 number to Base3.","summary":"Converts a Base10 number to Base3.&#160;","submitted_at":1426185905000,"discoverable_world":true,"source_world":true,"license":"mit","call_count":32},{"algo_id":1568,"object_id":"8c3366bb-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"LogitBoost","algolabel":"LogitBoost","language":"java3","card_line":"This is the LogitBoost classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/LogitBoost.html","summary":"<div><span>This is the LogitBoost classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/LogitBoost.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/LogitBoost.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1443812597000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":31},{"algo_id":229,"object_id":"32002e4c-98fa-11e3-8351-040108385a01","username":"graph","algoname":"IsAcyclic","algolabel":"Is Acyclic","language":"java3","card_line":"Returns true if and only if a directed graph contains no cycles.","summary":"Returns true if and only if a directed graph contains no cycles.<div><br></div><div><div>Input:</div><div><ul><li>A graph represented as a map from vertices (strings) to a list of neighbors (list of strings).&nbsp;</li></ul></div></div>","submitted_at":1430444264000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":31},{"algo_id":15291,"object_id":"3894d3b9-1a69-11e5-a825-06910d997133","username":"uaspro","algoname":"Svirclustering","algolabel":"Svir clustering","language":"java3","card_line":"Svir clustering algorithm for VRP.","summary":"<p>Svir clustering algorithm for VRP. This algorithm orders market by angle in polar coordinates system, relative lo geometrical center and warehouse location. Then it splits all set of markets to the sets, that fit car capacity for one route. Results of this clustering could be used for solving vehicle routing problem for delivery.</p>","submitted_at":1435761585000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":30},{"algo_id":2362,"object_id":"02f91a72-8047-11e4-8b54-04011d260101","username":"util","algoname":"mysqlToJSON","algolabel":"mysq To JSON","language":"java3","card_line":"Provides easy connection to a mysql datasource and returns resulting query as a Json object.","summary":"Provides easy connection to a mysql datasource and returns resulting query as a Json object.&#160;","submitted_at":1430446920000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":30},{"algo_id":9366,"object_id":"34a35541-ca53-11e4-abe1-12f53eafe9d2","username":"vbkarthikeyan","algoname":"GeneratePermutation","algolabel":"GeneratePermutation","language":"java3","card_line":"This algorithm will take a String as input and find all possible distinct permutations of the string and return the permutations as a collection.","summary":"This algorithm will take a String as input and find all possible distinct permutations of the string and return the permutations as a collection.","submitted_at":1426347826000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":30},{"algo_id":6329,"object_id":"76fe3e76-c783-11e4-abe1-12f53eafe9d2","username":"thatguy2048","algoname":"GaleShapley","algolabel":"GaleShapley","language":"java3","card_line":"This is an implementation of the Gale-Shapley stable marriage algorithm.","summary":"This is an implementation of the Gale-Shapley <a href=\"http://en.wikipedia.org/wiki/Stable_marriage_problem\"> stable marriage </a>algorithm. This does not check for that all of the input names are valid, it only checks that the number of rows are divisible by 2, and that each row contains 'n' names, where 'n' is the number of rows divided by 2.","submitted_at":1426049929000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":30},{"algo_id":6191,"object_id":"821cfb9f-c083-11e4-840d-12f53eafe9d2","username":"joannetang","algoname":"GaleShapley","algolabel":"GaleShapley","language":"java3","card_line":"Gale Shapley algorithm for stable matching.","summary":"Gale Shapley algorithm for stable matching.<div><br/></div><div><b>Input:</b>&#160;Object of class <u>Map&lt;String,List&lt;String&gt;&gt;</u>, in which each key is a node name, and its value is an ordered list of names denoting preferences (the first element being the highest preference). The input contains 2n elements, n of which are &#8220;male&#8221; and include each of the n &#8220;female&#8221; nodes in their preference list, and vice versa.&#160;The order of the elements in the input map does not matter, and &#34;male&#34; vs. &#34;female&#34; elements will be determined based on the composition of the preference lists (a &#34;male&#34; element will have only &#34;female&#34; elements in their preference list while a &#34;female&#34; element will have only &#34;male&#34; elements in their preference list&#34;).</div><div><b><br/></b></div><div><b>Output:&#160;</b>Object of class&#160;<u>Map&lt;String,String&gt;</u> where each key is paired with its value.<br/></div><div><br/></div><div><b>Suitor Bias</b>: The Gale-Shapley algorithm is biased for 'suitor optimality'. The suitor in this implementation will be the &#34;gender&#34; (group) opposite that of the first element. For more information on the Gale-Shapley algorithm see:&#160;<a href=\"http://en.wikipedia.org/wiki/Stable_marriage_problem\">http://en.wikipedia.org/wiki/Stable_marriage_problem</a>.</div><div><br/></div><div><b>Sample:</b>&#160;In the Sample Input and Sample Output below, &#34;Andre&#34; and &#34;Ritesh&#34; are male while &#34;Shikha&#34; and &#34;Joanne&#34; are female. The 'suitor' in this case will be the females, as the first element &#34;Andre&#34; is male.&#160;</div>","submitted_at":1445291533000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":29},{"algo_id":3837,"object_id":"ab4edd99-abff-11e4-840d-12f53eafe9d2","username":"WebPredict","algoname":"LeftRightTextJustification","algolabel":"LeftRightTextJustification","language":"java3","card_line":"Produces left + right justified text for a specified line length, along with a left indent for the start of each paragraph.","summary":"Produces left + right justified text for a specified line length, along with a left indent for the start of each paragraph. Final line of each paragraph is not right justified.","submitted_at":1445290348000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":29},{"algo_id":14195,"object_id":"5bc66795-e919-11e4-849b-0670f2dc1320","username":"web","algoname":"FindBrokenLinks","algolabel":"Find Broken Links","language":"java3","card_line":"Given the url of a webpage, returns a list of all the broken links on the page (links that cause an HTTP error when they are followed).","summary":"Given the url of a webpage, returns a list of all the broken links on the page (links that cause an HTTP error when they are followed).","submitted_at":1433463156000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":29},{"algo_id":2335,"object_id":"60e2a2db-79a6-11e4-bad7-04011d260101","username":"StanfordNLP","algoname":"POSTagger","algolabel":"POS Tagger","language":"java3","card_line":"Takes text input (as String), splits into sentences, identifies the part of speech of each word in each sentence, and outputs a list of the ordered lists of these parts for each se...","summary":"<div>Takes text input (as String), splits into sentences, identifies the part of speech of each word in each sentence, and outputs a list of the ordered lists of these parts for each sentence.</div><div><br/></div><div>Parts are tagged according to the conventions of the Penn Treebank Project (<a href=\"http://www.cis.upenn.edu/~treebank/\">http://www.cis.upenn.edu/~treebank/</a>). For example, a plural noun is denoted NNS, a singular or mass noun is NN, and a determiner (such as&#160;<i>a/an</i>,&#160;<i>every</i>,&#160;<i>no</i>,&#160;<i>the</i>,<i>another</i>,&#160;<i>any</i>,&#160;<i>some</i>,&#160;<i>each</i>, etc.) as DT.<br/></div><div><br/></div><div>For more information, please refer to&#160;<a href=\"http://nlp.stanford.edu/software/corenlp.shtml\">http://nlp.stanford.edu/software/corenlp.shtml</a>&#160;or&#160;Manning, Christopher D., Surdeanu, Mihai, Bauer, John, Finkel, Jenny, Bethard, Steven J., and McClosky, David. 2014.&#160;<a href=\"http://nlp.stanford.edu/pubs/StanfordCoreNlp2014.pdf\">The Stanford CoreNLP Natural Language Processing Toolkit</a>. In&#160;<i>Proceedings of 52nd Annual Meeting of the Association for Computational Linguistics: System Demonstrations</i>, pp. 55-60.<br/></div>","submitted_at":1430421419000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":29},{"algo_id":11979,"object_id":"ff7cb8a0-ce9f-11e4-abe1-12f53eafe9d2","username":"thatguy2048","algoname":"DWavelet","algolabel":"1D Wavelet","language":"java3","card_line":"This is a wrapper algorithm for wavelet transforms Haar and Daubechies .","summary":"This is a wrapper algorithm for wavelet transforms <a href=\"https://algorithmia.com/algorithms/thatguy2048/HaarWavelet\">Haar</a> and <a href=\"https://algorithmia.com/algorithms/thatguy2048/DaubechiesD4Wavelet\">Daubechies</a>. With the option to specify which wavelet by passing in a string.<div><br/></div><pre>&#34;haar&#34; or &#34;d2&#34; -&gt; Haar<br/>&#34;daubechies&#34; or &#34;d4&#34; -&gt; Daubechies D4</pre>","submitted_at":1426826986000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":29},{"algo_id":9948,"object_id":"1abd36c5-cab3-11e4-abe1-12f53eafe9d2","username":"legeorges","algoname":"bucketr","algolabel":"bucketr","language":"python2-2","card_line":"Categorize numerical data in buckets given a list of numbers and a bucket size.","summary":"<span>Categorize numerical data in buckets given a list of numbers and a bucket size.</span><div><font color=\"#666666\" face=\"Helvetica, arial, nimbussansl, liberationsans, freesans, clean, sans-serif, Segoe UI Emoji, Segoe UI Symbol\" size=\"3\"><span><br/></span></font><div><font color=\"#666666\" face=\"Helvetica, arial, nimbussansl, liberationsans, freesans, clean, sans-serif, Segoe UI Emoji, Segoe UI Symbol\" size=\"3\"><span>Things to consider:<br/></span></font><div><ul><li><span>If no bucket size is given, the largest number in the list is used as the default bucket size.</span><br/></li><li><span>The largest number in the list will be used as the bucket size if the given bucket size is greater&#160;</span><span>than the largest number in the list.</span><br/></li></ul></div></div></div>","submitted_at":1426386175000,"discoverable_world":true,"source_world":true,"license":"gpl3","call_count":29},{"algo_id":3570,"object_id":"27395e70-a748-11e4-840d-12f53eafe9d2","username":"mousum27","algoname":"EntityRecognition","algolabel":"EntityRecognition","language":"java3","submitted_at":1445378288000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":28},{"algo_id":6135,"object_id":"6f2a1d69-be82-11e4-840d-12f53eafe9d2","username":"Aluxian","algoname":"StableMarriageProblem","algolabel":"Stable Marriage Problem","language":"java3","card_line":"In mathematics, economics, and computer science, the stable marriage problem (SMP) is the problem of finding a stable matching between two sets of elements given a set of preferenc...","summary":"<p dir=\"ltr\">In mathematics, economics, and computer science, the stable marriage problem (SMP) is the problem of finding a stable matching between two sets of elements given a set of preferences for each element. A matching is a mapping from the elements of one set&#10;  to the elements of the other set. A matching is stable whenever it is not the case that both:</p>&#10;<p dir=\"ltr\"></p>&#10;<ul>&#10;  <li>&#10;    <span>some given element A of the first matched set prefers some given element B of the second matched set over the element to which A is already matched, and</span>&#10;    <br/>&#10;  </li>&#10;  <li>&#10;    <span>B also prefers A over the element to which B is already matched</span>&#10;    <br/>&#10;  </li>&#10;</ul>&#10;<p></p>&#10;<p dir=\"ltr\">In other words, a matching is stable when there does not exist any alternative pairing (A, B) in which both A and B are individually better off than they would be with the element to which they are currently matched.</p>&#10;<p dir=\"ltr\">&#10;  <span>The stable marriage problem is commonly stated as:</span>&#10;  <br/>&#10;</p>&#10;<blockquote>&#10;  <span>Given n men and n women, where each person has ranked all members of the opposite sex with a unique number between 1 and n in order of preference, marry the men and women together such that there are no two people of opposite sex who would both rather&#10;    have each other than their current partners. If there are no such people, all the marriages are &#34;stable&#34;. (It is assumed that the participants are binary gendered and that marriages are not same-sex).</span>&#10;</blockquote>&#10;<p dir=\"ltr\">Source:&#160;<a href=\"http://en.wikipedia.org/wiki/Stable_marriage_problem\">http://en.wikipedia.org/wiki/Stable_marriage_problem</a>&#10;</p>&#10;<p dir=\"ltr\"><b>Input</b> should be an object of class Map&lt;String,List&lt;String&gt;&gt;, in which each key is a node name, and its value is an ordered list of names denoting preferences (the first element being the highest preference). The structure of the problem&#10;  implies that the input contain 2n elements, n of which are &#8220;male&#8221; and include each of the n &#8220;female&#8221; nodes in their preference list, and vice versa. <b>Output</b> Map&lt;String,String&gt; where each key is paired with its value.</p>&#10;<p dir=\"ltr\">Note that the algorithm is not symmetric in its optimality: as implemented,&#10;  </p><ul>&#10;    <li>&#10;      <span>it is optimal for the &#34;suitors&#34;, but the stable, suitor-optimal solution</span>&#10;      <br/>&#10;    </li>&#10;    <li>&#10;      <span>may or may not be optimal for the &#34;reviewers&#34;.</span>&#10;      <br/>&#10;    </li>&#10;  </ul>&#10;<p></p>","submitted_at":1445292242000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":28},{"algo_id":6084,"object_id":"e5af660e-be1e-11e4-840d-12f53eafe9d2","username":"paranoia","algoname":"StableMatching","algolabel":"StableMatching","language":"java3","card_line":"An implementation of the Gale-Shapley algorithm for solving the Stable Marriage Problem .","summary":"An implementation of the Gale-Shapley algorithm for solving the <a href=\"http://en.wikipedia.org/wiki/Stable_marriage_problem\">Stable Marriage Problem</a>.","submitted_at":1445290951000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":28},{"algo_id":99,"object_id":"6775a73c-8e3c-11e3-8351-040108385a01","username":"dproberts","algoname":"LinearRegression","algolabel":"Linear Regression","language":"java3","card_line":"In statistics, linear regression is an approach to model the relationship between a scalar dependent variable y and one or more explanatory variables denoted X.","summary":"In statistics, linear regression is an approach to model the relationship between a scalar dependent variable y and one or more explanatory variables denoted X.\n\nThis algorithm takes a list of points (floating point pairs), and returns coefficients to the linear equation of the form:\n\ny = beta0 + beta1 * x\n\nAnd also the r^2 correlation coefficient.","submitted_at":1445289758000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":28},{"algo_id":1097,"object_id":"4e3376da-1a89-11e4-9b7d-04011d260101","username":"jtbandes","algoname":"LinearRegression","algolabel":"LinearRegression","language":"java3","card_line":"Performs a least-squares regression with one independent variable.","summary":"Performs a least-squares regression with one independent variable.","submitted_at":1445289581000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":28},{"algo_id":15246,"object_id":"a2acc028-1903-11e5-a825-06910d997133","username":"sfw","algoname":"NDTest","algolabel":"NDTest","language":"python2-2","submitted_at":1436377817000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":28},{"algo_id":15270,"object_id":"487000b4-19cf-11e5-a825-06910d997133","username":"singhalutsav","algoname":"FibonacciLarge","algolabel":"Fibonacci Large","language":"java3","card_line":"Computes fibonacci numbers for large N (&lt;=999) efficiently .","summary":"<p>Computes fibonacci numbers for large N (&lt;=999) <b>efficiently</b>. Takes about 7 seconds on my machine to compute F(999) <span style=\"color: rgb(85, 85, 85);float: none;background-color: rgb(255, 255, 255);\">(probably a lot less here)</span>.</p><p>Two variants of Fibonacci generator:</p><p>1) N --- &gt; Fib(N) (as String)</p><p>N must be between 0 and 999 (both inclusive) otherwise an Exception will be thrown</p><p>2) N, booleanValue ---&gt; String[] of [Fib(0), Fib(1)...Fib(N)]</p><p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\">N must be between 0 and 999 (both inclusive) otherwise an Exception will be thrown.</p><p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\">booleanValue MUST be true (for compatibility reasons) otherwise an exception will be thrown</p>","submitted_at":1435083772000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":28},{"algo_id":1216,"object_id":"2ff0dd4d-40fc-11e4-8a15-04011d260101","username":"TGRedBaron","algoname":"HtmlToStringList","algolabel":"HtmlToStringList","language":"java3","card_line":"Return list of strings given a URL Breaks text depending on block level or inline level elements","summary":"Return list of strings given a URL<div><br/></div><div>Breaks text depending on block level or inline level elements</div>","submitted_at":1433462852000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":28},{"algo_id":14734,"object_id":"ebe2fca2-fe4e-11e4-89ff-123a3b0693f5","username":"etl","algoname":"UpdateEdmonton","algolabel":"Update Edmonton","language":"python2-2","submitted_at":1432063719000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":28},{"algo_id":632,"object_id":"ecbd5b6e-0b0d-11e4-9735-04011d260101","username":"util","algoname":"ip2hostname","algolabel":"IP-to-Hostname","language":"java3","card_line":"Performs a reverse lookup of the hostname for a given IP address","summary":"Performs a reverse lookup of the hostname for a given IP address","submitted_at":1430446921000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":28},{"algo_id":13375,"object_id":"aa7a49a0-dba1-11e4-8df1-12f53eafe9d2","username":"dskut","algoname":"Sudoku","algolabel":"Sudoku","language":"java3","card_line":"Solves a 9x9 sudoku .&#10;","summary":"Solves a 9x9 <a href=\"http://en.wikipedia.org/wiki/Sudoku\">sudoku</a>.&#10;<br/>&#10;Input must be provided as a 9x9 array, with only numbers 0-9, where 0 indicates empty cell.<br/>","submitted_at":1428248450000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":28},{"algo_id":11919,"object_id":"44e09378-ce90-11e4-abe1-12f53eafe9d2","username":"thatguy2048","algoname":"DaubechiesD4Wavelet","algolabel":"Daubechies D4 Wavelet","language":"java3","card_line":"This algorithm performs the Haar Wavelet Transform (or inverse transform) on a one dimensional signal.","summary":"<div>This algorithm performs the&#160;<a href=\"http://en.wikipedia.org/wiki/Haar_wavelet\">Haar Wavelet Transform</a>&#160;(or inverse transform) on a one dimensional signal.&#160;<br/><br/>This algorithm expects a signal which whose length is divisible by 2, and will perform the transform for as long as the length can be divided by 2, while still being evenly divisible. &#160;Unless a max number of iterations is specified by an&#160;<b>int</b>&#160;before the input signal.<b><br/></b></div><div><b><br/></b></div><div><b>Sample Input</b></div><pre>[1,[1,2,3,1,2,3,4,0]]</pre><div><b>Sample Output</b></div><pre><span>{&#34;transform&#34;:[2.69901760217,2.34546421158,4.37205020963,1.8971764754999998,1.44888873942,-0.38822856765000013,2.4148145657,-0.64704761275],&#34;i&#34;:1}</span><b><br/></b></pre><div><b><br/></b></div><b>Inverse Input</b><pre>[[5.65685424933524,2.1516122217235534e-13,1.8660254037497057,0.1339745962132557,1.44888873942,-0.38822856765000013,2.4148145657,-0.64704761275],3]</pre>&#10;<b>Invers Output</b><pre>[0.9999999999129452,1.9999999998886333,2.999999999875018,0.9999999999147142,1.9999999998771734,2.9999999998447104,3.999999999853363,-5.548117520959295e-11]</pre>","submitted_at":1426813691000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":28},{"algo_id":3206,"object_id":"8611dbf6-a29a-11e4-be78-12e1fbfbf82c","username":"TimeSeries","algoname":"SpikeDetection","algolabel":"Spike Detection","language":"java3","card_line":"A simple anomaly detection algorithm that reports sudden changes in a time series.","summary":"A simple anomaly detection algorithm that reports sudden changes in a time series. Takes as input a time series in the form of a double[] and a spike threshold. If any point differs from its neighbor by more than the threshold value, it is considered an anomaly. The array returned matches the input array on anomaly points, all other points are set to 0. Note that this only takes local information into account, so if the time series has, for instance, a high magnitude period in between low magnitude periods, only the start and end of the high magnitude period will be reported.&#160;","submitted_at":1426116707000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":28},{"algo_id":2869,"object_id":"3a7c90e9-9d15-11e4-be78-12e1fbfbf82c","username":"JaCoP","algoname":"GraphColoring","algolabel":"Graph Coloring","language":"java3","card_line":"This is an algorithm for graph coloring ( http://en.wikipedia.org/wiki/Graph_coloring ) built on the JaCoP Constraint Programming Solver ( https://github.com/radsz/jacop","summary":"This is an algorithm for graph coloring (<a href=\"http://en.wikipedia.org/wiki/Graph_coloring\">http://en.wikipedia.org/wiki/Graph_coloring</a>) built on the JaCoP Constraint Programming Solver (<a href=\"https://github.com/radsz/jacop\">https://github.com/radsz/jacop</a>). It takes a hash table, with each node name a key having the list of neighbors of that node as the corresponding value (essentially an adjacency list) and outputs a hash table of node names with the corresponding (integer) color as value.<br/>","submitted_at":1445373023000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":27},{"algo_id":1219,"object_id":"1fc8dc4a-4223-11e4-8a15-04011d260101","username":"mgomezm","algoname":"AccelerometerClassifier","algolabel":"AccelerometerClassifier","language":"java3","card_line":"Given x,y,z accelerometer readings, will determine whther the user is Stationary, Walking, or Running.","summary":"Given x,y,z accelerometer readings, will determine whther the user is&#160;<span>Stationary, Walking, or Running.&#160;</span>","submitted_at":1445289461000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":27},{"algo_id":15924,"object_id":"0d796f72-3970-11e5-aae6-12ad1a8c1691","username":"ANaimi","algoname":"AlexaRanking","algolabel":"Alexa Ranking","language":"java3","card_line":"Takes a domain name and returns the Alexa ranking of that domain.","summary":"<p>Takes a domain name and returns the Alexa ranking of that domain.</p>","submitted_at":1438560394000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":27},{"algo_id":12710,"object_id":"4f8dcba2-d197-11e4-abe1-12f53eafe9d2","username":"Etherno","algoname":"LoadDataFromURL","algolabel":"LoadDataFromURL","language":"java3","card_line":"Copy a file resource identified by URL in the Algorithmia data space","summary":"Copy a file resource identified by URL in the Algorithmia data space<br/>","submitted_at":1433798234000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":27},{"algo_id":3202,"object_id":"a1644829-a296-11e4-be78-12e1fbfbf82c","username":"nlp","algoname":"RetrieveStopWords","algolabel":"RetrieveStopWords","language":"java3","card_line":"Returns a common list of stop words.","summary":"Returns a common list of stop words. Based on Mallet's list of stop words and&#160;<a href=\"http://www.ranks.nl/stopwords\">http://www.ranks.nl/stopwords</a>. If you have any suggestions for adding to this list, comment below!","submitted_at":1430946820000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":27},{"algo_id":1857,"object_id":"c18aab49-6b71-11e4-bad7-04011d260101","username":"weka","algoname":"WekaPreprocessing","algolabel":"WekaPreprocessing","language":"java3","card_line":"This is the main algorithm that all of the Weka preprocessing algorithms call.","summary":"This is the main algorithm that all of the Weka preprocessing algorithms call. It is preferred that you do not call this algorithm directly, but by one of the preprocessors on the platform. The Weka algorithms that are on the platform take in flat Json as input. It is assumed that any data that is going to be used with these algorithms will be large in size, so all interaction is done through Data collections.","submitted_at":1430441855000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":27},{"algo_id":14178,"object_id":"742b8b33-e8de-11e4-849b-0670f2dc1320","username":"basten","algoname":"PrincipalComponentAnalysis","algolabel":"Principal Component Analysis","language":"java3","card_line":"Principal Component Analysis (PCA) using the covariance method ( Wikipedia ) The algorithm computes the principal components of a set of n -dimensional data points and transforms t...","summary":"Principal Component Analysis (PCA) using the covariance method (<a href=\"http://en.wikipedia.org/wiki/Principal_component_analysis#Computing_PCA_using_the_covariance_method\">Wikipedia</a>)<div><br/></div><div>The algorithm computes the principal components of a set of <i>n</i>-dimensional data points and transforms the points to a new coordinate system s.t. the first dimension contains the greatest variance, the second dimension contains the second greatest variance, etc.</div><div><br/></div><div>The algorithm takes as input a list of data points (which are themselves lists of doubles), and outputs an object with the following four fields:</div><div><br/></div><div><ul><li><span>&#34;transformed&#34;: the transformed data points</span><br/></li><li><span>&#34;eigenvectors&#34;: the eigenvectors/principal components of the input data set (ordered by decreasing variance)&#160;</span><br/></li><li><span>&#34;eigenvalues&#34;: the eigenvalues of the eigenvectors (in the same order)</span><br/></li><li><span>&#34;mean&#34;: the mean of the input data</span><br/></li></ul></div><div><span><br/></span></div>","submitted_at":1430330232000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":27},{"algo_id":8375,"object_id":"3c605484-c97a-11e4-abe1-12f53eafe9d2","username":"telesyk","algoname":"IsPrime","algolabel":"IsPrime","language":"scala2","card_line":"Evaluates if input (long integer) is a prime number.","summary":"Evaluates if input (long integer) is a prime number. Returns boolean: true or false<br/>","submitted_at":1426250416000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":27},{"algo_id":8302,"object_id":"f44776e3-c96e-11e4-abe1-12f53eafe9d2","username":"tbenjis","algoname":"CaesarCipher","algolabel":"Caesar Cipher","language":"java3","card_line":"Simple Caesar cipher with special characters.","summary":"Simple Caesar cipher with special characters. &#160;Caesar cipher, also known as Caesar's cipher, the shift cipher, Caesar's code or Caesar shift, is one of the simplest and most widely known encryption techniques. It is a type of substitution cipher in which each letter in the plaintext is replaced by a letter some fixed number of positions down the alphabet.&#160;<div><br/></div><div><b>Usage</b></div><div><b><br/></b></div><pre><span>[&#34;&lt;String&gt; encrypt/decrypt&#34;, &#34;&lt;String&gt; input&#34;, &lt;int&gt; key]</span></pre><div><div><br/></div><div><b>Sample</b></div><div><br/></div><div><pre class=\"well well-sm sample-input ng-binding\">[&#34;encrypt&#34;, &#34;American Standard Code for Information Interchange&#34;, 24]</pre></div><div><div><pre class=\"well well-sm sample-input ng-binding\">[&#34;decrypt&#34;, &#34;Y+#0'!Y,X12Y,\\&#34;Y0\\&#34;X!-\\&#34;#X$-0X',$-0+Y2'-,X',2#0!&amp;Y,%#&#34;, 24]</pre></div></div><div><br/></div><div><br/></div></div><div><br/></div>","submitted_at":1426244666000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":27},{"algo_id":3566,"object_id":"43139f93-a73d-11e4-840d-12f53eafe9d2","username":"TiagoOliveiraMarques","algoname":"eigenvalues","algolabel":"eigenvalues","language":"java3","card_line":"Compute the real eigenvalues of a square matrix.","summary":"Compute the real eigenvalues of a square matrix.","submitted_at":1445377759000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":26},{"algo_id":3946,"object_id":"85abc699-ad38-11e4-840d-12f53eafe9d2","username":"WebPredict","algoname":"StringEditDistance","algolabel":"StringEditDistance","language":"java3","card_line":"Levenshtein string edit distance.","summary":"Levenshtein string edit distance. Returns the minimum number of character inserts, deletes, and substitutions required to transform one string into another.","submitted_at":1445290269000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":26},{"algo_id":4061,"object_id":"d8e2abdc-ae56-11e4-840d-12f53eafe9d2","username":"StanfordNLP","algoname":"Java2NER","algolabel":"Java2NER","language":"java3","card_line":"Identifies named (PERSON,LOCATION,ORGANIZATION,MISC) and numerical (MONEY,NUMBER,DATA,TIME,DURATION,SET) in text, outputs the text of each entity along with its identifier.","summary":"Identifies named (PERSON,LOCATION,ORGANIZATION,MISC) and numerical (MONEY,NUMBER,DATA,TIME,DURATION,SET) in text, outputs the text of each entity along with its identifier. Specifically, this algorithm takes a string as input, splits it into sentences, finds the named entities in each sentence, and for each sentence, outputs a list of the named entities along with their type as a two-element string array.<div><br/></div><div>For more information, please refer to&#160;<a href=\"http://nlp.stanford.edu/software/corenlp.shtml\">http://nlp.stanford.edu/software/corenlp.shtml</a>&#160;or&#160;Manning, Christopher D., Surdeanu, Mihai, Bauer, John, Finkel, Jenny, Bethard, Steven J., and McClosky, David. 2014.&#160;<a href=\"http://nlp.stanford.edu/pubs/StanfordCoreNlp2014.pdf\">The Stanford CoreNLP Natural Language Processing Toolkit</a>. In&#160;<i>Proceedings of 52nd Annual Meeting of the Association for Computational Linguistics: System Demonstrations</i>, pp. 55-60.&#160;</div>","submitted_at":1430421825000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":26},{"algo_id":13622,"object_id":"37f9de4b-df1d-11e4-8df1-12f53eafe9d2","username":"nlp","algoname":"KeywordAnalysisForReviews","algolabel":"Keyword Analysis For Reviews","language":"java3","card_line":"This algorithm can be used to identify the important terms that differentiate good reviews from bad reviews.","summary":"<span>This algorithm can be used to identify the important terms that differentiate good reviews from bad reviews. It is based on&#160;</span><a href=\"http://en.wikipedia.org/wiki/Tf%E2%80%93idf\">tf-idf scoring</a><span>&#160;(a version of which is implemented for general multiple-document keyword identification in </span><a href=\"https://algorithmia.com/algorithms/nlp/KeywordsForDocumentSet\">/nlp/KeywordsForDocumentSet</a><span>), but unlike these, it calculates term frequencies for the entire set of reviews sharing a given rating. It takes as input</span><br/><div><ul><li>The set of reviews (as a String[])</li><li>The ratings of each review (as Integer[]). The i-th review in the first argument corresponds to the i-th rating in the second.</li><li>The number of rating options (general 5, for a 1-5 star system)</li><li>The maximum number of keywords to return for each rating.</li></ul><div>It returns the set of keywords corresponding to weighting in order, from lowest rating to highest rating. Terms that appear frequently across all rating classes will be assigned low weight and thus will not likely appear as keywords.&#160;</div></div>","submitted_at":1428631162000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":26},{"algo_id":3801,"object_id":"8a40c3d9-abea-11e4-840d-12f53eafe9d2","username":"email","algoname":"SendEmail","algolabel":"SendEmail","language":"java3","card_line":"This algorithm simply sends an email.","summary":"<div>This algorithm simply sends an email.</div><div><br/></div><div><b>Warning:</b> This algorithm is very simple and any message sent from this algorithm is likely to be sent to the Spam folder by major email providers. Use&#160;<a href=\"https://algorithmia.com/algorithms/email/SendEmailFromGmail\">https://algorithmia.com/algorithms/email/SendEmailFromGmail</a> if you would like a more robust email sender.</div>","submitted_at":1445375298000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":25},{"algo_id":3101,"object_id":"b40e70f9-a1dd-11e4-be78-12e1fbfbf82c","username":"Geo","algoname":"LatLongToUTM","algolabel":"Lat Long To UTM","language":"java3","card_line":"Converts latitude/longitude coordinates to UTM ( http://en.wikipedia.org/wiki/Universal_Transverse_Mercator_coordinate_system ).","summary":"Converts latitude/longitude coordinates to UTM (<a href=\"http://en.wikipedia.org/wiki/Universal_Transverse_Mercator_coordinate_system\">http://en.wikipedia.org/wiki/Universal_Transverse_Mercator_coordinate_system</a>).&#160;<div><br/></div><div>Result is returned as a String[] of form &#160;[&lt;longitude zone&gt;, &lt;latitude zone&gt;, &lt;easting&gt;, &lt;northing&gt;] &#160;where<span>&#160;</span><em>easting</em><span>&#160;is the projected distance from longitude zone's central meridian and&#160;</span><em>northing</em><span>&#160;is the projected distance from the equator. The values of both easting and northing are given in meters. For example, the latitude/longitude coordinates 61.44, 25.40 are presented in UTM as 35 V 414668 6812844; the latitude/longitude coordinates -47.04, -73.48 are 18 G 615471 4789269 in UTM.</span><br/></div><div><span><br/></span></div><div>Based on coordinate conversion software by Sami Salkosuo at IBM, see&#160;<a href=\"https://www.ibm.com/developerworks/java/library/j-coordconvert/\">https://www.ibm.com/developerworks/java/library/j-coordconvert/</a>&#160;for more details.<span><br/></span></div>","submitted_at":1445291723000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":25},{"algo_id":2301,"object_id":"34061040-759f-11e4-bad7-04011d260101","username":"cmu","algoname":"ParallelMST","algolabel":"ParallelMST","language":"java3","card_line":"This algorithm computes the minimum spanning tree of a graph using a parallel Kruskal's algorithm implementation.","summary":"This algorithm computes the minimum spanning tree of a graph using a parallel Kruskal's algorithm implementation. Currently it operates on some sample graphs uploaded to the Data API in the GML format, new data can be uploaded and the path can be given to the readGMLData function inside the source code.","submitted_at":1445289953000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":25},{"algo_id":1334,"object_id":"99b99b1e-4e7c-11e4-b63d-04011d260101","username":"st0le","algoname":"Primality","algolabel":"Primality","language":"java3","card_line":"Returns true if number (64bit signed integer) is prime.","summary":"Returns true if number (64bit signed integer) is prime.","submitted_at":1445289223000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":25},{"algo_id":16463,"object_id":"4987fe63-506b-11e5-aae6-12ad1a8c1691","username":"hotels","algoname":"WebsiteSummary","algolabel":"Website Summary","language":"java4","card_line":"This algorithm takes a web address and returns a summary relevant structural details of the site.","summary":"<p>This algorithm takes a web address and returns a summary relevant structural details of the site. Specifically, it is intended to identify the relevant pages on a hotel website, returning selected metadata and the relative importance of various pages as measured by PageRank. </p><div><br/></div><div><span>The returned information includes:</span></div><div><ul><li>url - the original address given, assumed to be the main page of the website.</li><li>language - the language of the main page. See <a href=\"https://algorithmia.com/algorithms/nlp/LanguageIdentification\">https://algorithmia.com/algorithms/nlp/LanguageIdentification</a> for a guide to the returned language symbols.</li><li>tags - important terms from the website.</li><li>important pages - we check to identify which pages on the site are used for rooms, reservations/booking, photos, and location. For this we currently support English, Spanish, Italian, German, and Portuguese.</li><li>pageRanks - an ordered list of pages on the site by page rank, the higher the rank, the more likely the page is to be important.</li></ul></div>","submitted_at":1442010771000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":25},{"algo_id":14505,"object_id":"aea4d4e9-f3fe-11e4-849b-0670f2dc1320","username":"chrisrobbins157","algoname":"RandomAllocatorUnlimitedItems","algolabel":"Random Allocator - Unlimited Items","language":"python2-2","card_line":"This algorithm allocates random percentages to each item in a list where the sum of the percentages equals 100%.","summary":"<div class=\"text-wordwrap ng-binding\" style=\"color: rgb(85, 85, 85);\">This algorithm allocates random percentages to each item in a list where the sum of the percentages equals 100%.<div><br/></div><div>One example where this is useful is portfolio optimization where the many hypothetical portfolios are generated to find the optimal portfolio allocation for each level of risk. There are many other practical uses.</div><div><br/></div><div>An unlimited number of items can be used as inputs for this algorithm. There is also a free version that limits the number of inputs to 10 listed here: https://algorithmia.com/algorithms/chrisrobbins157/RandomAllocator</div></div>","submitted_at":1430923623000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":25},{"algo_id":1520,"object_id":"46d56933-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"BayesianLogisticRegression","algolabel":"BayesianLogisticRegression","language":"java3","card_line":"This is the BayesianLogisticRegression classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/BayesianLogisticRegression.html","summary":"<div><span>This is the BayesianLogisticRegression classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/BayesianLogisticRegression.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/BayesianLogisticRegression.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443981000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":25},{"algo_id":10866,"object_id":"216f22a2-cc53-11e4-abe1-12f53eafe9d2","username":"thatguy2048","algoname":"BranchAndBound","algolabel":"BranchAndBound","language":"java3","card_line":"This is an implementation of the Branch and Bound algorithm, used to solve an assignment problem.","summary":"This is an implementation of the Branch and Bound algorithm, used to solve an assignment problem.<div><br/></div><div>The expected input is an N by N matrix, where each row is assigned a task and each column a task. The values in the matrix is the cost of assigning task &#34;column&#34; to a &#34;row&#34;.</div>","submitted_at":1427353064000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":25},{"algo_id":3926,"object_id":"e0cb8ea7-acc0-11e4-840d-12f53eafe9d2","username":"WebPredict","algoname":"RemoveImageSnow","algolabel":"RemoveImageSnow","language":"java3","card_line":"Removal/correction of image \"snow\" aka noise, inspired by: http://ostermiller.org/dilate_and_erode.html","summary":"Removal/correction of image &#34;snow&#34; aka noise, inspired by:&#160;http://ostermiller.org/dilate_and_erode.html<div><br/></div><div>Takes a 2D array representing an image, and a radius of (max possible) snow, e.g., 1 (for 1 pixel). Resulting pixels determined to be snow are replaced with the average color of the non-zero colored pixels around them. Returns the cleaned up image 2D array.</div>","submitted_at":1445290303000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":24},{"algo_id":58,"object_id":"67759782-8e3c-11e3-8351-040108385a01","username":"kenny","algoname":"StdDev","algolabel":"Standard Deviation","language":"java3","card_line":"Computes mean and standard deviation for a list of samples.","summary":"Computes mean and standard deviation for a list of samples.","submitted_at":1428564865000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":24},{"algo_id":13310,"object_id":"871bd2ff-d963-11e4-8df1-12f53eafe9d2","username":"despens","algoname":"delphi","algolabel":"delphi","language":"python2-2","card_line":"Just ask any plain text english question and delphi will tell you the truth.","summary":"Just ask any plain text english question and delphi will tell you the truth.<br/>","submitted_at":1427998297000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":24},{"algo_id":8806,"object_id":"e2d0c2fc-c9b4-11e4-abe1-12f53eafe9d2","username":"peter_venable","algoname":"LetterPressHint","algolabel":"LetterPressHint","language":"python2-2","card_line":"Cheat at LetterPress.","summary":"Cheat at LetterPress.<div><br/></div><div>Given a&#160;<span>LetterPress board (i.e. a list of letters) finds valid words using only those letters.</span></div><div><span><br/></span></div><div><span>Bonus: focus your search with preferred and required letters.</span></div>","submitted_at":1426279356000,"discoverable_world":true,"source_world":true,"license":"apache2","call_count":24},{"algo_id":353,"object_id":"edc937b9-abfb-11e3-8351-040108385a01","username":"codeb34v3r","algoname":"LuceneTextAnalyzer","algolabel":"LuceneTextAnalyzer","language":"java3","card_line":"In general, any analyzer in Lucene is a combination of tokenizer =&gt; Stemmer =&gt; Stop-words filter.","summary":"<p style=\"margin-bottom: 1em; padding: 0px; border: 0px; vertical-align: baseline; clear: both; color: rgb(0, 0, 0); font-family: Arial, 'Liberation Sans', 'DejaVu Sans', sans-serif; line-height: 17.804800033569336px;\">In general, any analyzer in Lucene is a combination of tokenizer =&gt; Stemmer =&gt; Stop-words filter.</p><p style=\"margin-bottom: 1em; padding: 0px; border: 0px; vertical-align: baseline; clear: both; color: rgb(0, 0, 0); font-family: Arial, 'Liberation Sans', 'DejaVu Sans', sans-serif; line-height: 17.804800033569336px;\"><strong style=\"margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; background-color: transparent;\">Tokenizer</strong>&nbsp;splits your text into chunks, and since different analyzers may use different tokenizers, you can get different output&nbsp;<em style=\"margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; background-color: transparent;\">token streams</em>, i.e. sequences of chunks of text. For example, KeywordAnalyzer you mentioned&nbsp;<em style=\"margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; background-color: transparent;\">doesn't split the text at all</em>&nbsp;and takes all the field as a single token. At the same time, StandardAnalyzer (and most other analyzers) use spaces and punctuation as a split points. For example, for phrase \"I am very happy\" it will produce list [\"i\", \"am\", \"very\", \"happy\"] (or something like that). For more information on specific analyzers/tokenizers see its&nbsp;<a href=\"http://lucene.apache.org/core/old_versioned_docs/versions/3_0_0/api/contrib-analyzers/index.html\" style=\"margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; color: rgb(74, 107, 130); cursor: pointer;\">Java Docs</a>.</p><p style=\"margin-bottom: 1em; padding: 0px; border: 0px; vertical-align: baseline; clear: both; color: rgb(0, 0, 0); font-family: Arial, 'Liberation Sans', 'DejaVu Sans', sans-serif; line-height: 17.804800033569336px;\"><strong style=\"margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; background-color: transparent;\">Stemmers</strong>&nbsp;are used to get the base of a word in question. It heavily depends on the language used. For example, for previous phrase in English there will be something like [\"i\", \"be\", \"veri\", \"happi\"] produced, and for French \"Je suis très heureux\" some kind of French analyzer (like&nbsp;<a href=\"http://lucene.apache.org/java/3_0_1/api/contrib-snowball/org/apache/lucene/analysis/snowball/SnowballAnalyzer.html\" style=\"margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; color: rgb(74, 107, 130); cursor: pointer;\">SnowballAnalyzer</a>, initialized with \"French\") will produce [\"je\", \"être\", \"tre\", \"heur\"]. Of course, if you will use analyzer of one language to stem text in another, rules from the other language will be used and stemmer may produce incorrect results. It isn't fail of all the system, but search results then may be less accurate.<br>KeywordAnalyzer do not use any stemmers, it passes all the field unmodified. So, if you are going to search some words in English text, it isn't a good idea to use this analyzer.</p><p style=\"margin-bottom: 1em; padding: 0px; border: 0px; vertical-align: baseline; clear: both; color: rgb(0, 0, 0); font-family: Arial, 'Liberation Sans', 'DejaVu Sans', sans-serif; line-height: 17.804800033569336px;\"><strong style=\"margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; background-color: transparent;\">Stop words</strong>&nbsp;are the most frequent and almost useless words. Again, it heavily depends on language. For English these words are \"a\", \"the\", \"I\", \"be\", \"have\", etc. Stop-words filters remove them from the token stream to lower noise in search results, so finally our phrase \"I'm very happy\" with StandardAnalyzer will be transformed to list [\"veri\", \"happi\"].</p><p style=\"margin-bottom: 1em; padding: 0px; border: 0px; vertical-align: baseline; clear: both; color: rgb(0, 0, 0); font-family: Arial, 'Liberation Sans', 'DejaVu Sans', sans-serif; line-height: 17.804800033569336px;\"><br>And KeywordAnalyzer again do nothing. So, KeywordAnalyzer is used for things like ID or phone numbers, but not for usual text.]</p>","submitted_at":1445289912000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":23},{"algo_id":309,"object_id":"43d83a2d-9f83-11e3-8351-040108385a01","username":"codeb34v3r","algoname":"TopologicalSort","algolabel":"TopologicalSort","language":"java3","card_line":"In computer science , a topological sort (sometimes abbreviated topsort or toposort ) or topological ordering of a directed graph is a linear ordering of its vertices such that for...","summary":"<span style=\"color: rgb(0, 0, 0); font-family: sans-serif; font-size: 13px; line-height: 19.200000762939453px;\">In&nbsp;</span><a href=\"http://en.wikipedia.org/wiki/Computer_science\" title=\"Computer science\" style=\"color: rgb(11, 0, 128); background-image: none; background-color: rgb(255, 255, 255); font-family: sans-serif; font-size: 13px; line-height: 19.200000762939453px;\">computer science</a><span style=\"color: rgb(0, 0, 0); font-family: sans-serif; font-size: 13px; line-height: 19.200000762939453px;\">, a&nbsp;</span><b style=\"color: rgb(0, 0, 0); font-family: sans-serif; font-size: 13px; line-height: 19.200000762939453px;\">topological sort</b><span style=\"color: rgb(0, 0, 0); font-family: sans-serif; font-size: 13px; line-height: 19.200000762939453px;\">&nbsp;(sometimes abbreviated&nbsp;</span><b style=\"color: rgb(0, 0, 0); font-family: sans-serif; font-size: 13px; line-height: 19.200000762939453px;\">topsort</b><span style=\"color: rgb(0, 0, 0); font-family: sans-serif; font-size: 13px; line-height: 19.200000762939453px;\">&nbsp;or&nbsp;</span><b style=\"color: rgb(0, 0, 0); font-family: sans-serif; font-size: 13px; line-height: 19.200000762939453px;\">toposort</b><span style=\"color: rgb(0, 0, 0); font-family: sans-serif; font-size: 13px; line-height: 19.200000762939453px;\">) or&nbsp;</span><b style=\"color: rgb(0, 0, 0); font-family: sans-serif; font-size: 13px; line-height: 19.200000762939453px;\">topological ordering</b><span style=\"color: rgb(0, 0, 0); font-family: sans-serif; font-size: 13px; line-height: 19.200000762939453px;\">&nbsp;of a&nbsp;</span><a href=\"http://en.wikipedia.org/wiki/Directed_graph\" title=\"Directed graph\" style=\"color: rgb(11, 0, 128); background-image: none; background-color: rgb(255, 255, 255); font-family: sans-serif; font-size: 13px; line-height: 19.200000762939453px;\">directed graph</a><span style=\"color: rgb(0, 0, 0); font-family: sans-serif; font-size: 13px; line-height: 19.200000762939453px;\">&nbsp;is a linear ordering of its&nbsp;</span><a href=\"http://en.wikipedia.org/wiki/Vertex_(graph_theory)\" title=\"Vertex (graph theory)\" style=\"color: rgb(11, 0, 128); background-image: none; background-color: rgb(255, 255, 255); font-family: sans-serif; font-size: 13px; line-height: 19.200000762939453px;\">vertices</a><span style=\"color: rgb(0, 0, 0); font-family: sans-serif; font-size: 13px; line-height: 19.200000762939453px;\">&nbsp;such that for every directed edge&nbsp;</span><i style=\"color: rgb(0, 0, 0); font-family: sans-serif; font-size: 13px; line-height: 19.200000762939453px;\">uv</i><span style=\"color: rgb(0, 0, 0); font-family: sans-serif; font-size: 13px; line-height: 19.200000762939453px;\">&nbsp;from vertex&nbsp;</span><i style=\"color: rgb(0, 0, 0); font-family: sans-serif; font-size: 13px; line-height: 19.200000762939453px;\">u</i><span style=\"color: rgb(0, 0, 0); font-family: sans-serif; font-size: 13px; line-height: 19.200000762939453px;\">&nbsp;to vertex&nbsp;</span><i style=\"color: rgb(0, 0, 0); font-family: sans-serif; font-size: 13px; line-height: 19.200000762939453px;\">v</i><span style=\"color: rgb(0, 0, 0); font-family: sans-serif; font-size: 13px; line-height: 19.200000762939453px;\">,&nbsp;</span><i style=\"color: rgb(0, 0, 0); font-family: sans-serif; font-size: 13px; line-height: 19.200000762939453px;\">u</i><span style=\"color: rgb(0, 0, 0); font-family: sans-serif; font-size: 13px; line-height: 19.200000762939453px;\">&nbsp;comes before&nbsp;</span><i style=\"color: rgb(0, 0, 0); font-family: sans-serif; font-size: 13px; line-height: 19.200000762939453px;\">v</i><span style=\"color: rgb(0, 0, 0); font-family: sans-serif; font-size: 13px; line-height: 19.200000762939453px;\">&nbsp;in the ordering. For instance, the vertices of the graph may represent tasks to be performed, and the edges may represent constraints that one task must be performed before another; in this application, a topological ordering is just a valid sequence for the tasks. A topological ordering is possible if and only if the graph has no&nbsp;</span><a href=\"http://en.wikipedia.org/wiki/Directed_cycle\" title=\"Directed cycle\" class=\"mw-redirect\" style=\"color: rgb(11, 0, 128); background-image: none; background-color: rgb(255, 255, 255); font-family: sans-serif; font-size: 13px; line-height: 19.200000762939453px;\">directed cycles</a><span style=\"color: rgb(0, 0, 0); font-family: sans-serif; font-size: 13px; line-height: 19.200000762939453px;\">, that is, if it is a&nbsp;</span><a href=\"http://en.wikipedia.org/wiki/Directed_acyclic_graph\" title=\"Directed acyclic graph\" style=\"color: rgb(11, 0, 128); background-image: none; background-color: rgb(255, 255, 255); font-family: sans-serif; font-size: 13px; line-height: 19.200000762939453px;\">directed acyclic graph</a><span style=\"color: rgb(0, 0, 0); font-family: sans-serif; font-size: 13px; line-height: 19.200000762939453px;\">&nbsp;(DAG). Any DAG has at least one topological ordering, and&nbsp;</span><a href=\"http://en.wikipedia.org/wiki/Algorithm\" title=\"Algorithm\" style=\"color: rgb(11, 0, 128); background-image: none; background-color: rgb(255, 255, 255); font-family: sans-serif; font-size: 13px; line-height: 19.200000762939453px;\">algorithms</a><span style=\"color: rgb(0, 0, 0); font-family: sans-serif; font-size: 13px; line-height: 19.200000762939453px;\">&nbsp;are known for constructing a topological ordering of any DAG in&nbsp;</span><a href=\"http://en.wikipedia.org/wiki/Linear_time\" title=\"Linear time\" class=\"mw-redirect\" style=\"color: rgb(11, 0, 128); background-image: none; background-color: rgb(255, 255, 255); font-family: sans-serif; font-size: 13px; line-height: 19.200000762939453px;\">linear time</a><span style=\"color: rgb(0, 0, 0); font-family: sans-serif; font-size: 13px; line-height: 19.200000762939453px;\">.</span>","submitted_at":1445289886000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":23},{"algo_id":13068,"object_id":"6113c840-d627-11e4-8df1-12f53eafe9d2","username":"bonfatti81","algoname":"poisson","algolabel":"poisson","language":"java3","card_line":"Poisson Distribution Calculator","summary":"Poisson Distribution Calculator","submitted_at":1431698008000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":23},{"algo_id":3897,"object_id":"8a189248-ac64-11e4-840d-12f53eafe9d2","username":"Aluxian","algoname":"ArbitrageDetection","algolabel":"Arbitrage Detection","language":"java3","card_line":"Consider a market for financial transactions that is based on trading commodities.","summary":"Consider a market for financial transactions that is based on trading commodities. The table below&#160;shows conversion rates among currencies.&#160;<div><br/></div><pre><p>USD 1      0.741  0.657  1.061  1.005<br/>EUR 1.349  1      0.888  1.433  1.366<br/>GBP 1.521  1.126  1      1.614  1.538<br/>CHF 0.942  0.698  0.619  1      0.953<br/>CAD 0.995  0.732  0.650  1.049  1</p></pre><div><br/></div><div>The table has one line per currency, giving its name followed by the conversion rates to the other currencies. An&#160;<em>arbitrage opportunity</em>&#160;is a directed cycle such that the product of the exchange rates is greater than one. For example, our table says that 1,000 U.S. dollars will buy 1,000.00 &#215; .741 = 741 euros, then we can buy 741 &#215; 1.366 = 1,012.206 Canadian dollars with our euros, and finally, 1,012.206 &#215; .995 = 1,007.14497 U.S. dollars with our Canadian dollars, a 7.14497-dollar profit!</div><div><br/></div><div><div>Output: a list of solutions, where each solution has the following fields:</div><div>&#160;- amounts: how much 1 unit of the first currency is worth in the others (the ones in the '<span>currencies' field)</span></div><div>&#160;- currencies: the currency conversions</div><div>&#160;- profit: the amount of profit in the first currency</div><div>&#160;- ratio: the profit ratio</div></div>","submitted_at":1445292251000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":22},{"algo_id":6280,"object_id":"0c1e4b22-c429-11e4-840d-12f53eafe9d2","username":"WebPredict","algoname":"SortRowsOn","algolabel":"SortRowsOn","language":"java3","card_line":"Sorts a collection of rows alphabetically, based on column values, for the given specified column indices.","summary":"Sorts a collection of rows alphabetically, based on column values, for the given specified column indices.<div><br/></div><div>First parameter: collection of rows to be sorted</div><div>Second parameter: list of columns to sort on</div><div>Third parameter: flags for each sorted column whether or not the sort is ascending</div>","submitted_at":1445290282000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":22},{"algo_id":4076,"object_id":"c1a4e311-aef6-11e4-840d-12f53eafe9d2","username":"yehancha","algoname":"Arbitrage","algolabel":"Arbitrage ","language":"java3","card_line":"Arbitrage finds the arbitrage combinations of currencies of a given currency rates.","summary":"<div>Arbitrage finds the arbitrage combinations of currencies of a given currency rates.</div><div><br/></div><div>For the possible <b>currency rates</b> of:</div><div><br/></div><div><table border=\"1\"><tbody><tr><td>USD</td> <td>1</td>     <td>0.741</td> <td> 0.657</td><td>1.061</td>  <td>1.005</td></tr>&#10;<tr><td>EUR</td> <td>1.349</td>  <td>1</td>      <td>0.888</td>  <td>1.433</td>  <td>1.366</td></tr>&#10;<tr><td>GBP</td> <td>1.521</td>  <td>1.126</td>  <td>1</td>      <td>1.614</td>  <td>1.538</td></tr>&#10;<tr><td>CHF</td> <td>0.942</td>  <td>0.698</td>  <td>0.619</td>  <td>1</td>      <td>0.953</td></tr>&#10;<tr><td>CAD</td> <td>0.995</td>  <td>0.732</td>  <td>0.650</td>  <td>1.049</td>  <td>1</td></tr></tbody></table></div><div><br/></div><div><div>the <b>input </b>shoul be:</div><div><br/></div><div>&#160; &#160; &#160;[</div><div>&#160; &#160; &#160; &#160; &#160;[1, 0.741, &#160;0.657, &#160;1.061, &#160;1.005],</div><div>&#160; &#160; &#160; &#160; &#160;[1.349,1, 0.888, &#160;1.433, &#160;1.366],</div><div>&#160; &#160; &#160; &#160; &#160;[1.521, &#160;1.126, &#160;1, 1.614, 1.538],</div><div>&#160; &#160; &#160; &#160; &#160;[0.942, 0.698, 0.619, 1,0.953],</div><div>&#160; &#160; &#160; &#160; &#160;[0.995, &#160;0.732,0.650,1.049,1]</div><div>&#160; &#160; &#160;]</div></div><div><br/></div><div>and the <b>output </b>would be:</div><div><br/></div><div>&#160; &#160; &#160;[</div><div>&#160; &#160; &#160; &#160; &#160; {&#34;combination&#34;:[1,3],&#34;profit&#34;:1.000234},</div><div><span>&#160; &#160; &#160; &#160; &#160;</span><span>&#160;</span>{&#34;combination&#34;:[3,1],&#34;profit&#34;:1.000234},</div><div><span>&#160; &#160; &#160; &#160; &#160;</span><span>&#160;</span>{&#34;combination&#34;:[0,1,2],&#34;profit&#34;:1.000830168},</div><div><span>&#160; &#160; &#160; &#160; &#160;</span><span>&#160;</span><span>{&#34;combination&#34;:[0,1,3],&#34;profit&#34;:1.000265526},</span></div><div><span>&#160; &#160; &#160; &#160; &#160;</span><span>&#160;</span><span>{&#34;combination&#34;:[0,1,4],&#34;profit&#34;:1.0071449700000001},</span></div><div><span>&#160; &#160; &#160; &#160; &#160;</span><span>&#160;</span><span>{&#34;combination&#34;:[0,2,4],&#34;profit&#34;:1.00541367},</span></div><div><span>&#160; &#160; &#160; &#160; &#160;</span><span>&#160;</span><span>{&#34;combination&#34;:[0,3,4],&#34;profit&#34;:1.0060773349999999},</span></div><div><span>&#160; &#160; &#160; &#160; &#160;</span><span>&#160;</span><span>{&#34;combination&#34;:[1,2,0],&#34;profit&#34;:1.0008301679999998},</span></div><div><span>&#160; &#160; &#160; &#160; &#160;</span><span>&#160;</span><span>{&#34;combination&#34;:[1,2,3],&#34;profit&#34;:1.0003959359999999},</span></div><div><span>&#160; &#160; &#160; &#160; &#160;</span><span>&#160;</span><span>{&#34;combination&#34;:[1,3,0],&#34;profit&#34;:1.000265526},</span></div><div><span>&#160; &#160; &#160; &#160; &#160;</span><span>&#160;</span><span>...</span></div><div><span>&#160; &#160; ]</span></div><div><br/></div><div><b>Output Explanation:</b></div><div><br/></div><div>The second combination tells changing USD -&gt; EUR -&gt; GBP -&gt; USD will give a 1.000830168 profit.</div>","submitted_at":1445290214000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":22},{"algo_id":720,"object_id":"03e86cf5-170f-11e4-b842-04011d260101","username":"ikkebr","algoname":"BogoSort","algolabel":"BogoSort","language":"java3","card_line":"Bogosort If bogosort were used to sort a deck of cards, it would consist of checking if the deck were in order, and if it were not, throwing the deck into the air, picking the card...","summary":"<div><h1 class=\"firstHeading\" lang=\"en\"><span dir=\"auto\">Bogosort</span></h1></div>If <b>bogosort</b> were used to sort a deck of cards, it would consist of checking if the deck were in order, and if it were not, throwing the deck into the air, picking the cards up at random, and repeating the process until the deck is sorted. Its name comes from the word bogus.","submitted_at":1445289660000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":22},{"algo_id":203,"object_id":"23c70ca9-9505-11e3-8351-040108385a01","username":"jgray","algoname":"UpperCaseString","algolabel":"UpperCaseString","language":"java3","card_line":"converts any string into all upper case","summary":"converts any string into all upper case","submitted_at":1445289610000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":22},{"algo_id":30758,"object_id":"4fc014b2-75c8-11e5-aae6-12ad1a8c1691","username":"touw22","algoname":"cotravelers","algolabel":"co-travelers","language":"java4","card_line":"This will tell you if two sets of \"travelers\" can possibly be traveling together.","summary":"<p>This will tell you if two sets of &#34;travelers&#34; can possibly be traveling together.  A traveler consists of a set of coordinates and times.  Right now this will only check a pair of travelers, a future version may allow several travelers and pick the ones that potentially are co-travelers.</p>","submitted_at":1445214964000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":22},{"algo_id":12524,"object_id":"c2de8611-cfef-11e4-abe1-12f53eafe9d2","username":"Etherno","algoname":"LoadDataFromBytes","algolabel":"LoadDataFromBytes","language":"java3","submitted_at":1433798262000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":22},{"algo_id":13775,"object_id":"e6d0b77a-e231-11e4-8df1-12f53eafe9d2","username":"cloncaric","algoname":"ModelCounting","algolabel":"ModelCounting","language":"java3","card_line":"Model counting is the task of counting the number of satisfying assignments for a boolean expression.","summary":"<a href=\"http://www.cs.cornell.edu/gomes/papers/ModelCounting-SAT-Handbook-prelim.pdf\">Model counting</a> is the task of counting the number of satisfying assignments for a boolean expression. <br/><br/>This implementation works by invoking an efficient <a href=\"https://algorithmia.com/algorithms/cloncaric/sat\">SAT solver</a> repeatedly, each time ruling out all previously-found models. It stops when the expression is no longer satisfiable.<br/><br/><b>Input:</b> the input is an expression over boolean variables. See <a href=\"https://algorithmia.com/algorithms/cloncaric/sat\">cloncaric/sat</a> for a description of the syntax.<br/><br/><b>Output: </b>the output is the number of satisfying assignments found.<br/>","submitted_at":1428968940000,"discoverable_world":true,"source_world":true,"license":"mit","call_count":22},{"algo_id":10308,"object_id":"1758aef7-cb27-11e4-abe1-12f53eafe9d2","username":"cmartines","algoname":"Chartie","algolabel":"Chartie","language":"java3","card_line":"See beyond the numbers The new free web API that finds the trend event from your numerical arrays For more detail : www.chartie.io","summary":"<h1><img src=\"http://chartie.io/img/chartie.png\"/><br/></h1><h1>See beyond the numbers</h1><h1><p class=\"lead top20\">The new free web API that finds the&#160;<span>trend event</span>&#160;from your&#160;<span>numerical arrays</span></p></h1><div class=\"row\"><div class=\"col-sm-12\"><p>For more detail : <a href=\"http://www.chartie.io\">www.chartie.io</a></p><h3>Features</h3><div class=\"list-group top20\"><div class=\"list-group-item\"><h4 class=\"list-group-item-heading\">Easy-to-use</h4><p class=\"list-group-item-text top10\">You don't have to be a data scientist to catch it. Chartie thoroughly works with&#160;<span>every kind of signal</span>&#160;and allows you to high level programming producing clear code.</p></div></div><div class=\"list-group\"><div class=\"list-group-item\"><h4 class=\"list-group-item-heading\">Trend detection</h4><p class=\"list-group-item-text top10\">You can detect&#160;<span>trend patterns</span>&#160;such as &#34;a slight rise&#34; or &#34;a strong rise preceded by a moderate fall&#34;. The program logics does not change if you change the signal.</p></div></div><div class=\"list-group\"><div class=\"list-group-item\"><h4 class=\"list-group-item-heading\">Performance</h4><p class=\"list-group-item-text top10\">Chartie can be queried from every programming language without loading your server and it is&#160;<span>fast</span>: many thousands of values processed in a few tens of milliseconds.</p></div></div></div></div>&#10;&#10;<div>&#10;                            <p>&#10;                                Thanks to our <a href=\"holonicAnalysis.php\">technololgy</a>, Chartie's output identifies the <b>relevant</b> trend in the input data.&#10;                            </p>&#10;                            <p class=\"top20\">&#10;                                Chartie employs these commonly used concepts:&#10;                            </p>                            &#10;                            <ul>&#10;                                <li>&#10;                                    <kbd>Rise</kbd> and <kbd>Fall</kbd>: representing the intuitive idea of signal increments and decrements&#10;                                </li>&#10;                                <li>&#10;                                    <kbd>Balanced</kbd>: armonious combination of rises and falls. A constant signal is an extreme example of such a case.&#10;                                </li>&#10;                            </ul>&#10;                            <p>&#10;                                Rise and fall words are enriched with these <strong>adjectives</strong>: slight, moderate, strong, very strong.&#10;                            </p>                                                        &#10;                        </div>","submitted_at":1426433084000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":22},{"algo_id":6209,"object_id":"e09dde2e-c138-11e4-840d-12f53eafe9d2","username":"joannetang","algoname":"SVD","algolabel":"SVD","language":"java3","card_line":"Reduced Singular Value Decomposition For more information on SVD, see: http://en.wikipedia.org/wiki/Singular_value_decomposition","summary":"<b><u>Reduced Singular Value Decomposition</u></b><div><br/></div><div>For more information on SVD, see:&#160;</div><div><a href=\"http://en.wikipedia.org/wiki/Singular_value_decomposition\">http://en.wikipedia.org/wiki/Singular_value_decomposition</a><br/></div><div><br/></div><div>Sample matrix comes from:</div><div><a href=\"http://web.mit.edu/be.400/www/SVD/Singular_Value_Decomposition.htm\">http://web.mit.edu/be.400/www/SVD/Singular_Value_Decomposition.htm</a><br/></div><div><br/></div><div>This algorithm computes the reduced singular value decomposition. For more information on the difference between reduced SVD and full SVD see:</div><div><a href=\"http://www.cs.cornell.edu/courses/cs322/2008sp/stuff/TrefethenBau_Lec4_SVD.pdf\">http://www.cs.cornell.edu/courses/cs322/2008sp/stuff/TrefethenBau_Lec4_SVD.pdf</a><br/></div><div><br/></div><div><b>Input:</b>&#160;Object of class <u>double[][]</u>&#160;representing the matrix to decompose</div><div><br/></div><div><b>Output:</b>&#160;Object of class <u>Map&lt;String,&#160;double[][]&gt;</u>&#160;containing 4 keys:</div><div>&#34;U&#34; -<span>&#160;m by n matrix with orthonormal columns,&#160;</span></div><div><span>&#34;Sigma&#34; -&#160;</span><span>n by n diagonal&#10;matrix,</span></div><div><span>&#34;V&#34; -&#160;</span><span>n by n unitary matrix with&#10;orthonormal columns,</span></div><div><span>&#34;singularValues&#34; - the singular values</span></div>&#160;<br/>","submitted_at":1445379470000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":21},{"algo_id":3212,"object_id":"231a295a-a2a8-11e4-be78-12e1fbfbf82c","username":"barcode","algoname":"BarcodeReader","algolabel":"Barcode Reader","language":"java3","card_line":"Takes a url in Algorithmia Data API format that identifies an image of a barcode (i.e.","summary":"Takes a url in Algorithmia Data API format that identifies an image of a barcode (i.e. data://util/GeneratedQRCodes/AZTECTest.png) and returns the encoded data (generally text or a number) if it can recognize and read the format. Currently supported formats include PDF 417, QR Codes, Code 128, and AZTEC.<div><br/></div><div>This is based on the zxing library (<a href=\"https://github.com/zxing/zxing\">https://github.com/zxing/zxing</a>).</div>","submitted_at":1445373975000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":21},{"algo_id":287,"object_id":"cdab84f9-9aad-11e3-8351-040108385a01","username":"codeb34v3r","algoname":"BinarySearch","algolabel":"BinarySearch","language":"java3","card_line":"Binary search on sorted Integer arrays.","summary":"Binary search on sorted Integer arrays. Returns the index of the item in the array. Returns -1 if it is not found.","submitted_at":1445289940000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":21},{"algo_id":2740,"object_id":"c82b3fee-9940-11e4-be78-12e1fbfbf82c","username":"TimeSeries","algoname":"ExponentialMovingAverage","algolabel":"Exponential Moving Average","language":"java3","card_line":"Takes a time series and returns the exponential moving average ( http://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average ).","summary":"Takes a time series and returns the exponential moving average (<a href=\"http://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average\">http://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average</a>). This can be used to smooth or denoise a time series. The user can optionally supply an alpha parameter (specifying how heavily the past is weighted) as second argument. If not supplied a default of 0.5 is used.","submitted_at":1430441384000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":21},{"algo_id":6088,"object_id":"de12e426-be23-11e4-840d-12f53eafe9d2","username":"paranoia","algoname":"AssignmentProblem","algolabel":"AssignmentProblem","language":"java3","card_line":"Solve the weighted bipartite matching problem, aka the \"assignment problem\"","summary":"Solve the weighted bipartite matching problem, aka the &#34;assignment problem&#34;","submitted_at":1445290969000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":20},{"algo_id":3918,"object_id":"5153fbf9-ac9d-11e4-840d-12f53eafe9d2","username":"WebPredict","algoname":"EvalArithExpression","algolabel":"EvalArithExpression","language":"java3","card_line":"Evaluates arithmetic expressions with nested parens and operator precedence for / and *.","summary":"Evaluates arithmetic expressions with nested parens and operator precedence for / and *. Only lighted tested so far :)","submitted_at":1445290369000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":20},{"algo_id":3964,"object_id":"3a1bba71-ad85-11e4-840d-12f53eafe9d2","username":"WebPredict","algoname":"PickRandomSubset","algolabel":"PickRandomSubset","language":"java3","card_line":"Picks a random subset of size k from a set of integers.","summary":"Picks a random subset of size k from a set of integers.","submitted_at":1445290316000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":20},{"algo_id":2701,"object_id":"b2bfe0fd-8f27-11e4-be78-12e1fbfbf82c","username":"cloncaric","algoname":"HamiltonianPath","algolabel":"Hamiltonian Path","language":"java3","card_line":"A Hamiltonian path on a directed graph is a path that visits every node exactly once.","summary":"A <a href=\"https://en.wikipedia.org/wiki/Hamiltonian_path\">Hamiltonian path</a> on a directed graph is a path that visits every node exactly once. This algorithm finds Hamiltonian paths on arbitrary graphs by converting the problem to an instance of <a href=\"https://en.wikipedia.org/wiki/Boolean_satisfiability_problem\">SAT</a> and invoking an efficient <a href=\"https://algorithmia.com/algorithms/cloncaric/sat\">SAT solver</a>.<br/><h3>Input</h3><p>This algorithm accepts a first argument (the graph) and an optional boolean second argument. If the second argument is true, a Hamiltonian cycle is returned. By default (or if the second argument is false), a Hamiltonian path is returned.</p><p>The graph is specified as an adjacency list---that is, a map where keys are vertex names (strings) and values are lists of neighbor vertices (strings). For example, the map { &#34;a&#34;: [&#34;b&#34;, &#34;c&#34;] } represents a graph with three vertices (a, b, and c) and two edges (a-&gt;b and a-&gt;c).</p><p>Note that the input graph is directed. To represent an undirected graph, just include both directions for every edge. Also note that self-edges and multi-edges are allowed, but for obvious reasons are never used in a Hamiltonian path.<br/></p><h3>Output</h3><p>The output is a list of vertex names forming a path. If a Hamiltonian cycle was requested, the first vertex is repeated at the end of the list. If a Hamiltonian path/cycle does not exist on the graph, null is returned.<br/></p>","submitted_at":1445289960000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":20},{"algo_id":302,"object_id":"a610333b-9cfd-11e3-8351-040108385a01","username":"kenny","algoname":"ThetaStar","algolabel":"Theta Star","language":"java3","card_line":"An implementation of the Theta* Any Angle Path Planning Algorithm.","summary":"An implementation of the&#160;Theta* Any Angle Path Planning Algorithm.","submitted_at":1445289562000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":20},{"algo_id":2692,"object_id":"496e2975-8a38-11e4-be78-12e1fbfbf82c","username":"Geo","algoname":"ZipData","algolabel":"ZipData","language":"java3","card_line":"Takes a zip code, returns various pieces of relevant data for that zipcode.","summary":"Takes a zip code, returns various pieces of relevant data for that zipcode. If not found, returns null.<div><br/></div><div>The data includes zip code, zip code type (standard or PO box), city (beware that some zip codes span multiple cities), state, latitude, longitude, whether or not the code is decommissioned, and estimated population.<br/><div><br/></div><div>Based on&#160;<a href=\"http://federalgovernmentzipcodes.us/\">http://federalgovernmentzipcodes.us/</a>, using data last updated 1/22/2012.</div></div>","submitted_at":1437613593000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":20},{"algo_id":3852,"object_id":"0a0c5ade-ac0c-11e4-840d-12f53eafe9d2","username":"sound","algoname":"ConvertSoundFile","algolabel":"ConvertSoundFile","language":"java3","card_line":"This algorithm converts a given sound file to the specified format.","summary":"This algorithm converts a given sound file to the specified format. First input is the location of the sound file (a Data url) and the second input is the target for saving the output (another Data url).<div><br/></div><div>Try this input:</div><div><br/></div><div><pre class=\"well well-sm ng-binding\">[&#34;data://sound/MediaCollection/thank_you_sound.wav&#34;,&#34;data://sound/MediaCollection/thank_you_sound_converted.mp3&#34;, &#34;pcm_s16le&#34;, &#34;1&#34;, &#34;16000&#34;]</pre></div>","submitted_at":1433796280000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":20},{"algo_id":14763,"object_id":"1c643961-ff79-11e4-89ff-123a3b0693f5","username":"karan","algoname":"whois","algolabel":"whois","language":"python2-2","card_line":"Extract whois information for a domain.","summary":"<p>Extract whois information for a domain.</p>","submitted_at":1432186737000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":20},{"algo_id":14546,"object_id":"8df4c4d2-f58b-11e4-89ff-123a3b0693f5","username":"Roos","algoname":"Remove_Duplicate_Words","algolabel":"Remove_Duplicate_Words","language":"java3","card_line":"Take in a duplicate string and return all unique words.","summary":"<p><span>Take in a duplicate string and return all unique words. (insensitive case)</span><br/></p>","submitted_at":1431096684000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":20},{"algo_id":9690,"object_id":"7999438d-ca7a-11e4-abe1-12f53eafe9d2","username":"kasemjaffer","algoname":"FullNameParser","algolabel":"Full Name Parser","language":"java3","card_line":"This algorithm extracts the the first name, middle name, last name and even the prefix and suffix from a given full name.","summary":"This algorithm&#160;extracts the the first name, middle name, last name and even the prefix and&#160;suffix from a given full name.","submitted_at":1426360174000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":20},{"algo_id":2921,"object_id":"9e7b7c6c-9dd5-11e4-be78-12e1fbfbf82c","username":"JaCoP","algoname":"BinaryIntegerProgramming","algolabel":"Binary Integer Programming","language":"java3","card_line":"This is an algorithm for binary integer programming (also known as 0-1 integer programming) built on the JaCoP Constraint Programming Solver ( https://github.com/radsz/jacop","summary":"This is an algorithm for binary integer programming (also known as 0-1 integer programming) built on the JaCoP Constraint Programming Solver (<a href=\"https://github.com/radsz/jacop\">https://github.com/radsz/jacop</a>). Binary integer programming is a restriction of integer programming in which variables are limited to being either 0 or 1. Read more about integer programming at <a href=\"https://en.wikipedia.org/wiki/Integer_programming\">https://en.wikipedia.org/wiki/Integer_programming</a>.&#160;It's arguments are<div><ol><li>A String array of variable names</li><li>An int vector c defining the cost of the returned solution via c^(T)x.</li><li>An int matrix (int[][]) that defines the matrix part of the linear constraints</li><li>A String array denoting the nature of each constraint, either &#34;&lt;&#34;,&#34;&gt;&#34;,&#34;&lt;=&#34;, or &#34;&gt;=&#34;.</li><li><span>An int array (in[]) defining the right hand side of the linear constraints.</span><br/></li></ol>The output is a Map&lt;String,Int&gt; containing each variable name as key and its value in the found solution as value. &#160;</div><div><br/></div><div>Note that this implementation is minimizing and uses branch-and-bound, which is to say, it minimizes c^(T)x. To maximize, change the signs of the integers in c. &#160;For more information consult the JaCoP documentation at&#160;<a href=\"http://jacopguide.osolpro.com/guideJaCoP.html#x1-510006\">http://jacopguide.osolpro.com/guideJaCoP.html#x1-510006</a>.</div>","submitted_at":1445373153000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":19},{"algo_id":6273,"object_id":"99084f91-c413-11e4-840d-12f53eafe9d2","username":"WebPredict","algoname":"GenerateHistogram","algolabel":"GenerateHistogram","language":"java3","card_line":"Creates a basic histogram with given number of bins, i.e., returns a data structure indicating how many data elements fell in which bucket, and the size of each bin.","summary":"Creates a basic histogram with given number of bins, i.e., returns a data structure indicating how many data elements fell in which bucket, and the size of each bin.","submitted_at":1445290365000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":19},{"algo_id":96,"object_id":"6775a5f6-8e3c-11e3-8351-040108385a01","username":"kryptos","algoname":"Hash","algolabel":"Hash","language":"java3","card_line":"Accepts any JSON input and returns a deterministic hash of the input.","summary":"Accepts any JSON input and returns a deterministic hash of the input.","submitted_at":1445289515000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":19},{"algo_id":1156,"object_id":"e7ea1289-3c90-11e4-8a15-04011d260101","username":"util","algoname":"Null","algolabel":"Null","language":"java3","card_line":"This algorithm returns null, no matter what.","summary":"This algorithm returns null, no matter what. Seems pretty clear.","submitted_at":1430446923000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":19},{"algo_id":2652,"object_id":"fb81847c-8704-11e4-be78-12e1fbfbf82c","username":"graph","algoname":"MinimalBipartitePerfectMatching","algolabel":"MinimalBipartitePerfectMatching","language":"java3","card_line":"Given a bipartite graph, finds the perfect matching with minimal cost.","summary":"Given a bipartite graph, finds the perfect matching with minimal cost.<div><div>Inputs:</div><div><ul><li>A graph represented as a map from vertices (strings) to a list of neighbors (list of strings)&#160;<b>OR</b>&#160;the url to the Data API file that holds the graph that you would like to be read (currently supported formats: GML)</li><li>First partition (list of strings)</li><li>Second partition (list of strings)</li></ul></div></div>","submitted_at":1430444283000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":19},{"algo_id":2603,"object_id":"df530311-84d0-11e4-be78-12e1fbfbf82c","username":"graph","algoname":"JEdmondsBlossomShrinking","algolabel":"JEdmondsBlossomShrinking","language":"java3","card_line":"Constructs maximum matchings in a graph using Edmonds' Blossom algorithm.","summary":"Constructs maximum matchings in a graph using Edmonds' Blossom algorithm.","submitted_at":1430444244000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":19},{"algo_id":2531,"object_id":"099fa6cf-82ce-11e4-be78-12e1fbfbf82c","username":"Joker","algoname":"testAlgor","algolabel":"testAlgor","language":"java3","submitted_at":1430050638000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":19},{"algo_id":13946,"object_id":"520115ce-e44f-11e4-849b-0670f2dc1320","username":"conctest","algoname":"Pipeline","algolabel":"Pipeline","language":"java3","submitted_at":1429203072000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":19},{"algo_id":13443,"object_id":"cc48b3e9-dd8d-11e4-8df1-12f53eafe9d2","username":"web","algoname":"PageRank","algolabel":"Page Rank","language":"java3","card_line":"Given a url, crawls the domain of that url and computes a normalized PageRank for each page based on links within the domain.","summary":"Given a url, crawls the domain of that url and computes a normalized PageRank for each page based on links within the domain. This is wrapper for&#160;<a href=\"https://algorithmia.com/algorithms/thatguy2048/PageRank\">https://algorithmia.com/algorithms/thatguy2048/PageRank</a>.","submitted_at":1428459843000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":19},{"algo_id":2333,"object_id":"60e1436d-79a6-11e4-bad7-04011d260101","username":"StanfordNLP","algoname":"DeterministicCoreferenceResolution","algolabel":"Deterministic Coreference Resolution","language":"java3","card_line":"This is built from the Stanford Deterministic Coreference Resolution System ( http://nlp.stanford.edu/software/dcoref.shtml ).","summary":"<div>This is built from the Stanford Deterministic Coreference Resolution System<span>&#160;(</span><a href=\"http://nlp.stanford.edu/software/dcoref.shtml\">http://nlp.stanford.edu/software/dcoref.shtml</a><span>). It takes text (as a String) as input and outputs a list of maps, in which each map contains the name of an entity (specifically, its most representative mention) as key and a list of other mentions of that entity as values. For instance, in the text &#34;Bob visited the university. He then enrolled.&#34; yields input [{&#34;Bob&#34;:[&#34;He&#34;]}], meaning the &#34;Bob&#34; is the most representative mention of the person Bob, and the later word &#34;He&#34; refers to the same entity.</span></div><div><span><br/></span></div><div><span>For more information, please refer to&#160;</span><a href=\"http://nlp.stanford.edu/software/corenlp.shtml\">http://nlp.stanford.edu/software/corenlp.shtml</a><span>&#160;or&#160;Manning, Christopher D., Surdeanu, Mihai, Bauer, John, Finkel, Jenny, Bethard, Steven J., and McClosky, David. 2014.&#160;</span><a href=\"http://nlp.stanford.edu/pubs/StanfordCoreNlp2014.pdf\">The Stanford CoreNLP Natural Language Processing Toolkit</a><span>. In&#160;</span><i>Proceedings of 52nd Annual Meeting of the Association for Computational Linguistics: System Demonstrations</i><span>, pp. 55-60.&#160;</span></div>","submitted_at":1428355202000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":19},{"algo_id":7239,"object_id":"0abb019f-c8ed-11e4-abe1-12f53eafe9d2","username":"miscbits","algoname":"SecretMessenger","algolabel":"SecretMessenger","language":"java3","card_line":"A simple encryption for messages.","summary":"A simple encryption for messages. To decrypt a message, use the <a href=\"https://algorithmia.com/algorithms/miscbits/DecodeMessage\">DecodeMessage Algorithm</a>","submitted_at":1426627241000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":19},{"algo_id":9864,"object_id":"15973c0d-ca98-11e4-abe1-12f53eafe9d2","username":"WayneS","algoname":"Calculator","algolabel":"Calculator","language":"python2-2","card_line":"Calculator with arbitrary precision Available operations ceil(x) floor(x) fabs(x) factorial(x) exp(x) log(x) log10(x) pow(x, y) sqrt(x) acos(x) asin(x) atan(x) atan2(y, x) cos(x) h...","summary":"<h2>Calculator with arbitrary precision</h2><br/><h3>Available operations</h3>ceil(x)<br/>floor(x)<br/>fabs(x)<br/>factorial(x)<br/>exp(x)<br/>log(x)<br/>log10(x)<br/>pow(x, y)<br/>sqrt(x)<br/>acos(x)<br/>asin(x)<br/>atan(x)<br/>atan2(y, x)<br/>cos(x)<br/>hypot(x, y)<br/>sin(x)<br/>tan(x)<br/>degrees(x)<br/>radians(x)<br/>acosh(x)<br/>asinh(x)<br/>atanh(x)<br/>cosh(x)<br/>sinh(x)<br/>tanh(x)<br/>erf(x)<br/>erfc(x)<br/>gamma(x)<br/><h3>On decimals</h3>.ln()<br/>.log10()<br/>.sqrt()<br/><h3>Exponention operator</h3>x ** y<br/>","submitted_at":1426372995000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":19},{"algo_id":286,"object_id":"bb6c4f9a-9aa7-11e3-8351-040108385a01","username":"codeb34v3r","algoname":"BinaryMerge","algolabel":"BinaryMerge","language":"java3","card_line":"A single threaded algorithm to union merge two integer arrays.","summary":"A single threaded algorithm to union merge two integer arrays. The arrays must be in sorted order, otherwise the behavior is undefined.","submitted_at":1445289944000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":18},{"algo_id":1284,"object_id":"f76ba91f-4606-11e4-8a15-04011d260101","username":"mattiasa","algoname":"sumtest","algolabel":"sumtest","language":"java3","submitted_at":1445289481000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":18},{"algo_id":30714,"object_id":"b2b5bc3d-7554-11e5-aae6-12ad1a8c1691","username":"opencv","algoname":"ColorsFromImage","algolabel":"Colors From Image","language":"python2-2","card_line":"Uses ColorThief  to extract a main color and a color palette from an image.","summary":"<p>Uses <a href=\"https://github.com/fengsp/color-thief-py\" style=\"color: rgb(153, 99, 255);background-color: rgb(255, 255, 255);\">ColorThief</a> to extract a main color and a color palette from an image.</p><p>Input the url and the number of colors to be extracted, returns the main color and a color palette accordingly.<br/></p>","submitted_at":1445146108000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":18},{"algo_id":14829,"object_id":"065016a8-049b-11e5-89ff-123a3b0693f5","username":"sfw","algoname":"TestNudityDetection","algolabel":"Test Nudity Detection","language":"java3","submitted_at":1432752896000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":18},{"algo_id":2732,"object_id":"1e46d53b-9925-11e4-be78-12e1fbfbf82c","username":"TimeSeries","algoname":"TimeSeriesSummary","algolabel":"TimeSeriesSummary","language":"java3","card_line":"Returns various statistics of the given time series.","summary":"Returns various statistics of the given time series. Note that if given a double[] it treats the data as uniformly spaced, but it can handle non-uniformly spaced data if given a width 2 double[][].","submitted_at":1430441543000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":18},{"algo_id":11032,"object_id":"602241d4-cd06-11e4-abe1-12f53eafe9d2","username":"SpaceCat","algoname":"OneDimensionalMidpointDisplacementTerrain","algolabel":"One Dimensional Midpoint Displacement Terrain","language":"java3","card_line":"This algorithm creates an array of unnormalized 32 bit float values that when rendered will resemble terrain.","summary":"This algorithm creates an array of unnormalized 32 bit float values that when rendered will resemble terrain. The inputs in the order they are to be sent:<br/><br/><b>octaves : int</b> -- the size of the array is 2^octaves + 1, so this value determines what power of two the array size will be. higher octaves interpolate more terrain, adding more detail.<br/><br/><b>startPointVal : float</b> -- the leftmost point in the array, along with endPointVal is used to determine other points values.<br/><br/><b>endPointVal : float</b> -- the rightmost point in the array. start and end points may be used to connect terrain pieces by matching end to start on subsequent terrains.<br/><br/><b>smoothingFactor : float</b> -- this determines the smoothness of the terrain. smoothingFactor &lt; 0.5 -&gt; rough, jagged, mountainous terrain. 0.5 &lt; smoothingFactor &lt; 0.9 -&gt; mixed, mountainous terrain. smoothingFactor &gt; 0.9 -&gt; smooth, rolling hills<br/><br/><b>seed : long</b> -- seed for the Java Random number generator. using the same seed will return the same terrain so this,&#160; along with the same start and end points, can be used to 'save' a favorite terrain<br/>","submitted_at":1426864252000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":18},{"algo_id":9178,"object_id":"71be7908-ca46-11e4-abe1-12f53eafe9d2","username":"mohammedsafwat","algoname":"TurtleTreeDrawing","algolabel":"TurtleTreeDrawing","language":"python2-2","card_line":"Draw a simple tree in python, by giving it the depth value.","summary":"Draw a simple tree in python, by giving it the depth value.<br/>","submitted_at":1426344992000,"discoverable_world":true,"source_world":true,"license":"mit","call_count":18},{"algo_id":3738,"object_id":"d1fe59a9-ab2f-11e4-840d-12f53eafe9d2","username":"zskurultay","algoname":"JOptimizer","algolabel":"JOptimizer","language":"java3","card_line":"This is a quick demo of 2D Linear Programming example found on http://www.joptimizer.com/linearProgramming.html .","summary":"This is a quick demo of 2D Linear Programming example found on&#160;<a href=\"http://www.joptimizer.com/linearProgramming.html\">http://www.joptimizer.com/linearProgramming.html</a>.&#160;<div><br/></div><div>The algorithm takes in the following parameters, with regard to the notation on the website linked above, where the problem definition:</div><div><br/></div><div><p>minimize<sub>x</sub>&#160;c<sup>T</sup>x+d&#160;&#160;s.t.&#160;<br/>&#160;&#160;&#160;&#160;Gx &#8804; h&#160;<br/>&#160;&#160;&#160;&#160;Ax = b,&#160;&#160;</p><p>where G &#8712;&#160;<b>R</b><sup>mXn</sup>&#160;and A &#8712;&#160;<b>R</b><sup>pXn</sup></p></div><div>is turned into:</div><div><br/></div><div><span>minimize</span><sub>x</sub><span>&#160;c</span><sup>T</sup><span>x+d&#160;&#160;s.t.&#160;</span><br/><span>&#160;&#160;&#160;&#160;Ax = b,&#160;&#160;&#160;</span><br/><span>&#160;&#160;&#160;&#160;lb &#8804; x &#8804; ub</span><br/></div><div><span><br/></span></div><div><span>So the parameters are:</span></div><div><br/></div><div><pre>[double[] c, double[][] G, double[] h, double[] lb, double[] ub]</pre><p><span><br/></span></p><p><span>Try passing in:</span><br/></p><div><div><font color=\"#000000\" face=\"Verdana, Helvetica, Arial, sans-serif\" size=\"2\"><span>[[-1.0, -1.0],&#160;</span></font></div><div><font color=\"#000000\" face=\"Verdana, Helvetica, Arial, sans-serif\" size=\"2\"><span>[[1.33, -1],[-0.5, 1.0], [-2.0, -1.0],[0.33, 1.0]],</span></font></div><div><font color=\"#000000\" face=\"Verdana, Helvetica, Arial, sans-serif\" size=\"2\"><span>[2.0, 0.5, 2.0, 0.5],</span></font></div><div><font color=\"#000000\" face=\"Verdana, Helvetica, Arial, sans-serif\" size=\"2\"><span>[0, 0],</span></font></div><div><font color=\"#000000\" face=\"Verdana, Helvetica, Arial, sans-serif\" size=\"2\"><span>[10, 10]]</span></font></div></div></div>","submitted_at":1445375721000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":17},{"algo_id":3914,"object_id":"79ad76ea-ac8d-11e4-840d-12f53eafe9d2","username":"WebPredict","algoname":"WordFrequencies","algolabel":"WordFrequencies","language":"java3","card_line":"Computes word frequencies for a given input text.","summary":"Computes word frequencies for a given input text. Takes text, max # of results, whether or not to ignore capitalization, and whether or not to sort from highest frequency to lowest or vice versa in resulting list of word frequencies. Strips off punctuation for all words in the text. For example: [&#34;This is the test of the service.&#34;, 3, true, true] returns [{&#34;word&#34;:&#34;the&#34;,&#34;frequency&#34;:2},{&#34;word&#34;:&#34;test&#34;,&#34;frequency&#34;:1},{&#34;word&#34;:&#34;service&#34;,&#34;frequency&#34;:1}].","submitted_at":1445290252000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":17},{"algo_id":1972,"object_id":"090340d1-6c55-11e4-bad7-04011d260101","username":"weka","algoname":"CsvToArff","algolabel":"CsvToArff","language":"java3","card_line":"Converts .csv","summary":"<p>Converts .csv type files to .arff type files. Please give two inputs, the first one a Data API url to a .csv file, the second the destination for the .arff to be written.</p>","submitted_at":1443939964000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":17},{"algo_id":15059,"object_id":"32757356-0fa4-11e5-89ff-123a3b0693f5","username":"williamaustinwebb","algoname":"AuthTest","algolabel":"Auth Test","language":"java3","submitted_at":1433963515000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":17},{"algo_id":14336,"object_id":"4e0bb5ee-ee94-11e4-849b-0670f2dc1320","username":"s3utilities","algoname":"GetBucketInformation","algolabel":"Get Bucket Information","language":"python2-2","card_line":"This algorithm gets information about an AWS S3 bucket (size and ACL info).","summary":"<p>This algorithm gets information about an AWS S3 bucket (size and ACL info). The input is a Data API URL pointing to a file that has the bucket name, access key ID and secret access key in separate lines.</p>","submitted_at":1432659317000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":17},{"algo_id":2602,"object_id":"8886551a-84d0-11e4-be78-12e1fbfbf82c","username":"graph","algoname":"JKShortestPaths","algolabel":"JKShortestPaths","language":"java3","card_line":"Determines the k shortest simple paths in increasing order of weight.","summary":"<span>Determines the k shortest simple paths in increasing order of weight.</span><div><span><br/></span></div><div><div>Inputs:</div><div><ul><li>A graph represented as a map from vertices (strings) to a list of neighbors (list of strings)&#160;<b>OR</b>&#160;the url to the Data API file that holds the graph that you would like to be read (currently supported formats: GML)</li><li>Start vertex (string)</li><li>End vertex (string)</li><li>k (int)</li></ul></div></div>","submitted_at":1430444255000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":17},{"algo_id":14120,"object_id":"f3ffc267-e79d-11e4-849b-0670f2dc1320","username":"translation","algoname":"YandexTranslate","algolabel":"Yandex Translate","language":"python2-2","card_line":"This algorithm uses Yandex API to translate your text.","summary":"<div><font color=\"#000000\" face=\"Arial, Helvetica, sans-serif\"><span>This algorithm uses Yandex API to translate your text. Please give the input as a json object, 'to' and 'text' fields are mandatory. If 'from' is not specified, Yandex tries to detect the origin language before performing the translation. The supported languages are:</span></font></div><div><font color=\"#000000\" face=\"Arial, Helvetica, sans-serif\"><span><br/></span></font></div><div><table><tbody><tr><th>Language</th><th>Code</th></tr><tr><td>Albanian</td><td>sq</td></tr><tr><td>Arabian</td><td>ar</td></tr><tr><td>Armenian</td><td>hy</td></tr><tr><td>Azeri</td><td>az</td></tr><tr><td>Belarusian</td><td>be</td></tr><tr><td>Bosnian</td><td>bs</td></tr><tr><td>Bulgarian</td><td>bg</td></tr><tr><td>Catalan</td><td>ca</td></tr><tr><td>Croatian</td><td>hr</td></tr><tr><td>Czech</td><td>cs</td></tr><tr><td>Chinese</td><td>zh</td></tr><tr><td>Danish</td><td>da</td></tr><tr><td>Dutch</td><td>nl</td></tr><tr><td>English</td><td>en</td></tr><tr><td>Estonian</td><td>et</td></tr><tr><td>Finnish</td><td>fi</td></tr><tr><td>French</td><td>fr</td></tr><tr><td>Georgian</td><td>ka</td></tr><tr><td>German</td><td>de</td></tr><tr><td>Greek</td><td>el</td></tr><tr><td>Hebrew</td><td>he</td></tr><tr><td>Hungarian</td><td>hu</td></tr><tr><td>Icelandic</td><td>is</td></tr><tr><td>Indonesian</td><td>id</td></tr><tr><td>Italian</td><td>it</td></tr><tr><td>Japanese</td><td>ja</td></tr><tr><td>Korean</td><td>ko</td></tr><tr><td>Latvian</td><td>lv</td></tr><tr><td>Lithuanian</td><td>lt</td></tr><tr><td>Macedonian</td><td>mk</td></tr><tr><td>Malay</td><td>ms</td></tr><tr><td>Maltese</td><td>mt</td></tr><tr><td>Norwegian</td><td>no</td></tr><tr><td>Polish</td><td>pl</td></tr><tr><td>Portuguese</td><td>pt</td></tr><tr><td>Romanian</td><td>ro</td></tr><tr><td>Russian</td><td>ru</td></tr><tr><td>Spanish</td><td>es</td></tr><tr><td>Serbian</td><td>sr</td></tr><tr><td>Slovak</td><td>sk</td></tr><tr><td>Slovenian</td><td>sl</td></tr><tr><td>Swedish</td><td>sv</td></tr><tr><td>Thai</td><td>th</td></tr><tr><td>Turkish</td><td>tr</td></tr><tr><td>Ukrainian</td><td>uk</td></tr><tr><td>Vietnamese</td><td>vi</td></tr></tbody></table></div><strong></strong><div><strong><br/></strong></div>Powered by Yandex.Translate:<span>&#160;</span><a target=\"_blank\" href=\"http://translate.yandex.com/\">http://translate.yandex.com/</a>","submitted_at":1429564333000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":17},{"algo_id":13465,"object_id":"2f5cbe0a-de13-11e4-8df1-12f53eafe9d2","username":"web","algoname":"CrawlAndPageRank","algolabel":"Crawl And Page Rank","language":"java3","card_line":"Given a url, crawls the domain of that url and computes a normalized PageRank for each page based on links within the domain.","summary":"Given a url, crawls the domain of that url and computes a normalized PageRank for each page based on links within the domain. This is wrapper for&#160;<a href=\"https://algorithmia.com/algorithms/thatguy2048/PageRank\">https://algorithmia.com/algorithms/thatguy2048/PageRank</a>.","submitted_at":1428513716000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":17},{"algo_id":13334,"object_id":"0e6f5243-da1c-11e4-8df1-12f53eafe9d2","username":"acrogenesis","algoname":"calcularrfc","algolabel":"calcular-rfc","language":"java3","card_line":"API to calculate Registro Federal de Contribuyentes (RFC)","summary":"API to calculate&#160;Registro Federal de Contribuyentes (RFC)","submitted_at":1428094768000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":17},{"algo_id":11065,"object_id":"4c117c86-cd48-11e4-abe1-12f53eafe9d2","username":"jotavaladouro","algoname":"LuhnCode","algolabel":"LuhnCode","language":"java3","card_line":"Return the luhn code of the input","summary":"Return the luhn code of the &#160;input","submitted_at":1426751701000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":17},{"algo_id":11007,"object_id":"1bee8091-ccef-11e4-abe1-12f53eafe9d2","username":"laishidua","algoname":"ExpectedRiskValue","algolabel":"ExpectedRiskValue","language":"java3","card_line":"This class defines the expected rate value based of a risk.","summary":"This class defines the expected rate value based of a risk. We use the next formula:<br/><br/>E(R) = [(p(P))] - [(1-p)(L)]<br/><br/>The expectative consist of certain probabilities of win or loss and the amount of the factors <br/>that you win or loss. If the rate of return if is &gt; 0, We can win depending of the risk.<br/><br/>E(R) is calculated in term of each individual game.<br/>p = probability of win.<br/>1-p = probability of loss.<br/>P = win factor.<br/>L = loss factor.<br/><br/>Examples:<br/>&#160;1.- I am going to flipping a coin, if the coin gets head I win $10, else I loss $10.<br/>&#160;&#160;&#160;&#160; Will I take the risk?<br/>&#160;&#160;&#160;&#160;&#160; E(R) = (0.5*10) - (1-0.5)(10) = 0 <br/>&#160;&#160;&#160;&#160;&#160; So I wont. because the rate of return is 0, there is no money!!<br/>&#160;&#160;&#160;&#160;&#160; INPUT: [0.5, 1, 1]<br/><br/>&#160;2.- If I win I get $2, else I loss $1. I have 60% probability to loss and 40% of win.<br/>&#160;&#160;&#160;&#160;&#160; E(R) = (0.4*2) - (1-0.4)(1) = 0.2 <br/>&#160;&#160;&#160;&#160;&#160; So the average rate of return is $0.20 each game. Maybe I will.<br/>&#160;&#160;&#160;&#160;&#160; INPUT: [0.4, 2, 1]<br/><br/>&#160; 3.- I win $2 if the thin wrestler win, else $1 if fat wrestler win. <br/>&#160;&#160;&#160;&#160;&#160;&#160; If thin wrestler has 30% probability to win. <br/>&#160;&#160;&#160;&#160;&#160; Will I take the risk for this wrestling?<br/>&#160;&#160;&#160;&#160;&#160;&#160; E(R) = (0.3*2) - (1-0.3)(1) = 0.6 - 0.7 = -0.1<br/>&#160;&#160;&#160;&#160;&#160; So I wont. I loss -0.1 each game, so If I play 100 times -&gt; 100-0.1=10. I could loss $10 <br/>&#160;&#160;&#160;&#160;&#160; INPUT: [0.3, 2, 1]","submitted_at":1426644104000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":17},{"algo_id":316,"object_id":"e2a900e4-a383-11e3-8351-040108385a01","username":"codeb34v3r","algoname":"CarBrands","algolabel":"CarBrands","language":"java3","card_line":"A lookup service for car brands by categories: \"popular\": [\"Toyota\",\"Honda\",\"Mazda\",\"Subaru\",\"Nissan\",\"KIA\",\"Hyundai\",\"Mitsubishi\",\"VW\",\"Audi\",\"Mercedes-Benz\",\"BMW\",\"Tesla\",\"Lexus\"...","summary":"A lookup service for car brands by categories:<div><br></div><pre>\"popular\": [\"Toyota\",\"Honda\",\"Mazda\",\"Subaru\",\"Nissan\",\"KIA\",\"Hyundai\",\"Mitsubishi\",\"VW\",\"Audi\",\"Mercedes-Benz\",\"BMW\",\"Tesla\",\"Lexus\",\"Porsche\",\"Acura\",\"Infiniti\",\"Jaguar\",\"Mini\",\"Cadillac\",\"Jeep\",\"Ford\",\"Chevrolet\",\"Chrysler\",\"Buick\"]</pre><div><br></div><pre>\"japanese\":[\"Daihatsu\",\"Honda\",\"Mazda\",\"Mitsubishi\",\"Nissan\",\"Subaru\",\"Suzuki\",\"Toyota\"]</pre><div><br></div><pre>\"premium\":&nbsp;[\"Tesla\",\"Ferrari\",\"Maserati\",\"Lamborghini\",\"Lotus\",\"Porsche\",\"Lexus\",\"Mercedes-Benz\",\"BMW\",\"Infiniti\",\"Acura\",\"Cadillac\",\"Bentley\",\"Jaguar\"]</pre><div><br></div><pre>\"european\":&nbsp;[\"Audi\",\"BMW\",\"Mercedes-Benz\",\"Maserati\",\"Ferrari\",\"Bentley\",\"Jaguar\",\"Lotus\",\"Lamborghini\",\"Opel\",\"VW\"]</pre>","submitted_at":1445289936000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":16},{"algo_id":293,"object_id":"babefa95-9abf-11e3-8351-040108385a01","username":"codeb34v3r","algoname":"CountSetBits","algolabel":"CountSetBits","language":"java3","card_line":"A function to count the number of set bits of a given integer.","summary":"<p>A function to count the number of set bits of a given integer.</p>","submitted_at":1445289932000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":16},{"algo_id":2295,"object_id":"6e93ed48-7462-11e4-bad7-04011d260101","username":"mlolson","algoname":"LinearRegression","algolabel":"LinearRegression","language":"java3","submitted_at":1445289430000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":16},{"algo_id":14768,"object_id":"edb5d1e1-ffc6-11e4-89ff-123a3b0693f5","username":"WebPredict","algoname":"GetNthLatticePoint","algolabel":"GetNthLatticePoint","language":"java3","card_line":"Produces the Nth lattice point (starting at 0), for spiral square lattice points on an integer grid.","summary":"<p>Produces the Nth lattice point (starting at 0), for spiral square lattice points on an integer grid.</p><ul><li>Point 0 is (0,0)</li><li>Point 1 is (1,0)</li><li>Point 2 is (1, -1)</li><li>Point 3 is (0, -1)</li><li>Point 4 is (-1, -1)</li><li>Point 5 is (-1, 0)</li><li>Point 6 is (-1, 1)</li><li>...</li></ul>","submitted_at":1432241264000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":16},{"algo_id":13772,"object_id":"950c7427-e228-11e4-8df1-12f53eafe9d2","username":"sklearn","algoname":"TopicExtraction","algolabel":"Topic Extraction","language":"python2-2","card_line":"Topics extraction with Non-Negative Matrix Factorization This is a proof of concept application of Non Negative Matrix Factorization of the term frequency matrix of a corpus of doc...","summary":"<h1>Topics extraction with Non-Negative Matrix Factorization<a class=\"headerlink\" href=\"http://scikit-learn.org/stable/auto_examples/applications/topics_extraction_with_nmf.html#topics-extraction-with-non-negative-matrix-factorization\" title=\"Permalink to this headline\"></a></h1><p>This is a proof of concept application of Non Negative Matrix Factorization of the term frequency matrix of a corpus of documents so as to extract an additive model of the topic structure of the corpus. The output is a list of topics, each represented as a list of terms (weights are not shown).</p><p>The default parameters (n_samples / n_features / n_topics) should make the example runnable in a couple of tens of seconds. You can copy this algorithm and try to increase the dimensions of the problem, but be aware than the time complexity is polynomial.</p><p>Taken from:&#160;<a href=\"http://scikit-learn.org/stable/auto_examples/applications/topics_extraction_with_nmf.html\">http://scikit-learn.org/stable/auto_examples/applications/topics_extraction_with_nmf.html</a></p>","submitted_at":1428962969000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":16},{"algo_id":13699,"object_id":"e092265a-e0fb-11e4-8df1-12f53eafe9d2","username":"Drabor","algoname":"prime_factorization","algolabel":"prime_factorization","language":"python2-2","card_line":"List of the integer's prime factors.","summary":"List of the integer's prime factors.","submitted_at":1428912966000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":16},{"algo_id":7345,"object_id":"1410836d-c8f4-11e4-abe1-12f53eafe9d2","username":"audio","algoname":"Fft","algolabel":"Fft","language":"java3","card_line":"Fast Fourier Transform for 1-dimensional, real input data (audio or other time series).","summary":"Fast Fourier Transform for 1-dimensional, real input data (audio or other time series). Returns transformed complex data in interleaved format (Real_00, Imag_00, Real_01, Imag_01). For even-length input, output[1] equals Real[length/2], for odd-length input, output[1] equals Imag[(length-1)/2].","submitted_at":1426194670000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":16},{"algo_id":6323,"object_id":"0fd77f5c-c6ff-11e4-abe1-12f53eafe9d2","username":"diego","algoname":"Test","algolabel":"Test","language":"java3","submitted_at":1426092282000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":16},{"algo_id":3862,"object_id":"25b3cdb1-ac16-11e4-840d-12f53eafe9d2","username":"WebPredict","algoname":"RomanNumeral","algolabel":"RomanNumeral","language":"java3","card_line":"Returns the roman numeral for the given integer, up to 4000.","summary":"Returns the roman numeral for the given integer, up to 4000.","submitted_at":1445290294000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":15},{"algo_id":16613,"object_id":"f06b9730-58c3-11e5-aae6-12ad1a8c1691","username":"kasandell","algoname":"Summarizer","algolabel":"Summarizer","language":"python2-2","card_line":"Summarizer is an algorithm that takes in data and json format and returns a summary and key terms from the text.","summary":"<p>Summarizer is an algorithm that takes in data and json format and returns a summary and key terms from the text. The json object the algorithm takes needs 4 fields:</p><p>text: a string containing the text you want summarized</p><p>summaryLength: a floating point number, less than or equal to one, which represents a percentage of the text length you want the summary to be</p><p>keyTermsWanted: a boolean, with true meaning you want the key terms from the algorithm, and false meaning you don't</p><p>numKeyTerms: an integer, representing the number of key terms you want from the text.</p><p><br/></p><p>The output returns a json object with 1 or two fields, depending on if you want the key terms. The object contains:</p><p>summary: a list, containing the strings that make up the summary. The sentences are ranked in order of importance; the first sentence is the most important. This is guaranteed to be part of the returned object.</p><p>keyTerms: a list, containing the number of key terms requested, if they are requested. The key terms are ranked in order of importance; the first term is the most important. This is only part of the returned json object if 'keyTermsWanted' is true in the input json object.</p><p><br/></p><p>Below is an easy to use json object that you only need to paste the variables into to use.</p><p>&#34;{\\&#34;text\\&#34;: \\&#34;&lt;TEXT&gt;\\&#34;, \\&#34;summaryLength\\&#34;: &lt;floatingPointPercentage&gt;, \\&#34;keyTermsWanted\\&#34;: &lt;boolean&gt;, \\&#34;numKeyTerms\\&#34;: &lt;numberOfKeyTerms&gt;}&#34;<br/></p><p><br/></p>","submitted_at":1442897624000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":15},{"algo_id":2681,"object_id":"33eacf00-8a35-11e4-be78-12e1fbfbf82c","username":"Geo","algoname":"ZipToLatLong","algolabel":"ZipToLatLong","language":"java3","card_line":"Takes a zip code, returns a central lat,long for that zipcode.","summary":"Takes a zip code, returns a central lat,long for that zipcode. If not found, returns null. Note that the returned lat,long is generally only to two decimal points, so can't be counted on to place with high accuracy (i.e. within about 70 miles).<div><br/></div><div>Based on&#160;<a href=\"http://federalgovernmentzipcodes.us/\">http://federalgovernmentzipcodes.us/</a>, using data last updated 1/22/2012.</div>","submitted_at":1437611899000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":15},{"algo_id":15615,"object_id":"35c6bca1-28ba-11e5-a825-06910d997133","username":"rajunitald","algoname":"EmailAddressGenerator","algolabel":"EmailAddressGenerator","language":"java3","card_line":"This is a email Address generator.","summary":"<p>This is a email Address generator. which takes name and URL as user Input.</p><p>Ex.</p><p>Joe root as Name or <span style=\"color: rgb(0, 0, 0);text-align: left;float: none;background-color: rgb(249, 249, 249);\">Iker Casillas Fernández as Name</span></p><p>www. abc.com as URL and it returns a list of possible username</p><p><br/></p>","submitted_at":1436726318000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":15},{"algo_id":15520,"object_id":"16e3a53d-21c5-11e5-a825-06910d997133","username":"Besser","algoname":"DiacriticsRemover","algolabel":"DiacriticsRemover","language":"java3","card_line":"Remove diacritics from string.","summary":"<p>Remove diacritics from string.<br/></p>","submitted_at":1435959268000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":15},{"algo_id":9009,"object_id":"9d1ff1eb-c9ed-11e4-abe1-12f53eafe9d2","username":"paulolc","algoname":"Knapsack","algolabel":"Knapsack","language":"java3","submitted_at":1426298954000,"discoverable_world":true,"source_world":false,"license":"gpl3","call_count":15},{"algo_id":6268,"object_id":"88b48b5e-c3b9-11e4-840d-12f53eafe9d2","username":"thatguy2048","algoname":"MoveToFront","algolabel":"Move To Front","language":"java3","card_line":"This is an implementation of the move-to-front transform .","summary":"This is an implementation of the <a href=\"http://en.wikipedia.org/wiki/Move-to-front_transform\">move-to-front transform</a>. This is useful when combined with <a href=\"https://algorithmia.com/algorithms/thatguy2048/BurrowsWheeler\">Burrow-Wheeler Transform</a> before compression of data. This transform only works on a string of ASCII characters.<div><br/>&#160; &#10;&#10;<table>&#10;<tbody><tr>&#10;<td><b>Sample Input</b></td>&#10;<td>&#160;&#160;&#160;&#160;</td>&#10;<td><b>Sample Output</b></td>&#10;</tr>&#10;<tr><td><pre>[110,0,99,99,0,0]</pre></td>&#10;<td>&#160;&#160;&#160;&#160;</td>&#10;<td><pre>&#34;nnbaaa&#34;</pre></td>&#10;</tr><tr>&#10;</tr>&#10;</tbody></table></div>","submitted_at":1445290518000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":14},{"algo_id":1298,"object_id":"2f40f616-49ca-11e4-b63d-04011d260101","username":"zskurultay","algoname":"CaptchaValidate","algolabel":"CaptchaValidate","language":"java3","card_line":"Algorithm for validating the input of the user for a given Captcha","summary":"Algorithm for validating the input of the user for a given Captcha","submitted_at":1445289126000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":14},{"algo_id":14693,"object_id":"b16765f7-fc93-11e4-89ff-123a3b0693f5","username":"WebPredict","algoname":"FindNumbersThatSumTo","algolabel":"FindNumbersThatSumTo","language":"java3","card_line":"Returns the indices of two numbers in an array that add to a specified number, or null if there are no such numbers.","summary":"<p>Returns the indices of two numbers in an array that add to a specified number, or null if there are no such numbers. Indices are zero based.</p>","submitted_at":1432678489000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":14},{"algo_id":14727,"object_id":"f084c26c-fe24-11e4-89ff-123a3b0693f5","username":"ovi_mihai","algoname":"GrownUpDecisionMaker","algolabel":"Grown Up Decision Maker","language":"python2-2","card_line":"Make a decision like a Grown Up","summary":"<p>Make a decision like a Grown Up</p>","submitted_at":1432040005000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":14},{"algo_id":101,"object_id":"6775a861-8e3c-11e3-8351-040108385a01","username":"freddyH","algoname":"Finance_NumberOfPeriods","algolabel":"Finance Number Of Periods","language":"java3","card_line":"NPER(rate, PMT, PV, FV, type).","summary":"NPER(rate, PMT, PV, FV, type).\nReturns the number of periods for an investment based on periodic,constant payments and a constant interest rate.&nbsp;<div>&nbsp;* Rate is the periodic interest rate.&nbsp;</div><div>&nbsp;* PMT is the constant annuity paid in each period.&nbsp;</div><div>&nbsp;* PV is the present value (cash value) in a sequence of payments.&nbsp;</div><div>&nbsp;* FV (optional) is the future value, which is reached at the end of the last period.&nbsp;</div><div>&nbsp;* Type (optional) defines whether the payment is due at the beginning (1) or the end (0) of a period.</div>","submitted_at":1430447414000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":14},{"algo_id":63,"object_id":"67759a4c-8e3c-11e3-8351-040108385a01","username":"kenny","algoname":"SummaryStats","algolabel":"Summary Stats","language":"java3","submitted_at":1430446593000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":14},{"algo_id":2742,"object_id":"e11137bb-9a23-11e4-be78-12e1fbfbf82c","username":"TimeSeries","algoname":"FourierFilter","algolabel":"Fourier Filter","language":"java3","card_line":"This algorithm takes a time series and two parameter k and j.","summary":"<div><div>This algorithm takes a time series and two parameter k and j. It takes the Fourier transform of the series, zeroes out the top k lowest frequencies and j highest freqencies, and maps the result back into a time series with an inverse Fourier transform.</div><div><br/></div><div>This is intended to act as a filter, high pass if j is 0, low pass is k is 0, and band pass if neither is 0. See&#160;<a href=\"http://en.wikipedia.org/wiki/Band-pass_filter\">http://en.wikipedia.org/wiki/Band-pass_filter</a>&#160;for more information on the ideas behind filtering.</div><div><br/></div><div>This is a speculative algorithm for filtering - use it for exploratory analysis but try not to draw too many conclusions unless you corroborate with other methods.</div></div><div><br/></div><div>This is based on an implementation of the Fast Fourier Transform (in this the real Fourier Transform in the JTranforms library -&#160;<a href=\"https://sites.google.com/site/piotrwendykier/software/jtransforms\">https://sites.google.com/site/piotrwendykier/software/jtransforms</a>) Note that there are many different conventions used in signal processing, so be careful as the ones chosen here may not be the ones you need.&#160;<br/></div>","submitted_at":1430441471000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":14},{"algo_id":11744,"object_id":"0b8f7ec4-ce6e-11e4-abe1-12f53eafe9d2","username":"leonardosapiras","algoname":"Bubblesort","algolabel":"Bubblesort","language":"python2-2","submitted_at":1426794877000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":14},{"algo_id":10295,"object_id":"303dfcc6-cb22-11e4-abe1-12f53eafe9d2","username":"cmartines","algoname":"test","algolabel":"test","language":"java3","submitted_at":1426432741000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":14},{"algo_id":3214,"object_id":"2aa4020d-a2aa-11e4-be78-12e1fbfbf82c","username":"barcode","algoname":"QRCodeReader","algolabel":"QR Code Reader","language":"java3","card_line":"Takes a url in Algorithmia Data API format that identifies an image of a barcode (i.e.","summary":"Takes a url in Algorithmia Data API format that identifies an image of a barcode (i.e. data://util/GeneratedQRCodes/qrCodeTest.png) and returns the encoded data (generally text or a number) if it can recognize and read the format. This algorithm is designated for QR Codes but can also read some other formats.<div><br/></div><div>This is based on the zxing library (<a href=\"https://github.com/zxing/zxing\">https://github.com/zxing/zxing</a>).</div>","submitted_at":1445373606000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":13},{"algo_id":6159,"object_id":"2b04e940-bf5c-11e4-840d-12f53eafe9d2","username":"Aluxian","algoname":"AssignmentProblemWeightedBipartiteMatching","algolabel":"Assignment Problem (Weighted Bipartite Matching)","language":"java3","card_line":"The assignment problem is one of the fundamental combinatorial optimization problems in the branch of optimization or operations research in mathematics.","summary":"<p class=\"first-paragraph\">The assignment problem is one of the fundamental combinatorial optimization problems in the branch of optimization or operations research in mathematics. It consists of finding a maximum weight matching in a weighted bipartite graph.</p><p class=\"first-paragraph\">In its most general form, the problem is as follows:</p><blockquote>There are a number of agents and a number of tasks. Any agent can be assigned to perform any task, incurring some cost that may vary depending on the agent-task assignment. It is required to perform all tasks by assigning exactly one agent to each task and exactly one task to each agent in such a way that the total cost of the assignment is minimized.</blockquote><p class=\"first-paragraph\">If the numbers of agents and tasks are equal and the total cost of the assignment for all tasks is equal to the sum of the costs for each agent (or the sum of the costs for each task, which is the same thing in this case), then the problem is called the linear assignment problem. Commonly, when speaking of the assignment problem without any additional qualification, then the linear assignment problem is meant.</p><p class=\"first-paragraph\">This API is based on <a href=\"https://github.com/KevinStern/software-and-algorithms/blob/master/src/main/java/blogspot/software_and_algorithms/stern_library/optimization/HungarianAlgorithm.java\">this Hungarian Algorithm implementation</a>.</p><p class=\"first-paragraph\"><i><b>The complexity is N<font color=\"#333333\" face=\"Open Sans, Helvetica Neue, Helvetica, Arial, sans-serif\"><span>^3</span></font></b><span>.</span></i><br/></p><p class=\"first-paragraph\"><b>Example</b></p><p class=\"first-paragraph\">Say you have three workers: Jim, Steve, and Alan. You need to have one of them clean the bathroom, another sweep the floors, and the third wash the windows. What&#8217;s the best (minimum-cost) way to assign the jobs? First we need a matrix of the costs of the workers doing the jobs:</p><table class=\"wikitable\" border=\"1\"><tbody><tr><th></th><th>Clean bathroom</th><th>Sweep floors</th><th>Wash windows</th></tr><tr><td>Jim</td><td>$3</td><td>$3</td><td>$3</td></tr><tr><td>Steve</td><td>$3</td><td>$2</td><td>$3</td></tr><tr><td>Alan</td><td>$3</td><td>$3</td><td>$2</td></tr></tbody></table><div><br/></div><div>When applied to the above table, the algorithm gives the minimum cost it can be done with: Jim&#160;<span>washes the windows</span><span>, Steve sweeps the floors, and Alan&#160;</span><span>cleans the bathroom</span><span>.</span></div><div><span><br/></span></div><div><b>Input</b></div><div><br/></div><div>A weighted graph in the form Map&lt;String, Map&lt;String, Double&gt;&gt;, in which each key is a node name, and its value is a map that links each neighbour to the weight (which may be positive, negative, or zero) of the edge connecting the two. If node B does not appear in the map corresponding to node A, the weight of the edge connecting them is assumed to be zero.</div><div><br/></div><div><b><i>Note: in the list you can include all the nodes (like in the example), or only those in one group of the bipartite graph (in the example this'd mean that it's enough to specify the Jim, Steve and Alan keys).</i></b></div><div><br/></div><div><b>Output</b></div><div><br/></div><div>An object with two keys:</div><div><ul><li><span><b>assignment</b>: this is a&#160;</span>Map&lt;String, String&gt;, in which&#160;each key is a node and its value is the name of the node it is assigned to<br/></li><li><span><b>weight</b>: the total weight of the matches</span></li></ul></div>","submitted_at":1445292246000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":13},{"algo_id":3303,"object_id":"db8dfbf4-a5d5-11e4-be78-12e1fbfbf82c","username":"lpezet","algoname":"Ping","algolabel":"Ping","language":"java3","submitted_at":1445291292000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":13},{"algo_id":4968,"object_id":"4962198c-b6d3-11e4-840d-12f53eafe9d2","username":"MadDenker","algoname":"LoadCurve1","algolabel":"LoadCurve1","language":"java3","card_line":"Returns Load Factor for a 8760 hour load curve.","summary":"Returns Load Factor for a 8760 hour load curve. &#160;In this case, it is essentially the asset utilization factor.<div><br/></div><div>Two versions:</div><div>1. Input 1 for the stock data file LC1.csv.</div><div>2. Input &#34;data://MadDenker/LCTest1/LC1.csv&#34;&#160;for same data file</div><div><br/></div><div>Input data files should be a text file with 8760 measurements, each on a new line in the file.</div>","submitted_at":1445291276000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":13},{"algo_id":3863,"object_id":"92480bfb-ac17-11e4-840d-12f53eafe9d2","username":"WebPredict","algoname":"SimplifyUnixPath","algolabel":"SimplifyUnixPath","language":"java3","card_line":"Simplifies unix paths.","summary":"Simplifies unix paths.","submitted_at":1445290286000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":13},{"algo_id":352,"object_id":"bbb34ffe-abf9-11e3-8351-040108385a01","username":"codeb34v3r","algoname":"TextTokenizer","algolabel":"TextTokenizer","language":"java3","card_line":"Lucene StandardTokenizer A grammar-based tokenizer constructed with JFlex.","summary":"Lucene StandardTokenizer<div><br></div><div><span style=\"color: rgb(53, 56, 51); font-family: Arial, Helvetica, sans-serif; font-size: 12px; line-height: normal;\">A grammar-based tokenizer constructed with JFlex.</span><p style=\"color: rgb(53, 56, 51); font-family: Arial, Helvetica, sans-serif; font-size: 12px; line-height: normal;\">As of Lucene version 3.1, this class implements the Word Break rules from the Unicode Text Segmentation algorithm, as specified in&nbsp;<a href=\"http://unicode.org/reports/tr29/\" style=\"color: rgb(76, 107, 135);\">Unicode Standard Annex #29</a>.</p><p style=\"color: rgb(53, 56, 51); font-family: Arial, Helvetica, sans-serif; font-size: 12px; line-height: normal;\"></p><p style=\"color: rgb(53, 56, 51); font-family: Arial, Helvetica, sans-serif; font-size: 12px; line-height: normal;\">Many applications have specific tokenizer needs. If this tokenizer does not suit your application, please consider copying this source code directory to your project and maintaining your own grammar-based tokenizer.</p></div>","submitted_at":1445289890000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":13},{"algo_id":15695,"object_id":"0c6d9cf2-2d32-11e5-aae6-12ad1a8c1691","username":"namdx1987","algoname":"Digitize","algolabel":"Digitize","language":"python2-2","card_line":"Return digits of number in a specified base Input: [number, base] number: the input number base: the specified base","summary":"<p>Return digits of number in a specified base</p><p>Input: [number, base]</p><ul><li>number: the input number</li><li>base: the specified base<br/></li></ul>","submitted_at":1437668161000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":13},{"algo_id":15035,"object_id":"abbaaeaf-0ed0-11e5-89ff-123a3b0693f5","username":"douglarocca","algoname":"ConnectedGraphswithRestrictedNumberofEdges","algolabel":"Connected Graphs with Restricted Number of Edges","language":"python2-2","card_line":"The algorithm gives the number of connected labeled graphs on `n` vertices restricted to `k` edges.","summary":"<p>The algorithm gives the number of connected labeled graphs on `n` vertices restricted to `k` edges.</p><pre style=\"background-color: #f0f0f0;\"><span class=\"k\" style=\"color: #007020;\"><b>def</b></span> <span class=\"nf\" style=\"color: #06287e;\">memoize</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">):</span>&#10;    <span class=\"n\">cache</span> <span class=\"o\" style=\"color: #666666;\">=</span> <span class=\"p\">{}</span>&#10;    <span class=\"k\" style=\"color: #007020;\"><b>def</b></span> <span class=\"nf\" style=\"color: #06287e;\">memof</span><span class=\"p\">(</span><span class=\"o\" style=\"color: #666666;\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\" style=\"color: #666666;\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>&#10;        <span class=\"n\">k</span> <span class=\"o\" style=\"color: #666666;\">=</span> <span class=\"n\">args</span>&#10;        <span class=\"k\" style=\"color: #007020;\"><b>if</b></span> <span class=\"n\">k</span> <span class=\"ow\" style=\"color: #007020;\"><b>in</b></span> <span class=\"n\">cache</span><span class=\"p\">:</span>&#10;            <span class=\"k\" style=\"color: #007020;\"><b>return</b></span> <span class=\"n\">cache</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">]</span>&#10;        <span class=\"k\" style=\"color: #007020;\"><b>else</b></span><span class=\"p\">:</span>&#10;            <span class=\"n\">result</span> <span class=\"o\" style=\"color: #666666;\">=</span> <span class=\"n\">func</span><span class=\"p\">(</span><span class=\"o\" style=\"color: #666666;\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\" style=\"color: #666666;\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>&#10;            <span class=\"n\">cache</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">]</span> <span class=\"o\" style=\"color: #666666;\">=</span> <span class=\"n\">result</span>&#10;            <span class=\"k\" style=\"color: #007020;\"><b>return</b></span> <span class=\"n\">result</span>&#10;    <span class=\"n\">memof</span><span class=\"o\" style=\"color: #666666;\">.</span><span class=\"n\">_cache</span> <span class=\"o\" style=\"color: #666666;\">=</span> <span class=\"n\">cache</span>&#10;    <span class=\"k\" style=\"color: #007020;\"><b>return</b></span> <span class=\"n\">memof</span>&#10;&#10;<span class=\"nd\" style=\"color: #555555;\"><b>@memoize</b></span>&#10;<span class=\"k\" style=\"color: #007020;\"><b>def</b></span> <span class=\"nf\" style=\"color: #06287e;\">binomial</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">):</span>&#10;    <span class=\"k\" style=\"color: #007020;\"><b>if</b></span> <span class=\"n\">k</span> <span class=\"o\" style=\"color: #666666;\">&lt;</span> <span class=\"mi\" style=\"color: #40a070;\">0</span> <span class=\"ow\" style=\"color: #007020;\"><b>or</b></span> <span class=\"n\">k</span> <span class=\"o\" style=\"color: #666666;\">&gt;</span> <span class=\"n\">n</span><span class=\"p\">:</span>&#10;        <span class=\"k\" style=\"color: #007020;\"><b>return</b></span> <span class=\"mi\" style=\"color: #40a070;\">0</span>&#10;    <span class=\"k\" style=\"color: #007020;\"><b>if</b></span> <span class=\"n\">k</span> <span class=\"o\" style=\"color: #666666;\">==</span> <span class=\"mi\" style=\"color: #40a070;\">0</span> <span class=\"ow\" style=\"color: #007020;\"><b>or</b></span> <span class=\"n\">k</span> <span class=\"o\" style=\"color: #666666;\">==</span> <span class=\"n\">n</span><span class=\"p\">:</span>&#10;        <span class=\"k\" style=\"color: #007020;\"><b>return</b></span> <span class=\"mi\" style=\"color: #40a070;\">1</span>&#10;    <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">c</span> <span class=\"o\" style=\"color: #666666;\">=</span> <span class=\"nb\" style=\"color: #007020;\">min</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">n</span> <span class=\"o\" style=\"color: #666666;\">-</span> <span class=\"n\">k</span><span class=\"p\">),</span> <span class=\"mi\" style=\"color: #40a070;\">1</span>&#10;    <span class=\"k\" style=\"color: #007020;\"><b>for</b></span> <span class=\"n\">i</span> <span class=\"ow\" style=\"color: #007020;\"><b>in</b></span> <span class=\"nb\" style=\"color: #007020;\">xrange</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">):</span>&#10;        <span class=\"n\">c</span> <span class=\"o\" style=\"color: #666666;\">=</span> <span class=\"n\">c</span> <span class=\"o\" style=\"color: #666666;\">*</span> <span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"o\" style=\"color: #666666;\">-</span> <span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"o\" style=\"color: #666666;\">/</span> <span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\" style=\"color: #666666;\">+</span> <span class=\"mi\" style=\"color: #40a070;\">1</span><span class=\"p\">)</span>&#10;    <span class=\"k\" style=\"color: #007020;\"><b>return</b></span> <span class=\"n\">c</span>&#10;&#10;<span class=\"nd\" style=\"color: #555555;\"><b>@memoize</b></span>&#10;<span class=\"k\" style=\"color: #007020;\"><b>def</b></span> <span class=\"nf\" style=\"color: #06287e;\">c</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">):</span>&#10;    <span class=\"k\" style=\"color: #007020;\"><b>if</b></span> <span class=\"n\">k</span> <span class=\"o\" style=\"color: #666666;\">&lt;</span> <span class=\"n\">n</span> <span class=\"o\" style=\"color: #666666;\">-</span> <span class=\"mi\" style=\"color: #40a070;\">1</span> <span class=\"ow\" style=\"color: #007020;\"><b>or</b></span> <span class=\"n\">k</span> <span class=\"o\" style=\"color: #666666;\">&gt;</span> <span class=\"n\">binomial</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"mi\" style=\"color: #40a070;\">2</span><span class=\"p\">):</span>&#10;        <span class=\"k\" style=\"color: #007020;\"><b>return</b></span> <span class=\"mi\" style=\"color: #40a070;\">0</span>&#10;    <span class=\"k\" style=\"color: #007020;\"><b>elif</b></span> <span class=\"n\">k</span> <span class=\"o\" style=\"color: #666666;\">==</span> <span class=\"n\">binomial</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"mi\" style=\"color: #40a070;\">2</span><span class=\"p\">):</span>&#10;        <span class=\"k\" style=\"color: #007020;\"><b>return</b></span> <span class=\"mi\" style=\"color: #40a070;\">1</span>&#10;    <span class=\"k\" style=\"color: #007020;\"><b>elif</b></span> <span class=\"n\">k</span> <span class=\"o\" style=\"color: #666666;\">==</span> <span class=\"n\">n</span> <span class=\"o\" style=\"color: #666666;\">-</span> <span class=\"mi\" style=\"color: #40a070;\">1</span><span class=\"p\">:</span>&#10;        <span class=\"k\" style=\"color: #007020;\"><b>return</b></span> <span class=\"n\">n</span><span class=\"o\" style=\"color: #666666;\">**</span><span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"o\" style=\"color: #666666;\">-</span> <span class=\"mi\" style=\"color: #40a070;\">2</span><span class=\"p\">)</span>&#10;    <span class=\"k\" style=\"color: #007020;\"><b>else</b></span><span class=\"p\">:</span>&#10;        <span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">t</span> <span class=\"o\" style=\"color: #666666;\">=</span> <span class=\"n\">binomial</span><span class=\"p\">(</span><span class=\"n\">binomial</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"mi\" style=\"color: #40a070;\">2</span><span class=\"p\">),</span> <span class=\"n\">k</span><span class=\"p\">),</span> <span class=\"mi\" style=\"color: #40a070;\">0</span>&#10;        <span class=\"k\" style=\"color: #007020;\"><b>for</b></span> <span class=\"n\">i</span> <span class=\"ow\" style=\"color: #007020;\"><b>in</b></span> <span class=\"nb\" style=\"color: #007020;\">xrange</span><span class=\"p\">(</span><span class=\"mi\" style=\"color: #40a070;\">1</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">):</span>&#10;            <span class=\"k\" style=\"color: #007020;\"><b>for</b></span> <span class=\"n\">j</span> <span class=\"ow\" style=\"color: #007020;\"><b>in</b></span> <span class=\"nb\" style=\"color: #007020;\">xrange</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\" style=\"color: #666666;\">-</span> <span class=\"mi\" style=\"color: #40a070;\">1</span><span class=\"p\">,</span> <span class=\"nb\" style=\"color: #007020;\">min</span><span class=\"p\">(</span><span class=\"n\">binomial</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"mi\" style=\"color: #40a070;\">2</span><span class=\"p\">)</span> <span class=\"o\" style=\"color: #666666;\">+</span> <span class=\"mi\" style=\"color: #40a070;\">1</span><span class=\"p\">,</span> <span class=\"n\">k</span> <span class=\"o\" style=\"color: #666666;\">+</span> <span class=\"mi\" style=\"color: #40a070;\">1</span><span class=\"p\">)):</span>&#10;                <span class=\"n\">t</span> <span class=\"o\" style=\"color: #666666;\">+=</span> <span class=\"p\">(</span><span class=\"n\">binomial</span><span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"o\" style=\"color: #666666;\">-</span> <span class=\"mi\" style=\"color: #40a070;\">1</span><span class=\"p\">,</span> <span class=\"n\">i</span> <span class=\"o\" style=\"color: #666666;\">-</span> <span class=\"mi\" style=\"color: #40a070;\">1</span><span class=\"p\">)</span> <span class=\"o\" style=\"color: #666666;\">*</span>&#10;                      <span class=\"n\">binomial</span><span class=\"p\">(</span><span class=\"n\">binomial</span><span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"o\" style=\"color: #666666;\">-</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"mi\" style=\"color: #40a070;\">2</span><span class=\"p\">),</span> <span class=\"n\">k</span> <span class=\"o\" style=\"color: #666666;\">-</span> <span class=\"n\">j</span><span class=\"p\">)</span> <span class=\"o\" style=\"color: #666666;\">*</span>&#10;                      <span class=\"n\">c</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">))</span>&#10;        <span class=\"k\" style=\"color: #007020;\"><b>return</b></span> <span class=\"n\">s</span> <span class=\"o\" style=\"color: #666666;\">-</span> <span class=\"n\">t</span>&#10;&#10;<span class=\"k\" style=\"color: #007020;\"><b>def</b></span> <span class=\"nf\" style=\"color: #06287e;\">apply</span><span class=\"p\">(</span><span class=\"n\">nk</span><span class=\"p\">):</span>&#10;    <span class=\"k\" style=\"color: #007020;\"><b>assert</b></span> <span class=\"nb\" style=\"color: #007020;\">len</span><span class=\"p\">(</span><span class=\"n\">nk</span><span class=\"p\">)</span> <span class=\"o\" style=\"color: #666666;\">==</span> <span class=\"mi\" style=\"color: #40a070;\">2</span> <span class=\"ow\" style=\"color: #007020;\"><b>and</b></span> <span class=\"nb\" style=\"color: #007020;\">set</span><span class=\"p\">(</span><span class=\"nb\" style=\"color: #007020;\">map</span><span class=\"p\">(</span><span class=\"nb\" style=\"color: #007020;\">type</span><span class=\"p\">,</span> <span class=\"n\">nk</span><span class=\"p\">))</span> <span class=\"o\" style=\"color: #666666;\">==</span> <span class=\"nb\" style=\"color: #007020;\">set</span><span class=\"p\">([</span><span class=\"nb\" style=\"color: #007020;\">int</span><span class=\"p\">])</span>&#10;    <span class=\"k\" style=\"color: #007020;\"><b>return</b></span> <span class=\"nb\" style=\"color: #007020;\">str</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">(</span><span class=\"o\" style=\"color: #666666;\">*</span><span class=\"n\">nk</span><span class=\"p\">))</span>&#10;</pre><p>The implementation makes use of recurrences given by Marko Riedel (see below) and Brendan McKay et al (eqn 1.11 of [1]).</p><p>For large `n` there will be integer wrap around. A simple way to use arbitrary precision is to convert the return value to the python `decimal.Decimal` type where the wraparound occurs:</p><pre style=\"background-color: #f0f0f0;\"><span class=\"kn\" style=\"color: #007020;\"><b>import</b></span> <span class=\"nn\" style=\"color: #0e84b5;\"><b>decimal</b></span>&#10;&#10;<span class=\"n\">c</span> <span class=\"o\" style=\"color: #666666;\">=</span> <span class=\"n\">decimal</span><span class=\"o\" style=\"color: #666666;\">.</span><span class=\"n\">Context</span><span class=\"p\">(</span><span class=\"n\">prec</span><span class=\"o\" style=\"color: #666666;\">=</span><span class=\"mi\" style=\"color: #40a070;\">256</span><span class=\"p\">)</span>&#10;<span class=\"n\">decimal</span><span class=\"o\" style=\"color: #666666;\">.</span><span class=\"n\">setcontext</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span>&#10;&#10;<span class=\"nd\" style=\"color: #555555;\"><b>@memoize</b></span>&#10;<span class=\"k\" style=\"color: #007020;\"><b>def</b></span> <span class=\"nf\" style=\"color: #06287e;\">c</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">):</span>&#10;    <span class=\"k\" style=\"color: #007020;\"><b>if</b></span> <span class=\"n\">k</span> <span class=\"o\" style=\"color: #666666;\">&lt;</span> <span class=\"n\">n</span> <span class=\"o\" style=\"color: #666666;\">-</span> <span class=\"mi\" style=\"color: #40a070;\">1</span> <span class=\"ow\" style=\"color: #007020;\"><b>or</b></span> <span class=\"n\">k</span> <span class=\"o\" style=\"color: #666666;\">&gt;</span> <span class=\"n\">binomial</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"mi\" style=\"color: #40a070;\">2</span><span class=\"p\">):</span>&#10;        <span class=\"k\" style=\"color: #007020;\"><b>return</b></span> <span class=\"mi\" style=\"color: #40a070;\">0</span>&#10;    <span class=\"k\" style=\"color: #007020;\"><b>elif</b></span> <span class=\"n\">k</span> <span class=\"o\" style=\"color: #666666;\">==</span> <span class=\"n\">binomial</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"mi\" style=\"color: #40a070;\">2</span><span class=\"p\">):</span>&#10;        <span class=\"k\" style=\"color: #007020;\"><b>return</b></span> <span class=\"mi\" style=\"color: #40a070;\">1</span>&#10;    <span class=\"k\" style=\"color: #007020;\"><b>elif</b></span> <span class=\"n\">k</span> <span class=\"o\" style=\"color: #666666;\">==</span> <span class=\"n\">n</span> <span class=\"o\" style=\"color: #666666;\">-</span> <span class=\"mi\" style=\"color: #40a070;\">1</span><span class=\"p\">:</span>&#10;        <span class=\"k\" style=\"color: #007020;\"><b>return</b></span> <span class=\"n\">Decimal</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"o\" style=\"color: #666666;\">**</span><span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"o\" style=\"color: #666666;\">-</span> <span class=\"mi\" style=\"color: #40a070;\">2</span><span class=\"p\">)</span>&#10;    <span class=\"k\" style=\"color: #007020;\"><b>else</b></span><span class=\"p\">:</span>&#10;        <span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">t</span> <span class=\"o\" style=\"color: #666666;\">=</span> <span class=\"n\">binomial</span><span class=\"p\">(</span><span class=\"n\">binomial</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"mi\" style=\"color: #40a070;\">2</span><span class=\"p\">),</span> <span class=\"n\">k</span><span class=\"p\">),</span> <span class=\"mi\" style=\"color: #40a070;\">0</span>&#10;        <span class=\"k\" style=\"color: #007020;\"><b>for</b></span> <span class=\"n\">i</span> <span class=\"ow\" style=\"color: #007020;\"><b>in</b></span> <span class=\"nb\" style=\"color: #007020;\">xrange</span><span class=\"p\">(</span><span class=\"mi\" style=\"color: #40a070;\">1</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">):</span>&#10;            <span class=\"k\" style=\"color: #007020;\"><b>for</b></span> <span class=\"n\">j</span> <span class=\"ow\" style=\"color: #007020;\"><b>in</b></span> <span class=\"nb\" style=\"color: #007020;\">xrange</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\" style=\"color: #666666;\">-</span> <span class=\"mi\" style=\"color: #40a070;\">1</span><span class=\"p\">,</span> <span class=\"nb\" style=\"color: #007020;\">min</span><span class=\"p\">(</span><span class=\"n\">binomial</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"mi\" style=\"color: #40a070;\">2</span><span class=\"p\">)</span> <span class=\"o\" style=\"color: #666666;\">+</span> <span class=\"mi\" style=\"color: #40a070;\">1</span><span class=\"p\">,</span> <span class=\"n\">k</span> <span class=\"o\" style=\"color: #666666;\">+</span> <span class=\"mi\" style=\"color: #40a070;\">1</span><span class=\"p\">)):</span>&#10;                <span class=\"n\">t</span> <span class=\"o\" style=\"color: #666666;\">+=</span> <span class=\"p\">(</span><span class=\"n\">binomial</span><span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"o\" style=\"color: #666666;\">-</span> <span class=\"mi\" style=\"color: #40a070;\">1</span><span class=\"p\">,</span> <span class=\"n\">i</span> <span class=\"o\" style=\"color: #666666;\">-</span> <span class=\"mi\" style=\"color: #40a070;\">1</span><span class=\"p\">)</span> <span class=\"o\" style=\"color: #666666;\">*</span>&#10;                      <span class=\"n\">binomial</span><span class=\"p\">(</span><span class=\"n\">binomial</span><span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"o\" style=\"color: #666666;\">-</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"mi\" style=\"color: #40a070;\">2</span><span class=\"p\">),</span> <span class=\"n\">k</span> <span class=\"o\" style=\"color: #666666;\">-</span> <span class=\"n\">j</span><span class=\"p\">)</span> <span class=\"o\" style=\"color: #666666;\">*</span>&#10;                      <span class=\"n\">c</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">))</span>&#10;    <span class=\"k\" style=\"color: #007020;\"><b>return</b></span> <span class=\"n\">s</span> <span class=\"o\" style=\"color: #666666;\">-</span> <span class=\"n\">t</span>&#10;</pre><p><br/></p><p>This is OEIS <a href=\"http://oeis.org/A123527\">A123527</a>.</p><p>A wide range of approaches with Maple and C implementations is discussed by <a href=\"http://math.stackexchange.com/users/44883/marko-riedel\">Marko Riedel</a> at these links:</p><p><a href=\"http://math.stackexchange.com/questions/689526/how-many-connected-graphs-over-v-vertices-and-e-edges\">http://math.stackexchange.com/questions/689526/how-many-connected-graphs-over-v-vertices-and-e-edges</a><br/><span><a href=\"http://math.stackexchange.com/questions/1071564/how-many-good-graphs-of-size-n-are-there\">http://math.stackexchange.com/questions/1071564/how-many-good-graphs-of-size-n-are-there</a></span></p><p><span>References:</span></p><p><span>[1] Bender, E. A., Canfield, E. R. and McKay, B. D. (1990), The asymptotic number of labeled connected graphs with a given number of vertices and edges. Random Struct. Alg., 1: 127–169. doi: 10.1002/rsa.3240010202</span></p><p><a href=\"http://algo.inria.fr/flajolet/Publications/books.html\" style=\"background-color: rgb(255, 255, 255);\"></a>[2] Flajolet and <a href=\"http://www.cs.princeton.edu/~rs/\" style=\"color: rgb(153, 99, 255);background-color: rgb(255, 255, 255);\">Sedgewick</a>, <a href=\"http://algo.inria.fr/flajolet/Publications/AnaCombi/anacombi.html\" style=\"background-color: rgb(255, 255, 255);\">Analytic Combinatorics</a></p><p><span></span></p><p>[3] Harary and Palmer, Graphical Enumeration (<a href=\"https://oeis.org/HPGE.html\">helpful OEIS link</a>)</p><p><br/></p><p>Table of values:</p><pre style=\"background-color: #f0f0f0;\">  1    0 1&#10;  2    1 1&#10;  3    2 3&#10;  3    3 1&#10;  4    3 16&#10;  4    4 15&#10;  4    5 6&#10;  4    6 1&#10;  5    4 125&#10;  5    5 222&#10;  5    6 205&#10;  5    7 120&#10;  5    8 45&#10;  5    9 10&#10;  5   10 1&#10;  6    5 1296&#10;  6    6 3660&#10;  6    7 5700&#10;  6    8 6165&#10;  6    9 4945&#10;  6   10 2997&#10;  6   11 1365&#10;  6   12 455&#10;  6   13 105&#10;  6   14 15&#10;  6   15 1&#10;  7    6 16807&#10;  7    7 68295&#10;  7    8 156555&#10;  7    9 258125&#10;  7   10 331506&#10;  7   11 343140&#10;  7   12 290745&#10;  7   13 202755&#10;  7   14 116175&#10;  7   15 54257&#10;  7   16 20349&#10;  7   17 5985&#10;  7   18 1330&#10;  7   19 210&#10;  7   20 21&#10;  7   21 1&#10;  8    7 262144&#10;  8    8 1436568&#10;  8    9 4483360&#10;  8   10 10230360&#10;  8   11 18602136&#10;  8   12 28044072&#10;  8   13 35804384&#10;  8   14 39183840&#10;  8   15 37007656&#10;  8   16 30258935&#10;  8   17 21426300&#10;  8   18 13112470&#10;  8   19 6905220&#10;  8   20 3107937&#10;  8   21 1184032&#10;  8   22 376740&#10;  8   23 98280&#10;  8   24 20475&#10;  8   25 3276&#10;  8   26 378&#10;  8   27 28&#10;  8   28 1&#10;  9    8 4782969&#10;  9    9 33779340&#10;  9   10 136368414&#10;  9   11 405918324&#10;  9   12 974679363&#10;  9   13 1969994376&#10;  9   14 3431889000&#10;  9   15 5228627544&#10;  9   16 7032842901&#10;  9   17 8403710364&#10;  9   18 8956859646&#10;  9   19 8535294180&#10;  9   20 7279892361&#10;  9   21 5557245480&#10;  9   22 3792906504&#10;  9   23 2309905080&#10;  9   24 1251493425&#10;  9   25 600775812&#10;  9   26 254183454&#10;  9   27 94143028&#10;  9   28 30260331&#10;  9   29 8347680&#10;  9   30 1947792&#10;  9   31 376992&#10;  9   32 58905&#10;  9   33 7140&#10;  9   34 630&#10;  9   35 36&#10;  9   36 1&#10; 10    9 100000000&#10; 10   10 880107840&#10; 10   11 4432075200&#10; 10   12 16530124800&#10; 10   13 50088981600&#10; 10   14 128916045720&#10; 10   15 288982989000&#10; 10   16 573177986865&#10; 10   17 1016662746825&#10; 10   18 1624745199910&#10; 10   19 2352103292070&#10; 10   20 3096620034795&#10; 10   21 3717889913655&#10; 10   22 4078716030900&#10; 10   23 4093594934220&#10; 10   24 3761135471805&#10; 10   25 3163862003211&#10; 10   26 2435820178050&#10; 10   27 1714943046390&#10; 10   28 1102765999275&#10; 10   29 646542946125&#10; 10   30 344847947664&#10; 10   31 166867565040&#10; 10   32 73005619995&#10; 10   33 28759950345&#10; 10   34 10150589610&#10; 10   35 3190186926&#10; 10   36 886163125&#10; 10   37 215553195&#10; 10   38 45379620&#10; 10   39 8145060&#10; 10   40 1221759&#10; 10   41 148995&#10; 10   42 14190&#10; 10   43 990&#10; 10   44 45&#10; 10   45 1&#10;&#10; ...&#10;&#10;<span> 20   19 262144000000000000000000&#10;</span><span> 20   20 8765006377126199463936000&#10;</span><span> 20   21 165302832533722012508160000&#10; 20   22 2308679811324625848791040000&#10; 20   23 26475493254511544166850560000</span><span>&#10; 20   24 262531375188086694499173888000&#10; 20   25 2319409283218421983604361216000&#10; 20   26 18609460830276453968696568576000&#10; 20   27 137389515051337171399458435328000&#10; 20   28 942286943592166927670520784780800&#10; 20   29 6047449583948914817459539926604800&#10; 20   30 36525524751295516417034996099750400&#10; 20   31 208571200052782924641061209874483200&#10; 20   32 1130300650993207566827148319301771880&#10; 20   33 5831738934026048895826705179092277120&#10; 20   34 28723888612157111882953788103273970340&#10; 20   35 135376304331236127351814277357418826380&#10; 20   36 611755203820630100932668139569655653840&#10; 20   37 2655349100798421324674003273937347141440&#10; 20   38 11088128409801591093117635255497606675800&#10; 20   39 44606287696335732082661932475125008999720&#10; 20   40 173093184087559388557367970317932248105360&#10; 20   41 648634853134996172634225003614446597429320&#10; 20   42 2349635408113437646955354971698533883712740&#10; 20   43 8235373529177470880652460053802218808087980&#10; 20   44 27952196835136685448917879439461869334410800&#10; 20   45 91946325761953831526022842342180418988526640&#10; 20   46 293323596830287357305947764536461608867858880&#10; 20   47 908108519771992451439632625351722372571708480&#10; 20   48 2730038400735615036002612889636029395562762940&#10; 20   49 7974117537961181949550849258775727551874918300&#10; 20   50 22641461465708071138697884315996625477663213040&#10; 20   51 62523528991427060772830373925248588518522574480&#10; 20   52 167994340448833310311473061857592690452647157960&#10; 20   53 439379609944055570033573267043656746906954879560&#10; 20   54 1119049560306988683013921063482443621234880458640&#10; 20   55 2776400987013110803265071299784514459932820123440&#10; 20   56 6712555103215350665474943224055436396502752517340&#10; 20   57 15820003938512717669745201297125355031702332505620&#10; 20   58 36355507329631394056324975255739939114129383525800&#10; 20   59 81489719357083942168990372106284892841284143009440&#10; 20   60 178205593469776626899179292865881830060256015277000&#10; 20   61 380308445861969151464175305627521253582430617881200&#10; 20   62 792229041509562288598344955587763758895313623436280&#10; 20   63 1611253663378636285865154999161614458562821550550880&#10; 20   64 3200134580885618414286699298034529266460857650169165&#10; 20   65 6207996169249222497599923902980061119984393973560250&#10; 20   66 11765121908406564458627012904714069001823741708809275&#10; 20   67 21786207173226748678138947749938428180363721989737580&#10; 20   68 39425860884511872102812365759471792027341500604140505&#10; 20   69 69737314285580496469788594028337934658321806251330250&#10; 20   70 120586868444914951946513467750933860571722138276133275&#10; 20   71 203867609196437603533590129055793402004778274865911400&#10; 20   72 337030365222188758030716978552941677096026008360126685&#10; 20   73 544901842008654214368467275419586144121980197935690890&#10; 20   74 861685216190423321548918666774119739779339168907460355&#10; 20   75 1332937402373577118386130640579382271972565593132180356&#10; 20   76 2017196958767237366974987508530256487182717131607867025&#10; 20   77 2986813834341124743685220889482239558678124795956947690&#10; 20   78 4327433786974669795474079704565108222943346091264022315&#10; 20   79 6135551696813670525966684708099083381721260355072930000&#10; 20   80 8513607726769030832716554358246595936380401384020592513&#10; 20   81 11562291195436147058886026241015740143479912300177563970&#10; 20   82 15370054806994526508193862134521986786696256523149495575&#10; 20   83 20000313432783641272263388727030230896705466444525947180&#10; 20   84 25477356873473639512476772908693816013722495702600032265&#10; 20   85 31772556908599627440874194901507570438850872714755099978&#10; 20   86 38792878749685698523603124984130516187889410469921596635&#10; 20   87 46373890655353938344432935729914028056658332719926497720&#10; 20   88 54279298250968782996315993072086727268668100407156688305&#10; 20   89 62208459118903581653828763547308584092082785451805733650&#10; 20   90 69812382963304726732245548458093917009834278334432962271&#10; 20   91 76717506045668481889353643116268866438527555477778106580&#10; 20   92 82555237341550578889317411945876816255247591325493788865&#10; 20   93 86994146659895802590632485182513335241221849734798385290&#10; 20   94 89770938575812625664252966870363776177858044360302789675&#10; 20   95 90716210270590805577577419830401049909124355624633204320&#10; 20   96 89771501959259118937676830983896956955582521303871633745&#10; 20   97 86995261363941848917313195432844412346436616602276915330&#10; 20   98 82556878852697422386984420202467010899908906906684189235&#10; 20   99 76719636824248060278044888112048942753870048740116907380&#10; 20  100 69814952030673113533958686801674332836149373773174947651&#10; 20  101 62211402220234022386699832166692349370338847735769908830&#10; 20  102 54282538963593584953787999506246943286043499332391242305&#10; 20  103 46377342671349122394327736400967867346067152183569536520&#10; 20  104 38796449351781662565196741539454848888798436467192045645&#10; 20  105 31776151426229594201547195880717770354922595172775700058&#10; 20  106 25480883701496407817663668469924390103410432416186941015&#10; 20  107 20003689063008568275297739448428650099169952329309482060&#10; 20  108 15373208289341682977649269463785287033042365636678730255&#10; 20  109 11565167516449011402405138671907133965148772688639329910&#10; 20  110 8516169751079597685524387014004417017329057631967548293&#10; 20  111 6137780527785119153464081430114271153553168659165335280&#10; 20  112 4329327623593330337833251497674502522149498526168623305&#10; 20  113 2988385591700145044370076954621392876110910469340910090&#10; 20  114 2018471048709153668977817177972559866040717903848861115&#10; 20  115 1333946124145551613639320775313257003485862242518875116&#10; 20  116 862465186021095880698295410618976586046560021104845675&#10; 20  117 545490810771206073783501354122993645556725678544692350&#10; 20  118 337464658482089079589796002636713575541484023559577465&#10; 20  119 204180299547899591305891389147541363257662066887845000&#10; 20  120 120806678106523419570559217427068210462880032100327765&#10; 20  121 69888161263681650706591562873335577601622672740326850&#10; 20  122 39526911035657022046321030330037891630371170361766175&#10; 20  123 21852276083541036529943285114979161479083281732230260&#10; 20  124 11807278231651869372879200108022171539044509244428375&#10; 20  125 6234242915997603351903923705384889650448442799563206&#10; 20  126 3216077698373482420749432886919342476289677315472285&#10; 20  127 1620700573717262362712203729107789750445621786084480&#10; 20  128 797688564086512130591907009078193504214907493183515&#10; 20  129 383385201500820331780828273089260443941545849770710&#10; 20  130 179896133063826131842513709857257062904264905996913&#10; 20  131 82395175465721245931076845124914283097905692458260&#10; 20  132 36828146614847099084196809802025358257033343217885&#10; 20  133 16060394765923896864645582921613298110347681525090&#10; 20  134 6831660460584231682152503775706989901188533361375&#10; 20  135 2833873968962289754536610283559185323442863118728&#10; 20  136 1146051972776748949124410694797914711532731704375&#10; 20  137 451728514826216907648143959019480617455776185230&#10; 20  138 173489936855856105192048869240464720776227201445&#10; 20  139 64902710191244780984114223496919476839032288700&#10; 20  140 23643130141229444309401933290813427173865172001&#10; 20  141 8384088702593846915190463977517362799384283370&#10; 20  142 2893101031183346045538679183398654219815743275&#10; 20  143 971110835643346096476727486469808705931189200&#10; 20  144 316959786633870808135160881728570717701504075&#10; 20  145 100552759897695587573031656203698583528764070&#10; 20  146 30992289009573660394831397048018733786528705&#10; 20  147 9276603513071427256300896471050539487552100&#10; 20  148 2695229399068347141922652342853832086738825&#10; 20  149 759729092354883999355974194033869350173850&#10; 20  150 207659285243675636633614664479122587930787&#10; 20  151 55009082183756205442539852390164099951640&#10; 20  152 14114172402411279476175267710544671473935&#10; 20  153 3505480727396284813243037292390512525230&#10; 20  154 842225889049759124780061125294485068365&#10; 20  155 195613754876073363889867008010760639676&#10; 20  156 43887701414503669503181582956431178405&#10; 20  157 9504342981484874177139099402831015570&#10; 20  158 1985084293601271480782780206077345495&#10; 20  159 399513820095853405480892548907818560&#10; 20  160 77405802643571599400105648837693511&#10; 20  161 14423441486379801286095416614735710&#10; 20  162 2581974093240828635856898201152485&#10; 20  163 443529292090449091470400458532960&#10; 20  164 73020066380744667533756230135455&#10; 20  165 11506192278177947613104886925062&#10; 20  166 1732860282858124640600590327845&#10; 20  167 249033813105359229789524810400&#10; 20  168 34093914889424180268881778375&#10; 20  169 4438261109865869620803019350&#10; 20  170 548255784159901541393346645&#10; 20  171 64123483527473864490450280&#10; 20  172 7083408064081415263479975&#10; 20  173 737001995106736848223350&#10; 20  174 72005942050658197814925&#10; 20  175 6583400416060178085936&#10; 20  176 561085262732401541415&#10; 20  177 44379625300867918530&#10; 20  178 3241208589389230005&#10; 20  179 217287726662965140&#10; 20  180 13278694407181203&#10; 20  181 733629525258630&#10; 20  182 36278383117185&#10; 20  183 1585940245560&#10; 20  184 60334683255&#10; 20  185 1956800538&#10; 20  186 52602165&#10; 20  187 1125180&#10; 20  188 17955&#10; 20  189 190&#10; 20  190 1&#10;&#10;0.842158794403 sec to compute and print</span></pre><p>The table was printed with</p><pre style=\"color: rgb(0, 0, 0);background-color: #f0f0f0;\">import time&#10;ti = time.time()&#10;for n in range(1, 21):&#10;    for k in range(n - 1, binomial(n, 2) + 1):&#10;        print '{:3d} {:4d} {}'.format(n, k, answer(n, k))&#10;print time.time() - ti, 'sec'</pre>","submitted_at":1433872938000,"discoverable_world":true,"source_world":true,"license":"gpl3","call_count":13},{"algo_id":14313,"object_id":"2519fe68-edf6-11e4-849b-0670f2dc1320","username":"s3utilities","algoname":"CopyAllFilesBetweenBuckets","algolabel":"Copy All Files Between Buckets","language":"python2-2","card_line":"This algorithm copies all files in an AWS S3 bucket to another S3 bucket.","summary":"<p>This algorithm copies all files in an AWS S3 bucket to another S3 bucket. If you specify a prefix, you can copy all of the files in a specific directory only.</p><div>The credentials files seen in the sample input below contain the bucket name, the access key ID and the secret access key, separated by new lines.</div><p></p>","submitted_at":1432662572000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":13},{"algo_id":14739,"object_id":"5aa45083-fe53-11e4-89ff-123a3b0693f5","username":"testing","algoname":"TestRecursive","algolabel":"TestRecursive","language":"java3","submitted_at":1432059518000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":13},{"algo_id":14139,"object_id":"be04a746-e7ea-11e4-849b-0670f2dc1320","username":"util","algoname":"CustomMapfromJson","algolabel":"Custom Map from Json","language":"python2-2","submitted_at":1429649156000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":13},{"algo_id":6311,"object_id":"71e4a310-c657-11e4-abe1-12f53eafe9d2","username":"bonfatti81","algoname":"CheckMyAEM","algolabel":"CheckMyAEM","language":"java3","card_line":"Check your AEM Publish instance configuration.","summary":"Check your AEM Publish instance configuration.<div><br/></div><div>This service allows you to check your publish instance most common and dangerous vulnerability.</div><div>For security reasons we don't provide the vulnerability details through the API and we don't allow scan of not owned websites.</div><div><div><span>Before you start your scan, you must add the following meta tag to your site's homepage:</span><code>&lt;meta name=&#34;CheckMyAEM&#34; content=&#34;allow-scan&#34;&gt;</code></div>&#10;</div>&#10;<div>By adding the meta tag to your explicitly allow the API to run the following check list:</div><div>- Check default passwords</div><div>- Check most common entries that allow the attacker to gather juicy information</div><div>- Check accessibility of private JCR sections (/home, /var, /apps...)</div><div><br/></div><div><b><i>No details about the vulnerability are retained by this algorithm<br/></i></b></div><div><b><i><span><br/></span></i></b></div><div><b><i><span>The test runs a limited set of checks, a</span></i></b><b><i>&#160;&#34;NO-DETECTED-ISSUES&#34;</i></b><b><i><span>&#160;response doesn't mean that the instance is completely secure.</span></i></b></div><div><br/></div><div>For further&#160;information&#160;about this tool or if you need any consulting on AEM instances configuration do not&#160;hesitate to contact us &#160;(+1 617 621 3300),&#160;<span>or visit</span><span>&#160;</span><a href=\"http://www.coresecure.com/\">http://www.coresecure.com</a>.</div><div><br/></div><div><b><u>Contacts:</u></b></div><div><i><b>- Coresecure Client Services:&#160;</b></i><br/></div><div><i><b>&#160; &#160; &#160; &#160; </b>Michael Cormio (michael.cormio@coresecure.com)</i></div><div><div><i><b>-&#160;</b></i><b><i>Software Engineer</i></b><i><b>&#160;- Adobe AEM Solution Architect:&#160;</b></i></div><div><i><b>&#160; &#160; &#160; &#160; &#160;</b>Alessandro Bonfatti (alessandro.bonfatti@coresecure.com)</i></div></div><div><i><br/></i></div>","submitted_at":1427938856000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":13},{"algo_id":6080,"object_id":"28fd1bef-be15-11e4-840d-12f53eafe9d2","username":"paulbuis","algoname":"Max","algolabel":"Max","language":"java3","card_line":"Computes the maximum of an array of numbers","summary":"Computes the maximum of an array of numbers","submitted_at":1445290922000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":12},{"algo_id":3912,"object_id":"def1723e-ac83-11e4-840d-12f53eafe9d2","username":"WebPredict","algoname":"ListPermutations","algolabel":"ListPermutations","language":"java3","card_line":"Lists all permutations of a small set of integers (up to length 10 to limit excessive result size).","summary":"Lists all permutations of a small set of integers (up to length 10 to limit excessive result size).","submitted_at":1445290336000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":12},{"algo_id":300,"object_id":"5e9da906-9b67-11e3-8351-040108385a01","username":"jgray","algoname":"Sru","algolabel":"Sru","language":"java3","submitted_at":1445289614000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":12},{"algo_id":16687,"object_id":"f990664b-5d82-11e5-aae6-12ad1a8c1691","username":"ecommerce","algoname":"ProductRecommender","algolabel":"ProductRecommender","language":"java4","card_line":"Product Recommender uses market basket analysis to recommend related products based on a user's cart.","summary":"<p>Product Recommender uses market basket analysis to recommend related products based on a user's cart.<br/></p><p>Makes use of <a href=\"https://algorithmia.com/algorithms/paranoia/FpGrowth\">https://algorithmia.com/algorithms/paranoia/FpGrowth</a></p><p><span> The algorithm takes two:</span><br/></p><ul style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\"><li><b><b>Dataset</b></b>: path to a dataset in the Algorithmia DataAPI (data://...), where each line represents a single transaction and each item is separated by whitespace. (See Example file).</li><li><b><b>Cart</b></b>: A list of items currently in a user's cart, or the set of items that you would like to get related products for<span>.</span></li></ul>","submitted_at":1442607541000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":12},{"algo_id":15781,"object_id":"143f3bfe-3158-11e5-aae6-12ad1a8c1691","username":"namdx1987","algoname":"ExtractFactor","algolabel":"Extract Factor","language":"python2-2","card_line":"Return the power of the factor in a number Input: [factor, number] factor: the factor to be extracted number: the number to extract the factor from","summary":"<p>Return the power of the factor in a number</p><p>Input: [factor, number]</p><ul><li>factor: the factor to be extracted<br/></li><li>number: the number to extract the factor from<br/></li></ul>","submitted_at":1437670746000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":12},{"algo_id":1821,"object_id":"b6469e53-6b6c-11e4-bad7-04011d260101","username":"weka","algoname":"SimpleKMeansClusterer","algolabel":"SimpleKMeansClusterer","language":"java3","card_line":"Uses SimpleKMeans clusterer, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/clusterers/SimpleKMeans.html","summary":"<span>Uses SimpleKMeans clusterer, as implemented in Weka:</span><div><br/></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/clusterers/SimpleKMeans.html\">http://weka.sourceforge.net/doc.stable/weka/clusterers/SimpleKMeans.html</a><br/></div><div><br/></div><div>Input Json should include:</div><div><br/></div><div><ul><li><b>trainUrl:&#160;</b>a dataset URL&#160;pointing to your dataset in the Data API</li></ul></div><div><br/></div><div>Input Json may include:<br/></div><div><br/></div><div><ul><li><b>modelUrl:</b>&#160;a model URL pointing to a file uploaded to the Data API to save the model, if not specified, model is not saved</li><li><b>mode:</b>&#160;if load mode is specified, it loads an existing SimpleKMeans clusterer to use on the dataset</li><li><b>options:</b>&#160;specific to each clusterer, if not specified, uses default options. Please see the above documentation for different options for this algorithm.</li></ul></div>","submitted_at":1435614945000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":12},{"algo_id":14483,"object_id":"e4728c0f-f374-11e4-849b-0670f2dc1320","username":"util","algoname":"CacheAlgo","algolabel":"Cache Algo","language":"java3","card_line":"Wrapper for calling another algorithm, but with aggressive caching enabled","summary":"Wrapper for calling another algorithm, but with aggressive caching enabled","submitted_at":1430864715000,"discoverable_world":true,"source_world":true,"license":"mit","call_count":12},{"algo_id":2638,"object_id":"a984453f-86f6-11e4-be78-12e1fbfbf82c","username":"ApacheOpenNLP","algoname":"Chunk","algolabel":"Chunk","language":"java3","card_line":"Text chunking consists of dividing a text in syntactically correlated parts of words, like noun groups, verb groups, but does not specify their internal structure, nor their role i...","summary":"<span>Text chunking consists of dividing a text in syntactically correlated parts of words, like noun groups, verb groups, but does not specify their internal structure, nor their role in the main sentence.</span><div><span><br/></span></div><div>Parts are tagged according to the conventions of the Penn Treebank Project (<a href=\"http://www.cis.upenn.edu/~treebank/\">http://www.cis.upenn.edu/~treebank/</a>). For example, a plural noun is denoted NNS, a singular or mass noun is NN, and a determiner (such as&#160;<i>a/an</i>,&#160;<i>every</i>,&#160;<i>no</i>,&#160;<i>the</i>,<i>another</i>,&#160;<i>any</i>,&#160;<i>some</i>,&#160;<i>each</i>, etc.) as DT.<span><br/></span></div><div><br/></div><div>For more information visit&#160;<a href=\"http://opennlp.apache.org/\">http://opennlp.apache.org</a>.<br/></div>","submitted_at":1430446049000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":12},{"algo_id":2596,"object_id":"b8012543-84c8-11e4-be78-12e1fbfbf82c","username":"graph","algoname":"JBellmanFordShortestPath","algolabel":"JBellmanFordShortestPath","language":"java3","card_line":"Returns the shortest path from one vertex to another in a graph using Bellman Ford Shortest Path algorithm.","summary":"<span>Returns the shortest path from one vertex to another in a graph using Bellman Ford Shortest Path algorithm.&#160;</span><div><br/></div><div>Inputs:</div><div><ul><li>A graph represented as a map from vertices (strings) to a list of neighbors (list of strings) <b>OR</b> the url to the Data API file that holds the graph that you would like to be read (currently supported formats: GML)</li><li>Start vertex (string)</li><li>End vertex (string)</li></ul></div>","submitted_at":1430444279000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":12},{"algo_id":1518,"object_id":"4395e848-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"AODE","algolabel":"AODE","language":"java3","card_line":"This is the AODE classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/AODE.html","summary":"<div><span>This is the AODE classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/AODE.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/AODE.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443992000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":12},{"algo_id":1778,"object_id":"5dc1b759-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"StringToWordVector","algolabel":"StringToWordVector","language":"java3","card_line":"This is the StringToWordVector filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/StringToWordVector.html","summary":"<div><span>This is the StringToWordVector filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/StringToWordVector.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/StringToWordVector.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442342000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":12},{"algo_id":14144,"object_id":"68b11335-e80e-11e4-849b-0670f2dc1320","username":"colmarius","algoname":"Hello","algolabel":"Hello World","language":"java3","card_line":"A simple \"Hello World\" algorithm, which returns \"Hello \" + the algorithm input.","summary":"A simple \"Hello World\" algorithm, which returns \"Hello \" + the algorithm input.","submitted_at":1429612777000,"discoverable_world":true,"source_world":true,"license":"apache2","call_count":12},{"algo_id":14123,"object_id":"a770b69f-e7b8-11e4-849b-0670f2dc1320","username":"z","algoname":"ColorPalettefromImage","algolabel":"Color Palette from Image","language":"python2-2","card_line":"Uses https://github.com/fengsp/color-thief-py","summary":"Uses&#160;<a href=\"https://github.com/fengsp/color-thief-py\">https://github.com/fengsp/color-thief-py</a> to extract color palette from a given image. A Json input with the url and the number of colors that are to be extracted is necessary to run this algorithm.","submitted_at":1429574623000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":12},{"algo_id":87,"object_id":"6775a166-8e3c-11e3-8351-040108385a01","username":"diego","algoname":"Finance_BlackScholesATMOptionValue","algolabel":"Finance Black Scholes ATM Option Value","language":"java3","card_line":"Calculates the Black-Scholes option value of an atm call option.@param","summary":"Calculates the Black-Scholes option value of an atm call option.@param volatility The Black-Scholes volatility.@param optionMaturity The option maturity T.@param forward The forward, i.e., the expectation of the index under the measure associated with payoff unit. @param payoffUnit The payoff unit, i.e., the discount factor or the anuity associated with the payoff. @return Returns the value of a European at-the-money call option under the Black-Scholes model","submitted_at":1445289814000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":11},{"algo_id":16773,"object_id":"2b2e69ce-6264-11e5-aae6-12ad1a8c1691","username":"anowell","algoname":"StaticJson","algolabel":"Static Json","language":"java4","card_line":"Parses a Data API file into a JsonElement and returns it.","summary":"<p>Parses a Data API file into a JsonElement and returns it.</p><p>Intended for testing purposes as a way to quickly replay specific results that might otherwise take much longer to repro.</p><p>But perhaps one day I'll build an entire Open Data platform based on the idea of just returning static JSON files.<br/></p>","submitted_at":1443065611000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":11},{"algo_id":15365,"object_id":"557cfb37-1c31-11e5-a825-06910d997133","username":"docs","algoname":"PythonAddOne","algolabel":"Python Add One","language":"python2-2","card_line":"Takes a long and adds one to it Used in Algorithmia   documentation   to demonstrate API requests","summary":"<p></p><p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\">Takes a long and adds one to it</p><div style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\"><br/></div><div style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\">Used in Algorithmia<span class=\"Apple-converted-space\"> </span><a href=\"https://algorithmia.com/docs\" style=\"color: rgb(153, 99, 255);background-color: transparent;\">documentation</a><span class=\"Apple-converted-space\"> </span>to demonstrate API requests</div><br/>","submitted_at":1435343552000,"discoverable_world":true,"source_world":true,"license":"mit","call_count":11},{"algo_id":2639,"object_id":"02a390f3-86f7-11e4-be78-12e1fbfbf82c","username":"ApacheOpenNLP","algoname":"POSTagger","algolabel":"POS Tagger","language":"java3","card_line":"The Part of Speech Tagger marks tokens with their corresponding word type based on the token itself and the context of the token.","summary":"<span>The Part of Speech Tagger marks tokens with their corresponding word type based on the token itself and the context of the token. A token might have multiple pos tags depending on the token and the context. The OpenNLP POS Tagger uses a probability model to predict the correct pos tag out of the tag set. To limit the possible tags for a token a tag dictionary can be used which increases the tagging and runtime performance of the tagger.</span><div><span><br/></span></div><div>Parts are tagged according to the conventions of the Penn Treebank Project (<a href=\"http://www.cis.upenn.edu/~treebank/\">http://www.cis.upenn.edu/~treebank/</a>). For example, a plural noun is denoted NNS, a singular or mass noun is NN, and a determiner (such as&#160;<i>a/an</i>,&#160;<i>every</i>,&#160;<i>no</i>,&#160;<i>the</i>,<i>another</i>,&#160;<i>any</i>,&#160;<i>some</i>,&#160;<i>each</i>, etc.) as DT.<span><br/></span></div><div><br/></div><div>For more information visit&#160;<a href=\"http://opennlp.apache.org/\">http://opennlp.apache.org</a>.<br/></div>","submitted_at":1430446048000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":11},{"algo_id":1525,"object_id":"4e26fc19-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"NaiveBayes","algolabel":"NaiveBayes","language":"java3","card_line":"This is the NaiveBayes classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/NaiveBayes.html","summary":"<div><span>This is the NaiveBayes classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/NaiveBayes.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/NaiveBayes.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443960000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":11},{"algo_id":1531,"object_id":"56b6cee8-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"GaussianProcesses","algolabel":"GaussianProcesses","language":"java3","card_line":"This is the GaussianProcesses classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/GaussianProcesses.html","summary":"<div><span>This is the GaussianProcesses classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/GaussianProcesses.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/GaussianProcesses.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443935000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":11},{"algo_id":13328,"object_id":"af64aaae-d9d4-11e4-8df1-12f53eafe9d2","username":"lgastako","algoname":"quicksort","algolabel":"quicksort","language":"scala2","submitted_at":1428047755000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":11},{"algo_id":13066,"object_id":"1c1fbe56-d623-11e4-8df1-12f53eafe9d2","username":"e","algoname":"crackmd5","algolabel":"crackmd5","language":"java3","submitted_at":1427641731000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":11},{"algo_id":12117,"object_id":"e6547908-cef5-11e4-abe1-12f53eafe9d2","username":"leonardosapiras","algoname":"QuickSort","algolabel":"QuickSort","language":"python2-2","submitted_at":1426852737000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":11},{"algo_id":11272,"object_id":"b7c06c5d-ce3e-11e4-abe1-12f53eafe9d2","username":"brunni","algoname":"AddressExtractionFromText","algolabel":"Address Extraction From Text","language":"java3","card_line":"Extracts addresses, contact data, company names and other information from text.","summary":"<p>Extracts addresses, contact data, company names and other information from text.<br/></p>&#10;<p>Emphasis currently is on Germany, Austria and Switzerland. The &#10;quality for other countries varies but can be optimized on demand.</p>'results' contains the extracted data (may be empty). The algorithm may return several results and several contact persons &#10;within a result. Be aware that no result will be returned when no postal code / town combination is found. Each result contains:<br/><br/><p>country, zip, city, street, company, phone, fax, iban, bic: Should be self-explanatory.</p><p>emailhash: SHA-1-Hash of &#8216;mailto:&#8217; + mail address (to prevent abuse, plain addresses are not available)</p><p>vatidnr: VAT ID<br/></p><p>regnrde: Trade register number and town of register court (Germany only)<br/></p><p>managers:&#10; List of contact persons with relevant catchword and distance of name to&#10; catchword (currently only supported on german websites)<br/></p><p>blz: German bank code (Germany only)<br/></p><p>See /brunni/AddressExtraction for a version that crawls websites.<br/></p>","submitted_at":1426774534000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":11},{"algo_id":9291,"object_id":"b09ba8bb-ca4c-11e4-abe1-12f53eafe9d2","username":"peace098beat","algoname":"FirstAlgorithm","algolabel":"FirstAlgorithm","language":"python2-2","submitted_at":1426340091000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":11},{"algo_id":6293,"object_id":"cb526a6f-c4d4-11e4-840d-12f53eafe9d2","username":"WebPredict","algoname":"GenerateSurrogateKey","algolabel":"GenerateSurrogateKey","language":"java3","card_line":"Generates an additional integer surrogate key row in a collection of columnar data.","summary":"Generates an additional integer surrogate key row in a collection of columnar data.<div><br/></div><div>First parameter: array of data rows</div><div>Second parameter: column index to create the surrogate key</div><div>Third parameter: starting value for surrogate key (default is 1)</div><div>Fourth parameter: increment value for surrogate key (default is 1)</div>","submitted_at":1445290361000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":10},{"algo_id":4109,"object_id":"41aac37a-b158-11e4-840d-12f53eafe9d2","username":"WebPredict","algoname":"GetLevelOrderTraversal","algolabel":"GetLevelOrderTraversal","language":"java3","card_line":"Returns level order traversal of a binary tree.","summary":"Returns level order traversal of a binary tree.","submitted_at":1445290357000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":10},{"algo_id":6282,"object_id":"eaf476fa-c44c-11e4-840d-12f53eafe9d2","username":"WebPredict","algoname":"RemoveDuplicateRows","algolabel":"RemoveDuplicateRows","language":"java3","card_line":"Removes duplicate concurrent rows.","summary":"Removes duplicate concurrent rows. User can specify which subset of columns are used to determine a duplicate row.<div><br/></div><div>First parameter: array of row data</div><div>Second parameter: list of column indices that constitute the set of column to use to compare to the previous row. If null, the entire row is compared to the previous one.</div>","submitted_at":1445290311000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":10},{"algo_id":6292,"object_id":"1ae63dfd-c4cf-11e4-840d-12f53eafe9d2","username":"WebPredict","algoname":"SplitColumnOn","algolabel":"SplitColumnOn","language":"java3","card_line":"Splits columnar data at a particular column index using a given split string.","summary":"Splits columnar data at a particular column index using a given split string.<div><br/></div><div>First parameter: list of rows</div><div>Second parameter: column index to split on</div><div>Third parameter: split string</div><div><br/></div><div>The first row's column value at the split column index is used to determine how many columns will be produced by the column split.</div>","submitted_at":1445290273000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":10},{"algo_id":30634,"object_id":"6b855c81-7444-11e5-aae6-12ad1a8c1691","username":"kmooney","algoname":"test","algolabel":"test","language":"python2-2","submitted_at":1445027618000,"discoverable_world":true,"source_world":true,"license":"gpl3","call_count":10},{"algo_id":16833,"object_id":"4a41ffde-65b3-11e5-aae6-12ad1a8c1691","username":"nlp","algoname":"RecommendationsFromText","algolabel":"Recommendations From Text","language":"java4","card_line":"Given a map from document name to text, generate a recommendation graph.","summary":"<p>Given a map from document name to text, generate a recommendation graph.</p>","submitted_at":1443476545000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":10},{"algo_id":15643,"object_id":"8aa154d1-2a7a-11e5-a825-06910d997133","username":"mheimann","algoname":"WordOperations","algolabel":"Word Operations","language":"python2-2","card_line":"word2vec is a celebrated word embedding that represents each word as a vector whose features are intended to maximize the predictive accuracy of the given word predicting the appea...","summary":"<p><a href=\"https://code.google.com/p/word2vec/\">word2vec</a> is a celebrated word embedding that represents each word as a vector whose features are intended to maximize the predictive accuracy of the given word predicting the appearance of other words that do in fact occur in similar contexts.  This algorithm is based on the Gensim implementation of word2vec, trained on a Google News corpus of over 100 billion words (freely available and linked above).  It was observed on very large corpuses that words would demonstrate linguistic regularities, such as &#34;vec(king) - vec(man) + vec(woman) ≈ vec(queen)&#34;.</p><p>This algorithm allows the user to perform operations on words, either mathematically (word1 - word2 + word3 = ?), or in the popular academic format of analogies (word1 is to word2 as word3 is to ?).  In the format provided, mathematical symbols must be preceded by a double backslash (in case one of the words for some reason is a mathematical symbol). </p>","submitted_at":1440199781000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":10},{"algo_id":15023,"object_id":"e25cfae2-0e25-11e5-89ff-123a3b0693f5","username":"bkyan","algoname":"ResizeImage","algolabel":"Resize Image","language":"java3","card_line":"This algorithm lets you resize an image in your data collection.","summary":"<p>This algorithm lets you resize an image in your data collection.</p><p>Input Parameters:</p><ol><li>Input Collection</li><li>Input Filename</li><li>Output Collection</li><li>Output Filename</li><li>Output Width (Pixels)</li><li>Output Height (Pixels)</li></ol><p><br/></p>","submitted_at":1433800240000,"discoverable_world":true,"source_world":true,"license":"apache2","call_count":10},{"algo_id":13046,"object_id":"b631690c-d586-11e4-8df1-12f53eafe9d2","username":"Sahil","algoname":"GetWebpage","algolabel":"GetWebpage","language":"java3","submitted_at":1427573584000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":10},{"algo_id":10151,"object_id":"b2ff7f25-caf6-11e4-abe1-12f53eafe9d2","username":"faddishworm","algoname":"CamelCaseString","algolabel":"Camel Case String","language":"java3","card_line":"Given a string, this function returns a camel case version of the same string.","summary":"Given a string, this function returns a camel case version of the same string.","submitted_at":1426413771000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":10},{"algo_id":7508,"object_id":"d0e2e6d7-c900-11e4-abe1-12f53eafe9d2","username":"kiran11471","algoname":"NumberGuessingGame","algolabel":"NumberGuessingGame","language":"java3","submitted_at":1426196918000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":10},{"algo_id":3408,"object_id":"d67c5ee7-a658-11e4-840d-12f53eafe9d2","username":"TGRedBaron","algoname":"MySQLtoJSON","algolabel":"MySQLtoJSON","language":"java3","card_line":"Perform generic MySQL query with creds passed via Algorithmia DataAPI configuration file.","summary":"<div>Perform generic MySQL query with creds passed via Algorithmia DataAPI configuration file.</div><div><br/></div><div>Input:</div><pre>[&#34;data://user/collection/configFile.json&#34;,&#34;select * on table limit 1;&#34;]</pre><div><br/></div><div>data://user/collection/configFile.json:<br/></div><div><pre>{<br/>&#160; &#160; &#34;url&#34;:&#34;db.example.com&#34;,<br/>&#160; &#160; &#34;user&#34;:&#34;test&#34;,<br/>&#160; &#160; &#34;password&#34;:&#34;blah&#34;<br/>}</pre></div><div><br/></div>","submitted_at":1445371567000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":9},{"algo_id":4266,"object_id":"e10ffe2a-b23d-11e4-840d-12f53eafe9d2","username":"craignicol","algoname":"conjugate","algolabel":"conjugate","language":"java3","submitted_at":1445292010000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":9},{"algo_id":3197,"object_id":"d63fcae4-a280-11e4-be78-12e1fbfbf82c","username":"Geo","algoname":"UTMToLatLong","algolabel":"UTM To Lat Long","language":"java3","card_line":"Converts UTM coordinates to latitude/longitude ( http://en.wikipedia.org/wiki/Universal_Transverse_Mercator_coordinate_system ).","summary":"Converts UTM coordinates to latitude/longitude (<a href=\"http://en.wikipedia.org/wiki/Universal_Transverse_Mercator_coordinate_system\">http://en.wikipedia.org/wiki/Universal_Transverse_Mercator_coordinate_system</a>).&#160;<div><br/></div><div>Input is a string of form &#160;&#34;&lt;longitude zone&gt; &#160;&lt;latitude zone&gt; &#160;&lt;easting&gt; &#160;&lt;northing&gt;&#34; &#160;where&#160;<em>easting</em>&#160;is the projected distance from longitude zone's central meridian and&#160;<em>northing</em>&#160;is the projected distance from the equator. The values of both easting and northing are given in meters. For example, the latitude/longitude coordinates 61.44, 25.40 are presented in UTM as 35 V 414668 6812844; the latitude/longitude coordinates -47.04, -73.48 are 18 G 615471 4789269 in UTM.<br/></div><div><br/></div><div>Based on coordinate conversion software by Sami Salkosuo at IBM, see&#160;<a href=\"https://www.ibm.com/developerworks/java/library/j-coordconvert/\">https://www.ibm.com/developerworks/java/library/j-coordconvert/</a>&#160;for more details.</div>","submitted_at":1445291719000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":9},{"algo_id":3915,"object_id":"06c834e7-ac94-11e4-840d-12f53eafe9d2","username":"WebPredict","algoname":"TelemetryAnalysis","algolabel":"TelemetryAnalysis","language":"java3","card_line":"Computes basic useful values from driver telemetry data, like max/average speeds, max/average acceleration/deceleration, number of stops, time stopped, apparent discontinuities, et...","summary":"Computes basic useful values from driver telemetry data, like max/average speeds, max/average acceleration/deceleration, number of stops, time stopped, apparent discontinuities, etc.<div><br/></div><div>Input data is a list of X,Y points per second in time. Output values are in meters (per second).</div>","submitted_at":1445290260000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":9},{"algo_id":2679,"object_id":"a53f9e17-8a34-11e4-be78-12e1fbfbf82c","username":"Geo","algoname":"ZipToState","algolabel":"ZipToState","language":"java3","card_line":"Takes a zip code, returns the state that contains that zipcode.","summary":"Takes a zip code, returns the state that contains that zipcode. If not found, returns &#34;Zip Code not found!&#34;<div><br/></div><div>Based on&#160;<a href=\"http://federalgovernmentzipcodes.us/\">http://federalgovernmentzipcodes.us/</a>, using data last updated 1/22/2012.<br/><div><br/></div><div><br/></div></div>","submitted_at":1445289711000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":9},{"algo_id":2536,"object_id":"2aaafd63-82e1-11e4-be78-12e1fbfbf82c","username":"major7","algoname":"IBANGenerator","algolabel":"IBAN Generator","language":"java3","card_line":"Calculates IBAN bank numbers, works for banks in the netherlands and probably some other countries as well (Not tested)","summary":"Calculates IBAN bank numbers, works for banks in the netherlands and probably some other countries as well (Not tested)","submitted_at":1445289485000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":9},{"algo_id":16804,"object_id":"b5c1a193-6384-11e5-aae6-12ad1a8c1691","username":"adriantest","algoname":"zepback","algolabel":"zepback","language":"python2-2","submitted_at":1443254778000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":9},{"algo_id":14694,"object_id":"f21d8a9b-fc9a-11e4-89ff-123a3b0693f5","username":"WebPredict","algoname":"ValidParens","algolabel":"ValidParens","language":"java3","card_line":"Returns true if input string has balanced parens, curly braces, square brackets, or any combination of the three.","summary":"<p>Returns true if input string has balanced parens, curly braces, square brackets, or any combination of the three. False if they are not balanced.</p>","submitted_at":1431870344000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":9},{"algo_id":14475,"object_id":"a06fa28b-f354-11e4-849b-0670f2dc1320","username":"chrisrobbins157","algoname":"RandomAllocator","algolabel":"Random Allocator","language":"python2-2","card_line":"This algorithm allocates random percentages to each item in a list where the sum of the percentages equals 100%.","summary":"<p>This algorithm allocates random percentages to each item in a list where the sum of the percentages equals 100%.</p><div><br/></div><div><span style=\"color: rgb(85, 85, 85);float: none;background-color: rgb(255, 255, 255);\">One example where this is useful is portfolio optimization where the many hypothetical portfolios are generated to find the optimal portfolio allocation for each level of risk. There are many other practical uses.</span></div><div><br/></div><div>The input is limited to 10 items. For an unlimited number of items see Random Allocator - Unlimited Items listed here: </div><div><br/></div><div>https://algorithmia.com/algorithms/chrisrobbins157/RandomAllocatorUnlimitedItems</div><p></p>","submitted_at":1430851076000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":9},{"algo_id":102,"object_id":"6775a8e4-8e3c-11e3-8351-040108385a01","username":"freddyH","algoname":"Finance_FutureValue","algolabel":"Finance Future Value","language":"java3","card_line":"The future value of money is how much it will be worth at some time in the future.","summary":"The future value of money is how much it will be worth at some time in the future. The future value formula shows how much an investment will be worth after compounding for so many years.&nbsp;<div><br></div><div>&nbsp;FV(rate, NPER, PMT, PV, type)\nReturns the future value of an investment based on periodic, constant payments and a constant interest rate.&nbsp;</div><div><ul><li>&nbsp;Rate is the periodic interest rate.&nbsp;</li><li>&nbsp;NPER is the total number of periods.&nbsp;</li><li>&nbsp;PMT is the annuity paid regularly per period.&nbsp;</li><li>&nbsp;PV (optional) is the present cash value of an investment.&nbsp;</li><li>&nbsp;Type (optional) defines whether the payment is due at the beginning (1) or the end (0) of        a period.</li></ul></div>","submitted_at":1430447410000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":9},{"algo_id":230,"object_id":"363bf2e8-98fb-11e3-8351-040108385a01","username":"graph","algoname":"Distance","algolabel":"Distance","language":"java3","card_line":"Returns the distance between two vertices in a directed graph.","summary":"Returns the distance between two vertices in a directed graph.<div><div><br class=\"Apple-interchange-newline\">Input:</div><div><ul><li>A graph represented as a map from vertices (strings) to a list of neighbors (list of strings).</li><li>The start vertex (string)</li><li>The goal vertex (string)</li></ul></div></div>","submitted_at":1430444273000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":9},{"algo_id":14149,"object_id":"f1a896e9-e829-11e4-849b-0670f2dc1320","username":"lamrongol","algoname":"ExtractImageListFromUrl","algolabel":"ExtractImageListFromUrl","language":"java3","card_line":"Extract image url list ordered by size.","summary":"Extract image url list ordered by size.<br/>Features<br/>-Support img tags with attributes &#34;src&#34; and &#34;data-original&#34;<br/>-Get image size by not loading full image file(this effects when there are many and big images)<br/><br/>https://algorithmia.com/bounties/61","submitted_at":1429631362000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":9},{"algo_id":13216,"object_id":"3d62f823-d7f1-11e4-8df1-12f53eafe9d2","username":"williamaustinwebb","algoname":"GetURLFromSite","algolabel":"Get URL From Site","language":"java3","submitted_at":1427839430000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":9},{"algo_id":8255,"object_id":"ae4fe917-c967-11e4-abe1-12f53eafe9d2","username":"audio","algoname":"LowpassFilter","algolabel":"LowpassFilter","language":"java3","card_line":"A single pole recursive lowpass filter for reducing high frequency audio content with 6 dB/octave.","summary":"A single pole recursive lowpass filter for reducing high frequency audio content with 6 dB/octave. The filter frequency is expected to be normalized, ie. between 0 and 0.5. The normalized frequency is simply the target frequency divided by the sample rate (eg. 1000Hz / 44100Hz = 0.02267). To let the filter ring out, a number of samples can be specified that will be appended as zeros to the input, and extend the filter response by the same number of samples.<div><br/></div><div><div>The input is not modified.<br/></div><div><br/></div><div></div></div>","submitted_at":1426244135000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":9},{"algo_id":6304,"object_id":"bafb4ff8-c5da-11e4-abe1-12f53eafe9d2","username":"pigmeubr","algoname":"GCD","algolabel":"GCD","language":"java3","card_line":"Algorithm to calculate the GCD (Greatest Common Divisor) between two numbers.","summary":"Algorithm to calculate the GCD&#160;(Greatest Common Divisor) between two numbers.","submitted_at":1425850874000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":9},{"algo_id":4324,"object_id":"c56c03e8-b2cd-11e4-840d-12f53eafe9d2","username":"A100562134","algoname":"Bubble_Sort","algolabel":"Bubble_Sort","language":"java3","submitted_at":1445292297000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":8},{"algo_id":6279,"object_id":"36545f9c-c427-11e4-840d-12f53eafe9d2","username":"WebPredict","algoname":"RemoveRowsIfValue","algolabel":"RemoveRowsIfValue","language":"java3","card_line":"Filters out all rows from a collection that contain column values of a certain specified value.","summary":"Filters out all rows from a collection that contain column values of a certain specified value. Useful for things like filtering out invalid / blank rows while doing ETL.<div><br/></div><div>First parameter is collection of rows, second is list of relevant indices to consider when looking for column values that would call for row removal, and the third parameter is the value to compare column values to. Can accept empty string and null.</div>","submitted_at":1445290299000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":8},{"algo_id":426,"object_id":"d071f8e0-ca4e-11e3-b18f-040108385a01","username":"dmosites","algoname":"shellsort","algolabel":"shellsort","language":"java3","submitted_at":1445289791000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":8},{"algo_id":15677,"object_id":"fa686bea-2bed-11e5-a825-06910d997133","username":"kenny","algoname":"Echo","algolabel":"Echo","language":"java3","submitted_at":1437073714000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":8},{"algo_id":15374,"object_id":"a860dc19-1c7b-11e5-a825-06910d997133","username":"gabrielalmeida","algoname":"DisjointSet","algolabel":"Disjoint Set","language":"java3","card_line":"Runs the Disjoint Set (or Union/Find) algorithm on a list of list of IDs, returning a list of the merged sets with at least one element in common.","summary":"<p>Runs the Disjoint Set (or Union/Find) algorithm on a list of list of IDs, returning a list of the merged sets with at least one element in common.<br/></p><p>This implementation takes amortized time of pratically O(1) for inserting any element on the data structure.</p><p>Based on <a href=\"https://en.wikipedia.org/wiki/Disjoint-set_data_structure\">https://en.wikipedia.org/wiki/Disjoint-set_data_structure</a></p>","submitted_at":1435447526000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":8},{"algo_id":14342,"object_id":"9877ad31-eeb4-11e4-849b-0670f2dc1320","username":"z","algoname":"ClusterSocrataLocationData","algolabel":"Cluster Socrata Location Data","language":"java3","card_line":"This algorithm can be used to cluster and visualize Socrata data presented as a CSV file.","summary":"<div>This algorithm can be used to cluster and visualize Socrata data presented as a CSV file. In theory, and CSV file that you would like to cluster and visualize according to a &#34;title&#34; and latitude and longitude can be fed into this algorithm. The resulting map is written to your Data collection, given as the last input to this algorithm.</div><div><br/></div><div>The example in the sample input below clusters Assault events taken from raw Seattle crime data.</div><div><br/></div>Takes as input:<div><ul><li>Dataset CSV</li><li>column index of crime type</li><li>column index of latitude</li><li>column index of longitude</li><li>crime type to cluster</li><li>number of clusters</li><li>data api destination</li></ul><div>!!! Warning: Please make a new Data collection and pass that in instead of the last value in sample input.</div></div>","submitted_at":1433796107000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":8},{"algo_id":14484,"object_id":"468b0c22-f375-11e4-849b-0670f2dc1320","username":"util","algoname":"RandomNumber","algolabel":"Random Number","language":"java3","card_line":"Returns a random number between 0 and 1.","summary":"Returns a random number between 0 and 1.<br/>","submitted_at":1430864611000,"discoverable_world":true,"source_world":true,"license":"mit","call_count":8},{"algo_id":1528,"object_id":"52443461-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"NaiveBayesSimple","algolabel":"NaiveBayesSimple","language":"java3","card_line":"This is the NaiveBayesSimple classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/NaiveBayesSimple.html","summary":"<div><span>This is the NaiveBayesSimple classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/NaiveBayesSimple.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/NaiveBayesSimple.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443945000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":8},{"algo_id":1760,"object_id":"438856d6-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"NumericToNominal","algolabel":"NumericToNominal","language":"java3","card_line":"This is the NumericToNominal filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/NumericToNominal.html","summary":"<div><span>This is the NumericToNominal filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/NumericToNominal.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/NumericToNominal.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442629000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":8},{"algo_id":2741,"object_id":"5b3a8ea5-9a22-11e4-be78-12e1fbfbf82c","username":"TimeSeries","algoname":"FourierDetrend","algolabel":"Fourier Detrend","language":"java3","card_line":"This algorithm takes a time series and a parameter k.","summary":"<div>This algorithm takes a time series and a parameter k. It takes the Fourier transform of the series, zeroes out the top k strongest frequencies, and maps the result back into a time series with an inverse Fourier transform.</div><div><br/></div><div>This is a speculative algorithm for removing seasonality - u<span>se it for exploratory analysis but try not to draw too many conclusions unless you corroborate with other methods.</span></div><div><span><br/></span></div><div>This is based on an implementation of the Fast Fourier Transform (in this the real Fourier Transform in the JTranforms library -&#160;<a href=\"https://sites.google.com/site/piotrwendykier/software/jtransforms\">https://sites.google.com/site/piotrwendykier/software/jtransforms</a>) Note that there are many different conventions used in signal processing, so be careful as the ones chosen here may not be the ones you need.&#160;<span><br/></span></div>","submitted_at":1430441469000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":8},{"algo_id":2739,"object_id":"737167d8-993f-11e4-be78-12e1fbfbf82c","username":"TimeSeries","algoname":"CumulativeMovingAverage","algolabel":"Cumulative Moving Average","language":"java3","card_line":"Returns the Cumulative Moving Average ( http://en.wikipedia.org/wiki/Moving_average#Cumulative_moving_average ) of a time series.","summary":"Returns the Cumulative Moving Average (<a href=\"http://en.wikipedia.org/wiki/Moving_average#Cumulative_moving_average\">http://en.wikipedia.org/wiki/Moving_average#Cumulative_moving_average</a>) of a time series. That is, each point is replaced by the average of itself and all the points proceeding it. This can be used to smooth a time series.","submitted_at":1430441387000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":8},{"algo_id":2325,"object_id":"60dcaa1f-79a6-11e4-bad7-04011d260101","username":"StanfordNLP","algoname":"Parse","algolabel":"Parse","language":"java3","card_line":"Takes a text string as input, splits the text into sentences, and parses each sentence, outputting the flattened parse tree into an object list.","summary":"Takes a text string as input, splits the text into sentences, and parses each sentence, outputting the flattened parse tree into an object list. The parse tree is a decomposition of the sentence according to its grammatical structure, splitting out phrases, determining the subject or object of a verb, etc. The parser here is probabilistic and will output what it determines to be the most likely parse of a given sentence. You can read more about how it works&#160;<a href=\"http://nlp.stanford.edu/software/lex-parser.shtml\">http://nlp.stanford.edu/software/lex-parser.shtml</a>.<div><br/></div><div><div>Parts are tagged according to the conventions of the Penn Treebank Project (<a href=\"http://www.cis.upenn.edu/~treebank/\">http://www.cis.upenn.edu/~treebank/</a>). For example, a plural noun is denoted NNS, a singular or mass noun is NN, and a determiner (such as&#160;<i>a/an</i>,&#160;<i>every</i>,&#160;<i>no</i>,&#160;<i>the</i>,<i>another</i>,&#160;<i>any</i>,&#160;<i>some</i>,&#160;<i>each</i>, etc.) as DT.<br/></div><div><br/></div><div>For more information, please refer to&#160;<a href=\"http://nlp.stanford.edu/software/corenlp.shtml\">http://nlp.stanford.edu/software/corenlp.shtml</a>&#160;or&#160;Manning, Christopher D., Surdeanu, Mihai, Bauer, John, Finkel, Jenny, Bethard, Steven J., and McClosky, David. 2014.&#160;<a href=\"http://nlp.stanford.edu/pubs/StanfordCoreNlp2014.pdf\">The Stanford CoreNLP Natural Language Processing Toolkit</a>. In&#160;<i>Proceedings of 52nd Annual Meeting of the Association for Computational Linguistics: System Demonstrations</i>, pp. 55-60.<br/></div></div>","submitted_at":1430421256000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":8},{"algo_id":7022,"object_id":"dd401f79-c8e3-11e4-abe1-12f53eafe9d2","username":"media","algoname":"elo","algolabel":"elo","language":"java3","submitted_at":1427414955000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":8},{"algo_id":8500,"object_id":"51a8befd-c98c-11e4-abe1-12f53eafe9d2","username":"audio","algoname":"FrequencyRemover","algolabel":"FrequencyRemover","language":"java3","card_line":"Removes a frequency component from an audio signal.","summary":"Removes a frequency component from an audio signal. This is using a recursive filter with a very narrow bandwith on the selected frequency.<div><br/></div><div><div>Input parameter:</div><div>double[] inputArray, double frequency, double samplerate</div><div><br/></div></div><div>The input is not modified.</div><div><br/></div>","submitted_at":1426257047000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":8},{"algo_id":6277,"object_id":"5c8d2f57-c424-11e4-840d-12f53eafe9d2","username":"WebPredict","algoname":"ColumnSubset","algolabel":"ColumnSubset","language":"java3","card_line":"Selects a reordered subset from an array of arrays.","summary":"Selects a reordered subset from an array of arrays. Useful for ETL transformations (select a subset of columns, possibly in a different order, from a CSV file for example).","submitted_at":1445290382000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":7},{"algo_id":3830,"object_id":"84ba21bd-abfa-11e4-840d-12f53eafe9d2","username":"WebPredict","algoname":"ListAnagrams","algolabel":"ListAnagrams","language":"java3","card_line":"Filters an array of strings to only those that are anagrams of some other word in the array.","summary":"Filters an array of strings to only those that are anagrams of some other word in the array.","submitted_at":1445290344000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":7},{"algo_id":6291,"object_id":"9edf34b4-c4cb-11e4-840d-12f53eafe9d2","username":"WebPredict","algoname":"MergeColumns","algolabel":"MergeColumns","language":"java3","card_line":"Merge columns from from a collection of input rows into a designated column index, with an optional separator.","summary":"Merge columns from from a collection of input rows into a designated column index, with an optional separator.<div><br/></div><div>First parameter: input row data (array of rows)</div><div>Second parameter: list of column indices to merge (zero based)</div><div>Third parameter: optional destination index of merged columns (if null, appends to end of row as a new column)</div><div>Fourth parameter: optional string separator between merged column values</div><div><br/></div>","submitted_at":1445290328000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":7},{"algo_id":310,"object_id":"5cd09bc8-9f91-11e3-8351-040108385a01","username":"codeb34v3r","algoname":"ReverseLinkedList","algolabel":"ReverseLinkedList","language":"java3","card_line":"Reverse a linked list in-place with no copy (iterative implementation).","summary":"Reverse a linked list in-place with no copy (iterative implementation).<div><br></div><div>A-&gt;B-&gt;C-&gt;D &nbsp; to D-&gt;C-&gt;B-&gt;A</div>","submitted_at":1445289904000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":7},{"algo_id":75,"object_id":"67759fa7-8e3c-11e3-8351-040108385a01","username":"diego","algoname":"Finance_BlackScholesGeneralizedOptionValue","algolabel":"Finance Black Scholes Generalized OptionValue","language":"java3","card_line":"Black-Scholes option value of a call i.e: the payoff max(S(T)-K,0)P, where S follows a log-normal process with constant log-volatility.","summary":"Black-Scholes option value of a call i.e: the payoff max(S(T)-K,0)P, where S follows a log-normal process with constant log-volatility.\n@param forward The forward of the underlying.\n@param volatility The Black-Scholes volatility.\n@param optionMaturity The option maturity T.\n@param optionStrike The option strike. If the option strike is &le; 0.0 the method returns the value of the forward contract paying S(T)-K in T.\n@param payoffUnit The payoff unit (e.g., the discount factor)\n@return Returns the value of a European call option under the Black-Scholes model.","submitted_at":1445289805000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":7},{"algo_id":92,"object_id":"6775a342-8e3c-11e3-8351-040108385a01","username":"diego","algoname":"WordCounter","algolabel":"Word Counter","language":"java3","card_line":"Receives a string , returns a count of words.","summary":"Receives a string , returns a count of words. Note that internal quotation marks must either be escaped or removed.","submitted_at":1445289802000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":7},{"algo_id":16795,"object_id":"8e0d1155-632a-11e5-aae6-12ad1a8c1691","username":"opencv","algoname":"BasicThumbnail","algolabel":"BasicThumbnail","language":"java4","card_line":"Takes an image (data uri, base64 encoded, or web url) and dimensions for a thumbnail and returns the binary of the resulting PNG encoded image.","summary":"<p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\">Takes an image (data uri, base64 encoded, or web url) and dimensions for a thumbnail and returns the binary of the resulting PNG encoded image.</p><p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\"><span>Pipe your input to this algorithm as an array with first element the string containing the image in one of the formats mentioned above, an integer for desired thumbnail width and an integer for desired thumbnail height.</span><br/></p>","submitted_at":1443147151000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":7},{"algo_id":16379,"object_id":"e2fde7d4-4af2-11e5-aae6-12ad1a8c1691","username":"jylee313","algoname":"MonteCarloTreeSearch","algolabel":"Monte-Carlo Tree Search","language":"python2-2","submitted_at":1440486365000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":7},{"algo_id":14856,"object_id":"facee05d-0600-11e5-89ff-123a3b0693f5","username":"muamw10","algoname":"LatLonPathDistance","algolabel":"LatLonPathDistance","language":"java3","card_line":"LatLonPathDistance computes the total distance in meters from a series of Latitude/Longitude coordinates.","summary":"<p>LatLonPathDistance computes the total distance in meters from a series of Latitude/Longitude coordinates.</p>","submitted_at":1432908208000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":7},{"algo_id":14656,"object_id":"4abca4d2-fa88-11e4-89ff-123a3b0693f5","username":"etl","algoname":"DataAPITest","algolabel":"DataAPITest","language":"java3","submitted_at":1431642859000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":7},{"algo_id":2635,"object_id":"50adf8ee-86f6-11e4-be78-12e1fbfbf82c","username":"ApacheOpenNLP","algoname":"ParseBySentence","algolabel":"Parse By Sentence","language":"java3","card_line":"Takes a block of text, splits into sentences, and returns an array of the parse trees of each sentence.","summary":"Takes a block of text, splits into sentences, and returns an array of the parse trees of each sentence.<div><br/></div><div>Parts are tagged according to the conventions of the Penn Treebank Project (<a href=\"http://www.cis.upenn.edu/~treebank/\">http://www.cis.upenn.edu/~treebank/</a>). For example, a plural noun is denoted NNS, a singular or mass noun is NN, and a determiner (such as&#160;<i>a/an</i>,&#160;<i>every</i>,&#160;<i>no</i>,&#160;<i>the</i>,<i>another</i>,&#160;<i>any</i>,&#160;<i>some</i>,&#160;<i>each</i>, etc.) as DT.<br/></div><div><br/></div><div>For more information visit&#160;<a href=\"http://opennlp.apache.org/\">http://opennlp.apache.org</a>.</div>","submitted_at":1430446062000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":7},{"algo_id":1537,"object_id":"5f4e668c-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"Logistic","algolabel":"Logistic","language":"java3","card_line":"This is the Logistic classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/Logistic.html","summary":"<div><span>This is the Logistic classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/Logistic.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/Logistic.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443911000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":7},{"algo_id":2330,"object_id":"60df38cd-79a6-11e4-bad7-04011d260101","username":"StanfordNLP","algoname":"SentenceSplit","algolabel":"Sentence Split","language":"java3","card_line":"Splits input string into sentences which are returned as a list of strings.","summary":"Splits input string into sentences which are returned as a list of strings.<div><br/></div><div>For more information, please refer to<a href=\"http://nlp.stanford.edu/software/corenlp.shtml\">http://nlp.stanford.edu/software/corenlp.shtml</a>&#160;or&#160;Manning, Christopher D., Surdeanu, Mihai, Bauer, John, Finkel, Jenny, Bethard, Steven J., and McClosky, David. 2014.&#160;<a href=\"http://nlp.stanford.edu/pubs/StanfordCoreNlp2014.pdf\">The Stanford CoreNLP Natural Language Processing Toolkit</a>. In&#160;<i>Proceedings of 52nd Annual Meeting of the Association for Computational Linguistics: System Demonstrations</i>, pp. 55-60.&#160;<br/></div>","submitted_at":1430421530000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":7},{"algo_id":14121,"object_id":"2b75ecd3-e7a5-11e4-849b-0670f2dc1320","username":"nlp","algoname":"YandexLanguageIdentification","algolabel":"Yandex Language Identification","language":"python2-2","card_line":"This algorithm uses Yandex API to detect the language of your text.","summary":"<span>This algorithm uses Yandex API to detect the language of your text.&#160;</span><div><span><br/></span></div><div><div><font color=\"#000000\" face=\"Arial, Helvetica, sans-serif\">The supported languages are:</font></div><div><font color=\"#000000\" face=\"Arial, Helvetica, sans-serif\"><br/></font></div><div><table><tbody><tr><th>Language</th><th>Code</th></tr><tr><td>Albanian</td><td>sq</td></tr><tr><td>Arabian</td><td>ar</td></tr><tr><td>Armenian</td><td>hy</td></tr><tr><td>Azeri</td><td>az</td></tr><tr><td>Belarusian</td><td>be</td></tr><tr><td>Bosnian</td><td>bs</td></tr><tr><td>Bulgarian</td><td>bg</td></tr><tr><td>Catalan</td><td>ca</td></tr><tr><td>Croatian</td><td>hr</td></tr><tr><td>Czech</td><td>cs</td></tr><tr><td>Chinese</td><td>zh</td></tr><tr><td>Danish</td><td>da</td></tr><tr><td>Dutch</td><td>nl</td></tr><tr><td>English</td><td>en</td></tr><tr><td>Estonian</td><td>et</td></tr><tr><td>Finnish</td><td>fi</td></tr><tr><td>French</td><td>fr</td></tr><tr><td>Georgian</td><td>ka</td></tr><tr><td>German</td><td>de</td></tr><tr><td>Greek</td><td>el</td></tr><tr><td>Hebrew</td><td>he</td></tr><tr><td>Hungarian</td><td>hu</td></tr><tr><td>Icelandic</td><td>is</td></tr><tr><td>Indonesian</td><td>id</td></tr><tr><td>Italian</td><td>it</td></tr><tr><td>Japanese</td><td>ja</td></tr><tr><td>Korean</td><td>ko</td></tr><tr><td>Latvian</td><td>lv</td></tr><tr><td>Lithuanian</td><td>lt</td></tr><tr><td>Macedonian</td><td>mk</td></tr><tr><td>Malay</td><td>ms</td></tr><tr><td>Maltese</td><td>mt</td></tr><tr><td>Norwegian</td><td>no</td></tr><tr><td>Polish</td><td>pl</td></tr><tr><td>Portuguese</td><td>pt</td></tr><tr><td>Romanian</td><td>ro</td></tr><tr><td>Russian</td><td>ru</td></tr><tr><td>Spanish</td><td>es</td></tr><tr><td>Serbian</td><td>sr</td></tr><tr><td>Slovak</td><td>sk</td></tr><tr><td>Slovenian</td><td>sl</td></tr><tr><td>Swedish</td><td>sv</td></tr><tr><td>Thai</td><td>th</td></tr><tr><td>Turkish</td><td>tr</td></tr><tr><td>Ukrainian</td><td>uk</td></tr><tr><td>Vietnamese</td><td>vi</td></tr></tbody></table></div><strong></strong><div><strong><br/></strong></div>Powered by Yandex.Translate:&#160;<a target=\"_blank\" href=\"http://translate.yandex.com/\">http://translate.yandex.com/</a><span><br/></span></div>","submitted_at":1429566429000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":7},{"algo_id":13120,"object_id":"5fe13230-d707-11e4-8df1-12f53eafe9d2","username":"util","algoname":"AggregateDirectory","algolabel":"Aggregate Directory","language":"java3","submitted_at":1427841182000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":7},{"algo_id":12428,"object_id":"102db7cf-cf51-11e4-abe1-12f53eafe9d2","username":"herdony","algoname":"GeoDist","algolabel":"GeoDist","language":"java3","card_line":"English / Ingl&#233;s This code can be used for calculate the distance between two points in the world using their's coordinates (latitude, longitude) and the Earth radius (3958.75...","summary":"<h3>English / Ingl&#233;s</h3><p>This code can be used for calculate the distance between two points in the world using their's coordinates (latitude, longitude) and the Earth radius (3958.75 for miles) or (6371 for kilometers) the result is a aproximated distance because the Earth isn't a perfect sphere.</p><div><br/></div><h3>Espa&#241;ol / Spanish</h3><p>Este c&#243;digo se puede utilizar para obtener la distancia aproximada existente entre dos puntos de la Tierra utilizando sus coordenadas (latitud y longitud) y haciendo uso del radio de la Tierra. (3958.75 para millas) o (6371 para kil&#243;metros), el resultado es una distancia aproximada ya que la tierra no es completamente esf&#233;rica.</p>","submitted_at":1427037119000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":7},{"algo_id":6067,"object_id":"7abb1e3d-be0f-11e4-840d-12f53eafe9d2","username":"paulbuis","algoname":"Average","algolabel":"Average ","language":"java3","card_line":"Computes the average of an array of numbers: double apply(double[] input)","summary":"Computes the average of an array of numbers:<div><br/></div><div>double apply(double[] input)</div>","submitted_at":1445290930000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":6},{"algo_id":3705,"object_id":"47b41589-a95b-11e4-840d-12f53eafe9d2","username":"piaktipik","algoname":"Matrix2String","algolabel":"Matrix2String","language":"java3","submitted_at":1445290894000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":6},{"algo_id":3843,"object_id":"2871e561-ac06-11e4-840d-12f53eafe9d2","username":"WebPredict","algoname":"MaxGap","algolabel":"MaxGap","language":"java3","card_line":"Finds the maximum gap between sequential sorted elements from an unsorted input list, in linear time and space.","summary":"Finds the maximum gap between sequential sorted elements from an unsorted input list, in linear time and space.","submitted_at":1445290332000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":6},{"algo_id":3860,"object_id":"01d88ee3-ac14-11e4-840d-12f53eafe9d2","username":"WebPredict","algoname":"RemoveExcessSpaces","algolabel":"RemoveExcessSpaces","language":"java3","card_line":"Removes excess spaces from a list of words separated by whitespace - beginning, in between, and end.","summary":"Removes excess spaces from a list of words separated by whitespace - beginning, in between, and end.","submitted_at":1445290307000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":6},{"algo_id":6294,"object_id":"b43c8cc3-c4dd-11e4-840d-12f53eafe9d2","username":"WebPredict","algoname":"SimplePolygonArea","algolabel":"SimplePolygonArea","language":"java3","card_line":"Computes area of simple polygon.","summary":"Computes area of simple polygon.<div><br/></div><div>Parameter: list of x,y points.</div>","submitted_at":1445290290000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":6},{"algo_id":2190,"object_id":"731e51f6-7085-11e4-bad7-04011d260101","username":"hnarayanan","algoname":"ATest","algolabel":"A Test","language":"java3","submitted_at":1445289677000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":6},{"algo_id":17207,"object_id":"fe3d77ab-7337-11e5-aae6-12ad1a8c1691","username":"manojlds","algoname":"hnscraper","algolabel":"hnscraper","language":"java4","submitted_at":1444912617000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":6},{"algo_id":16705,"object_id":"65cdf4ec-5e5d-11e5-aae6-12ad1a8c1691","username":"opencv","algoname":"PassportPhotoMaker","algolabel":"Passport Photo Maker","language":"java4","card_line":"Takes in an image (in the form of a Data API URL or binary image) and extracts the foreground after detecting the face in the image.","summary":"<p>Takes in an image (in the form of a Data API URL or binary image) and extracts the foreground after detecting the face in the image. A single face should be present in the taken photo. The foreground is returned in the binary format.<br/></p>","submitted_at":1442619145000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":6},{"algo_id":16605,"object_id":"55d3f42d-57ff-11e5-aae6-12ad1a8c1691","username":"cloncaric","algoname":"maxsat","algolabel":"Max-Sat","language":"java4","card_line":"This algorithm solves the unweighted maximum satisfiability problem by invoking a fast SAT solver repeatedly.","summary":"<p>This algorithm solves the <a href=\"https://en.wikipedia.org/wiki/Maximum_satisfiability_problem\">unweighted maximum satisfiability problem</a> by invoking <a href=\"https://algorithmia.com/algorithms/cloncaric/sat\">a fast SAT solver</a> repeatedly. The input consists of a <i>hard</i> formula which MUST be satisfied, and some <i>soft</i> formulas which MAY be satisfied. The output is a model which maximizes the number of satisfied soft formulas.<br/></p><p><b>Input format:</b></p><pre>{<br/>  &#34;hard&#34;: &lt;formula&gt;<br/>  &#34;soft&#34;: [&lt;formula&gt;, &lt;formula&gt;, ...]<br/>}<br/></pre><p>The syntax for &lt;formula&gt;  is described in the <a href=\"https://algorithmia.com/algorithms/cloncaric/sat\">SAT solver documentation</a>.</p><p><b>Output format:</b></p><pre>{<br/>  &#34;model&#34;: &lt;var-to-bool mapping&gt;<br/>  &#34;satSoft&#34;: &lt;indices of satisfied soft formulas&gt;<br/>}<br/></pre>","submitted_at":1441924544000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":6},{"algo_id":15866,"object_id":"fc2f51cd-362c-11e5-aae6-12ad1a8c1691","username":"mheimann","algoname":"Word2VecRepresentation","algolabel":"Word2VecRepresentation","language":"python2-2","card_line":"Takes in a word and gives its word2vec representation using the freely available word vectors trained on a &gt;100 billion word Google News corpus, a 300-dimensional list of real n...","summary":"<p>Takes in a word and gives its word2vec representation using the freely available <a href=\"https://code.google.com/p/word2vec/\">word vectors</a> trained on a &gt;100 billion word Google News corpus, a 300-dimensional list of real numbers. </p>","submitted_at":1438200998000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":6},{"algo_id":14470,"object_id":"9deb603e-f343-11e4-849b-0670f2dc1320","username":"chrisrobbins157","algoname":"PairsGeneratorUnlimitedItemsPerList","algolabel":"Pairs Generator - Unlimited Items Per List","language":"python2-2","card_line":"This algorithm generates a list of all possible pairs from items in a list.","summary":"This algorithm generates a list of all possible pairs from items in a list. This is sometimes an important first step in analyzing and optimizing datasets.<div><br/></div><div>This version allows users to generate pairs for lists with an unlimited number of items. There is also a free version of this algorithm that allows users to generate pairs for a list of up to 10 items.</div>","submitted_at":1430923970000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":6},{"algo_id":2310,"object_id":"c8310c3b-792a-11e4-bad7-04011d260101","username":"opencv","algoname":"MLP","algolabel":"MLP","language":"java3","card_line":"An interface to OpenCV's ANN_MLP, as explained in http://docs.opencv.org/java/org/opencv/ml/CvANN_MLP.html .","summary":"<span>An interface to OpenCV's ANN_MLP, as explained in&#160;</span><font color=\"#6717ff\"><span><u><a href=\"http://docs.opencv.org/java/org/opencv/ml/CvANN_MLP.html\">http://docs.opencv.org/java/org/opencv/ml/CvANN_MLP.html</a></u></span></font><span>.&#160;</span>","submitted_at":1430445503000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":6},{"algo_id":234,"object_id":"74479a42-9933-11e3-8351-040108385a01","username":"graph","algoname":"EulerianCycle","algolabel":"Eulerian Cycle","language":"java3","card_line":"This algorithm will check whether a graph is Eulerian (hence it contains an Eulerian cycle), and if so, return a list of vertices making up the Eulerian cycle.","summary":"This algorithm will check whether a graph is Eulerian (hence it contains an Eulerian cycle), and if so, return a list of vertices making up the Eulerian cycle.<div><br></div><div>An Eulerian circuit is a circuit which traverses each edge exactly once.</div><div><br></div><div><br></div>","submitted_at":1430444223000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":6},{"algo_id":14261,"object_id":"c05e1ee6-eb17-11e4-849b-0670f2dc1320","username":"tonychan","algoname":"FirstOpenSource","algolabel":"FirstOpenSource","language":"java3","submitted_at":1430103234000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":6},{"algo_id":13728,"object_id":"b479fcfd-e1cc-11e4-8df1-12f53eafe9d2","username":"abhishek3f12","algoname":"MD5Generator","algolabel":"MD5Generator","language":"java3","card_line":"Simple MD5 Generator Algo","summary":"Simple MD5 Generator Algo","submitted_at":1428923075000,"discoverable_world":true,"source_world":true,"license":"mit","call_count":6},{"algo_id":12711,"object_id":"25fd9578-d198-11e4-abe1-12f53eafe9d2","username":"emptymalei","algoname":"annode","algolabel":"Artificial Neural Network for Differential Solving","language":"python2-2","card_line":"A senorio of solving differential equations using artificial neural network","summary":"A senorio of solving differential equations using artificial neural network","submitted_at":1427393867000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":6},{"algo_id":12610,"object_id":"019175ef-d0ca-11e4-abe1-12f53eafe9d2","username":"quermd","algoname":"manhattanDistance","algolabel":"manhattanDistance","language":"python2-2","card_line":"Returns Manhattan distance between two points","summary":"Returns Manhattan distance between two points","submitted_at":1427055110000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":6},{"algo_id":11033,"object_id":"856d1b32-cd06-11e4-abe1-12f53eafe9d2","username":"thatguy2048","algoname":"AssignmentBranchAndBound","algolabel":"AssignmentBranchAndBound","language":"java3","card_line":"This is an algorithm with uses the branch and bound method to solve the assignment problem .","summary":"This is an algorithm with uses the <a href=\"http://en.wikipedia.org/wiki/Branch_and_bound\">branch and bound</a> method to solve the <a href=\"http://en.wikipedia.org/wiki/Assignment_problem\">assignment problem</a>.<div><br/></div><div><b>Example:&#160;</b><span>Assigning jobs to a group of people with the time to complete each job by each person known.</span></div><div><span><br/></span></div>&#10;<table>&#10;<tbody><tr>&#10;<td>&#160;&#160;&#160;&#160;</td><td>&#160;&#160;&#160;&#160;</td>&#10;<td><b>Job 0</b></td><td>&#160;&#160;&#160;&#160;</td><td><b>Job 1</b></td><td>&#160;&#160;&#160;&#160;</td><td><b>Job 2</b></td><td>&#160;&#160;&#160;&#160;</td><td><b>Job 3</b></td>&#10;</tr>&#10;<tr>&#10;<td><b>Person 0</b></td><td>&#160;&#160;&#160;&#160;</td>&#10;<td>13</td><td>&#160;&#160;&#160;&#160;</td>&#10;<td>4</td><td>&#160;&#160;&#160;&#160;</td>&#10;<td>7</td><td>&#160;&#160;&#160;&#160;</td>&#10;<td>6</td>&#10;</tr>&#10;<tr>&#10;<td><b>Person 1</b></td><td>&#160;&#160;&#160;&#160;</td>&#10;<td>1</td><td>&#160;&#160;&#160;&#160;</td>&#10;<td>11</td><td>&#160;&#160;&#160;&#160;</td>&#10;<td>5</td><td>&#160;&#160;&#160;&#160;</td>&#10;<td>4</td>&#10;</tr>&#10;<tr>&#10;<td><b>Person 2</b></td><td>&#160;&#160;&#160;&#160;</td>&#10;<td>6</td><td>&#160;&#160;&#160;&#160;</td>&#10;<td>7</td><td>&#160;&#160;&#160;&#160;</td>&#10;<td>2</td><td>&#160;&#160;&#160;&#160;</td>&#10;<td>8</td>&#10;</tr>&#10;<tr>&#10;<td><b>Person 3</b></td><td>&#160;&#160;&#160;&#160;</td>&#10;<td>1</td><td>&#160;&#160;&#160;&#160;</td>&#10;<td>3</td><td>&#160;&#160;&#160;&#160;</td>&#10;<td>5</td><td>&#160;&#160;&#160;&#160;</td>&#10;<td>9</td>&#10;</tr>&#10;</tbody></table><br/>&#10;<div>The input is the cost matrix for each person and job in the form of <b>double[][]</b>. The output is each persons job assignment in the form of <b>int[]</b>.</div><div><br/></div><div><b>Output: </b>[1,3,2,0]</div><div><b>Meaning:&#160;</b></div><pre><b>Person 0 -&gt; Job 1<br/>Person 1 -&gt; Job 3<br/>Person 2 -&gt; Job 2<br/>Person 3 -&gt; Job 0</b></pre>","submitted_at":1426701060000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":6},{"algo_id":11005,"object_id":"0423c9ee-cceb-11e4-abe1-12f53eafe9d2","username":"miscbits","algoname":"DecodeMessage","algolabel":"DecodeMessage","language":"java3","card_line":"a way to decrypt secret messages from the SecretMessager algorithm","summary":"a way to decrypt secret messages from the <a href=\"https://algorithmia.com/algorithms/miscbits/SecretMessenger\">SecretMessager algorithm</a>","submitted_at":1426627371000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":6},{"algo_id":10767,"object_id":"9abc7c39-cbfa-11e4-abe1-12f53eafe9d2","username":"mar00ned","algoname":"RMUpper","algolabel":"RMUpper","language":"python2-2","submitted_at":1426523907000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":6},{"algo_id":9908,"object_id":"69fece67-caa4-11e4-abe1-12f53eafe9d2","username":"WayneS","algoname":"ExecutePythonCodeFreeFullAccess","algolabel":"Execute Python Code Free Full Access","language":"python2-2","card_line":"Execute python code, for example to calculate the first 200 primes.","summary":"Execute python code, for example to calculate the first 200 primes. Result is a JSON object with all the local variables.","submitted_at":1426376858000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":6},{"algo_id":9789,"object_id":"51d70fcf-ca88-11e4-abe1-12f53eafe9d2","username":"vyau","algoname":"Encode_String_for_URL","algolabel":"Encode_String_for_URL","language":"java3","card_line":"Given an input string, will encode necessary characters within the string to make it ready to serve as URL params","summary":"Given an input string, will encode necessary characters within the string to make it ready to serve as URL params","submitted_at":1426364941000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":6},{"algo_id":6305,"object_id":"653089aa-c5dc-11e4-abe1-12f53eafe9d2","username":"pigmeubr","algoname":"LCM","algolabel":"LCM","language":"java3","card_line":"Algorithm to calculate the LCM (Least Common Multiple) between two numbers.","summary":"Algorithm to calculate the LCM (Least Common Multiple) between two numbers.","submitted_at":1425856527000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":6},{"algo_id":14137,"object_id":"686a7a4a-e7e6-11e4-849b-0670f2dc1320","username":"ovi_mihai","algoname":"TimestampToDate","algolabel":"TimestampToDate","language":"python2-2","card_line":"Convert Unix timestamp to date 1429593869 -&gt; \" 2015-04-21 05:24:29 \"","summary":"Convert Unix timestamp to date<div><span>1429593869 -&gt; </span>&#160;<span class=\"JSON_parser_punctuation\">&#34;</span><span class=\"JSON_parser_stringValue\">2015-04-21 05:24:29</span><span class=\"JSON_parser_punctuation\">&#34;</span></div>","submitted_at":1445409164000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":5},{"algo_id":6271,"object_id":"7072d753-c412-11e4-840d-12f53eafe9d2","username":"WebPredict","algoname":"TrimAllExcessSpaces","algolabel":"TrimAllExcessSpaces","language":"java3","card_line":"Trims all excessive whitespace in the input string: beginning, end, and in between words.","summary":"Trims all excessive whitespace in the input string: beginning, end, and in between words.","submitted_at":1445290256000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":5},{"algo_id":17166,"object_id":"4cbb83ca-721c-11e5-aae6-12ad1a8c1691","username":"util","algoname":"Cat","algolabel":"Cat","language":"java4","card_line":"Get a file from the Data API, and return its contents as a string.","summary":"<p>Get a file from the Data API, and return its contents as a string.<br/></p>","submitted_at":1444790228000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":5},{"algo_id":15964,"object_id":"95861aaf-3b4c-11e5-aae6-12ad1a8c1691","username":"pragith","algoname":"SAX","algolabel":"SAX","language":"python2-2","submitted_at":1440065714000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":5},{"algo_id":16240,"object_id":"f66e1e79-42d2-11e5-aae6-12ad1a8c1691","username":"z","algoname":"CSVToMatrix","algolabel":"CSV To Matrix","language":"python2-2","card_line":"Takes a csv file and outputs a matrix.","summary":"<p>Takes a csv file and outputs a matrix. The csv file has to contain only numbers, please specify the number of lines to be skipped as below. The file should be hosted in the Data API.</p>","submitted_at":1439591404000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":5},{"algo_id":15807,"object_id":"8fd80160-32e3-11e5-aae6-12ad1a8c1691","username":"namdx1987","algoname":"FastFibonacci","algolabel":"Fast Fibonacci","language":"python2-2","card_line":"Quickly compute ith fibonacci numbers.","summary":"<p>Quickly compute ith fibonacci numbers.</p><p>Input: array of number <br/></p>","submitted_at":1438262172000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":5},{"algo_id":15428,"object_id":"be0365ce-1f1d-11e5-a825-06910d997133","username":"rohspeed","algoname":"demo","algolabel":"demo","language":"python2-2","submitted_at":1435664938000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":5},{"algo_id":14831,"object_id":"696b1fde-0504-11e5-89ff-123a3b0693f5","username":"abe238","algoname":"GetLinksFromText","algolabel":"GetLinksFromText","language":"java3","card_line":"Returns a List of links from text input.","summary":"<p>Returns a List of links from text input.</p>","submitted_at":1432796051000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":5},{"algo_id":2636,"object_id":"6582ae0e-86f6-11e4-be78-12e1fbfbf82c","username":"graph","algoname":"JHopcroftKarpBipartiteMatching","algolabel":"JHopcroftKarpBipartiteMatching","language":"java3","card_line":"Uses Hopcroft-Karp algorithm to find a maximum matching in an undirected simple bipartite graph.","summary":"Uses Hopcroft-Karp algorithm to&#160;<span>find a maximum matching in an undirected simple bipartite graph.</span><div><span><br/></span></div><div><div>Inputs:</div><div><ul><li>A graph represented as a map from vertices (strings) to a list of neighbors (list of strings)&#160;<b>OR</b>&#160;the url to the Data API file that holds the graph that you would like to be read (currently supported formats: GML)</li><li>First partition (set of strings)</li><li>Second partition (set of strings)</li></ul></div></div>","submitted_at":1430444251000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":5},{"algo_id":2599,"object_id":"12659b9e-84cb-11e4-be78-12e1fbfbf82c","username":"graph","algoname":"JBronKerboschCliqueFinder","algolabel":"JBronKerboschCliqueFinder","language":"java3","card_line":"Detects the cliques in the input graph using Bron-Kerbosch clique detection algorithm.","summary":"<span>Detects the cliques in the input graph using Bron-Kerbosch clique detection algorithm.</span><div><span><br/></span></div><div><div>Inputs:</div><div><ul><li>A graph represented as a map from vertices (strings) to a list of neighbors (list of strings)&#160;<b>OR</b>&#160;the url to the Data API file that holds the graph that you would like to be read (currently supported formats: GML)</li></ul></div></div>","submitted_at":1430444238000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":5},{"algo_id":14142,"object_id":"38ebafb2-e7f9-11e4-849b-0670f2dc1320","username":"Karthikeyan","algoname":"URLImagesSizeBasedSorter","algolabel":"URLImagesSizeBasedSorter","language":"java3","card_line":"This algorithm fetches URL and lists the images with specified dimensions constraints and in specified order.","summary":"This algorithm fetches URL and lists the images with specified dimensions constraints and in specified order.","submitted_at":1429601904000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":5},{"algo_id":13749,"object_id":"03d8732c-e205-11e4-8df1-12f53eafe9d2","username":"docs","algoname":"Welcome","algolabel":"Welcome","language":"java3","card_line":"Prints a welcome message.","summary":"<div>Prints a welcome message.</div><div><br/></div>Used in Algorithmia&#160;<a href=\"https://algorithmia.com/docs\">documentation</a>&#160;to demonstrate API requests","submitted_at":1429545382000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":5},{"algo_id":11450,"object_id":"a71b7c69-ce4f-11e4-abe1-12f53eafe9d2","username":"mousum27","algoname":"BreakingNewsEntityRecognition","algolabel":"BreakingNewsEntityRecognition","language":"java3","submitted_at":1426781505000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":5},{"algo_id":9903,"object_id":"e648b344-caa3-11e4-abe1-12f53eafe9d2","username":"WayneS","algoname":"ExecutePythonCodeFree","algolabel":"Execute Python Code Free","language":"python2-2","card_line":"Execute python code, for example to calculate the first 200 primes.","summary":"Execute python code, for example to calculate the first 200 primes. Result is a JSON object with all the local variables.<br/>","submitted_at":1426376685000,"discoverable_world":true,"source_world":true,"license":"mit","call_count":5},{"algo_id":2924,"object_id":"0b6b4368-9df1-11e4-be78-12e1fbfbf82c","username":"leonelmore","algoname":"Test1","algolabel":"Test1","language":"java3","submitted_at":1445291298000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":4},{"algo_id":3118,"object_id":"b4074813-a1e9-11e4-be78-12e1fbfbf82c","username":"tigerneil","algoname":"FirstApp","algolabel":"FirstApp","language":"java3","submitted_at":1445290477000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":4},{"algo_id":3204,"object_id":"2db824da-a29a-11e4-be78-12e1fbfbf82c","username":"TimeSeries","algoname":"ThresholdAnomalyDetection","algolabel":"Threshold Anomaly Detection","language":"java3","card_line":"Takes a time series as double[] and doubles for lower and upper thresholds.","summary":"Takes a time series as double[] and doubles for lower and upper thresholds. Returns an array that matches the input on all points that fall below the lower or exceed the upper thresholds and is zero on all other points.","submitted_at":1445290448000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":4},{"algo_id":6278,"object_id":"f717c799-c425-11e4-840d-12f53eafe9d2","username":"WebPredict","algoname":"ColumnValueMap","algolabel":"ColumnValueMap","language":"java3","card_line":"Basic ETL transformation utility: replace one value with another in an array of arrays, using a map of desired substitution values.","summary":"Basic ETL transformation utility: replace one value with another in an array of arrays, using a map of desired substitution values.","submitted_at":1445290378000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":4},{"algo_id":3961,"object_id":"d0e970e8-ad79-11e4-840d-12f53eafe9d2","username":"WebPredict","algoname":"ListCombinations","algolabel":"ListCombinations","language":"java3","card_line":"Lists all combinations of k integers from a given set of integers.","summary":"Lists all combinations of k integers from a given set of integers.","submitted_at":1445290340000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":4},{"algo_id":2338,"object_id":"f4b0f540-79b9-11e4-bad7-04011d260101","username":"optimization","algoname":"SimplexLinearSolver","algolabel":"Simplex Linear Solver","language":"java3","card_line":"Basic Apaches Commons Math implementation of the simplex method for solving linear programming problems.","summary":"Basic Apaches Commons Math implementation of the simplex method for solving linear programming problems. We use the canonical representation, and seek to pick vector <b>x </b>such that <b>c.x </b>is minimized within the constraints that <b>Ax &lt;= b</b>&#160;and each entry of <b>x </b>is non-negative, where <b>c </b>and <b>b </b>are vectors of doubles and <b>A </b>is a matrix of doubles. The algorithim is called as apply(<b>c</b>,<b>A</b>,<b>b</b>,i), where i is the maximum number of iterations the algorithm is allowed to run. Read more at&#160;<a href=\"http://en.wikipedia.org/wiki/Linear_programming\">http://en.wikipedia.org/wiki/Linear_programming</a>.","submitted_at":1445289340000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":4},{"algo_id":16985,"object_id":"6eed31ed-6c69-11e5-aae6-12ad1a8c1691","username":"kenny","algoname":"PyTest1","algolabel":"PyTest1","language":"python2-2","submitted_at":1444177291000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":4},{"algo_id":14253,"object_id":"c1e84f63-eae1-11e4-849b-0670f2dc1320","username":"s3utilities","algoname":"DeleteFileFromBucket","algolabel":"Delete File From Bucket","language":"java3","card_line":"This algorithm deletes a specified file from an Amazon S3 bucket in the region specified.","summary":"<div>This algorithm deletes a specified file from an Amazon S3 bucket in the region specified. The inputs are <span>a String that represents the region your bucket is in,</span><span> the Data API URL to a credentials file (that contains the bucket name in the first line, your AWS access key in the second line and your AWS secret key in the third line), and the key of the file that you would like to delete.</span></div><div><br/></div><div>The possible regions are:</div><div><br/><table class=\"overviewSummary\" border=\"0\" cellpadding=\"3\" cellspacing=\"0\" summary=\"Enum Constant Summary table, listing enum constants, and an explanation\"><tbody><tr class=\"altColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#AP_NORTHEAST_1\">AP_NORTHEAST_1</a></strong></code> </td></tr><tr class=\"rowColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#AP_SOUTHEAST_1\">AP_SOUTHEAST_1</a></strong></code> </td></tr><tr class=\"altColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#AP_SOUTHEAST_2\">AP_SOUTHEAST_2</a></strong></code> </td></tr><tr class=\"rowColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#CN_NORTH_1\">CN_NORTH_1</a></strong></code> </td></tr><tr class=\"altColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#EU_CENTRAL_1\">EU_CENTRAL_1</a></strong></code> </td></tr><tr class=\"rowColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#EU_WEST_1\">EU_WEST_1</a></strong></code> </td></tr><tr class=\"altColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#GovCloud\">GovCloud</a></strong></code> </td></tr><tr class=\"rowColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#SA_EAST_1\">SA_EAST_1</a></strong></code> </td></tr><tr class=\"altColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#US_EAST_1\">US_EAST_1</a></strong></code> </td></tr><tr class=\"rowColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#US_WEST_1\">US_WEST_1</a></strong></code></td></tr><tr class=\"altColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#US_WEST_2\">US_WEST_2</a></strong></code> </td></tr></tbody></table></div>","submitted_at":1444030012000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":4},{"algo_id":16762,"object_id":"8d85a1c0-61b3-11e5-aae6-12ad1a8c1691","username":"westonplatter","algoname":"Testing123","algolabel":"Testing123","language":"python2-2","submitted_at":1442986156000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":4},{"algo_id":15037,"object_id":"ddc99300-0edb-11e5-89ff-123a3b0693f5","username":"jmtoro","algoname":"Fibonacci","algolabel":"Fibonacci","language":"java3","card_line":"En matemáticas, la sucesión de Fibonacci (a veces llamada erróneamente serie de Fibonacci) es la siguiente sucesión infinita de números naturales: 1,1,2,3,5,8,13...","summary":"<p>En matemáticas, la sucesión de Fibonacci (a veces llamada erróneamente serie de Fibonacci) es la siguiente sucesión infinita de números naturales: 1,1,2,3,5,8,13... <br/></p>","submitted_at":1433878445000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":4},{"algo_id":14743,"object_id":"ee937f4b-fe6f-11e4-89ff-123a3b0693f5","username":"opencv","algoname":"LeftEyeDetection","algolabel":"Left Eye Detection","language":"java3","card_line":"Uses a pretrained model to detect eye in a given image.","summary":"<p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\">Uses a pretrained model to detect eye in a given image. Send your input as a url to a picture that is either hosted on our data API or is a direct link, and the output is the same image, with rectangles around the detected eye, written to your collection. A text file that contains all the coordinates of the rectangles is also output to the same collection for convenience.</p><div style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\"><br/></div><div style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\">P.S. Please make sure that the second input to this algorithm is a data collection that YOU own. You can create data collections from the &#34;Data&#34; link above.</div>","submitted_at":1432071888000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":4},{"algo_id":2601,"object_id":"5d0e8277-84ce-11e4-be78-12e1fbfbf82c","username":"graph","algoname":"JConnectivityInspector","algolabel":"JConnectivityInspector","language":"java3","card_line":"Inspects the given graph for connectivity and returns the set of connected components.","summary":"<span>Inspects the given graph for connectivity and returns the set of connected components. If there is only one set, the whole graph is connected.&#160;</span><br/><div><br/></div><div>Inputs:</div><div><ul><li>A graph represented as a map from vertices (strings) to a list of neighbors (list of strings)&#160;<b>OR</b>&#160;the url to the Data API file that holds the graph that you would like to be read (currently supported formats: GML)</li></ul></div>","submitted_at":1430444270000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":4},{"algo_id":2642,"object_id":"b92de3e9-86fe-11e4-be78-12e1fbfbf82c","username":"graph","algoname":"JKruskalMinimumSpanningTree","algolabel":"JKruskalMinimumSpanningTree","language":"java3","card_line":"Uses Kruskal's algorithm.","summary":"<span>Uses Kruskal's algorithm. If the given graph is connected it computes the minimum spanning tree, otherwise it computes the minimum spanning forest.&#160;</span><br/><div><font color=\"#000000\" face=\"Times\" size=\"3\"><br/></font><div><div>Inputs:</div><div><ul><li>A graph represented as a map from vertices (strings) to a list of neighbors (list of strings)&#160;<b>OR</b>&#160;the url to the Data API file that holds the graph that you would like to be read (currently supported formats: GML)</li></ul></div></div></div>","submitted_at":1430444252000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":4},{"algo_id":1526,"object_id":"4f81e60a-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"NaiveBayesMultinomial","algolabel":"NaiveBayesMultinomial","language":"java3","card_line":"This is the NaiveBayesMultinomial classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/NaiveBayesMultinomial.html","summary":"<div><span>This is the NaiveBayesMultinomial classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/NaiveBayesMultinomial.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/NaiveBayesMultinomial.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443956000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":4},{"algo_id":1533,"object_id":"597707a3-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"LeastMedSq","algolabel":"LeastMedSq","language":"java3","card_line":"This is the LeastMedSq classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/LeastMedSq.html","summary":"<div><span>This is the LeastMedSq classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/LeastMedSq.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/LeastMedSq.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443923000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":4},{"algo_id":1781,"object_id":"61dfe4ea-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"TimeSeriesTranslate","algolabel":"TimeSeriesTranslate","language":"java3","card_line":"This is the TimeSeriesTranslate filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/TimeSeriesTranslate.html","summary":"<div><span>This is the TimeSeriesTranslate filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/TimeSeriesTranslate.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/TimeSeriesTranslate.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442320000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":4},{"algo_id":14263,"object_id":"8fc5a83c-eb32-11e4-849b-0670f2dc1320","username":"tonychan","algoname":"FirstRoyalty","algolabel":"FirstRoyalty","language":"java3","submitted_at":1430018873000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":4},{"algo_id":7570,"object_id":"b96379eb-c90a-11e4-abe1-12f53eafe9d2","username":"Sahil","algoname":"Hello","algolabel":"Hello World","language":"java3","card_line":"Enter you name, and the code will welcome you.","summary":"Enter you name, and the code will welcome you.<br/>","submitted_at":1427573944000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":4},{"algo_id":10773,"object_id":"93317a3e-cbff-11e4-abe1-12f53eafe9d2","username":"vyau","algoname":"Remove_Duplicate_Integers","algolabel":"Remove_Duplicate_Integers","language":"java3","card_line":"Given a list of integer values, delimited by space, remove duplicate integers from the list.","summary":"Given a list of integer values, delimited by space, remove duplicate integers from the list.<div>If non integer values detected, will return an error string.</div>","submitted_at":1426526212000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":4},{"algo_id":10234,"object_id":"f6fcf5c7-cb10-11e4-abe1-12f53eafe9d2","username":"prometheus","algoname":"Hello","algolabel":"Hello World","language":"java3","card_line":"A simple \"Hello World\" algorithm, which returns \"Hello \" + the algorithm input.","summary":"A simple \"Hello World\" algorithm, which returns \"Hello \" + the algorithm input.","submitted_at":1426427301000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":4},{"algo_id":9898,"object_id":"ed1398bd-caa2-11e4-abe1-12f53eafe9d2","username":"WayneS","algoname":"ExecutePythonCode","algolabel":"Execute Python Code","language":"python2-2","card_line":"Execute Python code, for example to calculate the first 200 primes.","summary":"Execute Python code, for example to calculate the first 200 primes. Result is a JSON object with all the local variables.<br/>","submitted_at":1426376633000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":4},{"algo_id":9120,"object_id":"26eaa9c1-ca2c-11e4-abe1-12f53eafe9d2","username":"peace098beat","algoname":"testing","algolabel":"testing","language":"python2-2","submitted_at":1426325350000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":4},{"algo_id":8095,"object_id":"174adce2-c956-11e4-abe1-12f53eafe9d2","username":"audio","algoname":"IFft","algolabel":"IFft","language":"java3","card_line":"Inverse Fast Fourier Transform for 1-dimensional, complex frequency domain data.","summary":"<div><br/></div><div>Inverse Fast Fourier Transform for 1-dimensional, complex frequency domain data. Returns real time-domain data, rescaled by data length, so that IFft(Fft(x)) = x. Input is expected to be&#160;<span>in interleaved format (Real_00, Imag_00, Real_01, Imag_01), satisfying the symmetry condition. For even-length input, input[1] should equal Real[length/2], for odd-length input, input[1] should equal Imag[(length-1)/2].</span></div>","submitted_at":1426234773000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":4},{"algo_id":6330,"object_id":"343019d0-c786-11e4-abe1-12f53eafe9d2","username":"williamaustinwebb","algoname":"GenerateClumpedSample","algolabel":"Generate Clumped Sample","language":"java3","card_line":"Generates artificial clumped data in two dimensions using (radial) 2D Gaussian distributions.","summary":"<span>Generates artificial clumped data in two dimensions using (radial) 2D Gaussian distributions. Takes as input</span><div><ul><li><span>number of clusters (int)&#160;</span></li><li><span>edge length (double) the size of the &#160;square that clusters will be placed in</span></li><li><span>number of points (int) - the total number of points to generate. If a generated point lies to the right of (EdgeLength,0) or above (EdgedLength,0) it is not returned.&#160;</span></li><li>standard deviation (double) the radial standard deviation of the the clusters</li></ul><div>The cluster centers are picked uniformly at random from within the square. Then, we for each point, with pick from the clusters uniformly at random, then draw from the distribution of that cluster, returning the result if it is within the square.</div></div>","submitted_at":1426041794000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":4},{"algo_id":3761,"object_id":"8a2c656e-abe5-11e4-840d-12f53eafe9d2","username":"email","algoname":"SendEmailFromGmail","algolabel":"SendEmailFromGmail","language":"java3","card_line":"Use this algorithm to send email from your Gmail account programmatically.","summary":"Use this algorithm to send email from your Gmail account programmatically. You can pass in the credentials and the details of the message as a file to preserve privacy. Just pass in a Data file url that contains Json with the matching values for the following names:<div><br/></div><pre>String username, String password, String recipientEmail, String ccEmail, String title, String message</pre><div><br/></div><div>ccEmail is optional, the other fields are mandatory.</div>","submitted_at":1445375412000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":3},{"algo_id":3803,"object_id":"52a389ee-abee-11e4-840d-12f53eafe9d2","username":"email","algoname":"EmailValidator","algolabel":"EmailValidator","language":"java3","submitted_at":1445375104000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":3},{"algo_id":6019,"object_id":"5f1cf1a7-bd30-11e4-840d-12f53eafe9d2","username":"santacruz91","algoname":"GetListLength","algolabel":"GetListLength","language":"java3","card_line":"Returns the length of an algorithmia data collection Input: Collection URL, eg.","summary":"<div>Returns the length of an algorithmia data collection</div><div>Input: Collection URL, eg. data://username/collection</div>","submitted_at":1445290715000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":3},{"algo_id":3913,"object_id":"4cbe89d3-ac85-11e4-840d-12f53eafe9d2","username":"WebPredict","algoname":"MergeIntervals","algolabel":"MergeIntervals","language":"java3","card_line":"Merges a list of intervals into a non-overlapping list.","summary":"Merges a list of intervals into a non-overlapping list. For example: [[1, 5], [4,7], [8,10]] becomes [[1,7],[8,10]].","submitted_at":1445290323000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":3},{"algo_id":2714,"object_id":"c581f122-93ac-11e4-be78-12e1fbfbf82c","username":"cloncaric","algoname":"RadixSort32bit","algolabel":"Radix Sort (32 bit)","language":"java3","card_line":"Sorts an array of 32-bit integers in-place using radix sort .","summary":"Sorts an array of 32-bit integers <a href=\"https://en.wikipedia.org/wiki/Radix_sort#In-place_MSD_radix_sort_implementations\">in-place using radix sort</a>. The runtime of this algorithm is O(n).<br/><br/><i>Note: while irrelevant for sorting integers, please not that this is NOT a <a href=\"https://en.wikipedia.org/wiki/Sorting_algorithm#Stability\">stable</a> sort algorithm.</i><br/>","submitted_at":1445289957000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":3},{"algo_id":304,"object_id":"11f65450-9d78-11e3-8351-040108385a01","username":"fridgeman89","algoname":"testing1","algolabel":"testing1","language":"java3","submitted_at":1445289732000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":3},{"algo_id":16421,"object_id":"be0d8d14-4dc0-11e5-aae6-12ad1a8c1691","username":"azimeraw","algoname":"congestioncontrol","algolabel":"congestion control","language":"java4","submitted_at":1440793862000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":3},{"algo_id":1885,"object_id":"87c1f0a7-6b77-11e4-bad7-04011d260101","username":"weka","algoname":"FarthestFirstClusterer","algolabel":"FarthestFirstClusterer","language":"java3","card_line":"Uses Farthest First clusterer, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/clusterers/FarthestFirst.html","summary":"<span>Uses Farthest First clusterer, as implemented in Weka:</span><div><br/></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/clusterers/Farthest%20First.html\">http://weka.sourceforge.net/doc.stable/weka/clusterers/FarthestFirst.html</a><br/></div><div><br/></div><div>Input Json should include:</div><div><br/></div><div><div><ul><li><b>trainUrl:&#160;</b>a dataset URL&#160;pointing to your dataset in the Data API</li></ul></div><div><br/></div><div>Input Json may include:<br/></div><div><br/></div><div><ul><li><b>modelUrl:</b>&#160;a model URL pointing to a file uploaded to the Data API to save the model, if not specified, model is not saved</li><li><b>mode:</b>&#160;if load mode is specified, it loads an existing Farthest First clusterer to use on the dataset</li><li><b>options:</b>&#160;specific to each clusterer, if not specified, uses default options. Please see the above documentation for different options for this algorithm.</li></ul></div></div>","submitted_at":1435613993000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":3},{"algo_id":14319,"object_id":"dc71cd36-ee09-11e4-849b-0670f2dc1320","username":"s3utilities","algoname":"CopyFileBetweenBuckets","algolabel":"Copy File Between Buckets","language":"python2-2","card_line":"This algorithm copies a file in an AWS S3 bucket to another S3 bucket.","summary":"<p>This algorithm copies a file in an AWS S3 bucket to another S3 bucket. It takes in two sets of access keys so that you can copy the file between buckets that belong to different accounts.</p><div>The credentials files seen in the sample input below contain the bucket name, the access key ID and the secret access key, separated by new lines.</div><p></p>","submitted_at":1432669066000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":3},{"algo_id":14744,"object_id":"e40137e9-fe77-11e4-89ff-123a3b0693f5","username":"opencv","algoname":"MouthDetection","algolabel":"Mouth Detection","language":"java3","card_line":"Uses a pretrained model to detect noses in a given image.","summary":"<p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\">Uses a pretrained model to detect noses in a given image. Send your input as a url to a picture that is either hosted on our data API or is a direct link, and the output is the same image, with rectangles around the detected noses, written to your collection. A text file that contains all the coordinates of the rectangles is also output to the same collection for convenience.</p><div style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\"><br/></div><div style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\">P.S. Please make sure that the second input to this algorithm is a data collection that YOU own. You can create data collections from the &#34;Data&#34; link above.</div>","submitted_at":1432075246000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":3},{"algo_id":12641,"object_id":"dde5fc96-d125-11e4-abe1-12f53eafe9d2","username":"Raynarong","algoname":"Helloworld","algolabel":"Helloworld","language":"java3","submitted_at":1430875427000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":3},{"algo_id":104,"object_id":"6775aa37-8e3c-11e3-8351-040108385a01","username":"freddyH","algoname":"Finance_Payment","algolabel":"Finance Payment","language":"java3","card_line":"PMT(rate, nper, pv, fv, type) Returns the periodic payment for an annuity with constant interest rates.","summary":"PMT(rate, nper, pv, fv, type)\nReturns the periodic payment for an annuity with constant interest rates.&nbsp;<div><ul><li>&nbsp;rate is the periodic interest rate.&nbsp;</li><li>nper is the number of periods in which annuity is paid.&nbsp;</li><li>pv is the present value (cash value) in a sequence of payments.&nbsp;</li><li>fv (optional) is the desired value (future value) to be reached at the end of the periodic payments.\n*type (optional) defines whether a payment is due at the beginning (1) or the end (0) of a period.</li></ul></div>","submitted_at":1430447411000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":3},{"algo_id":2597,"object_id":"e50b989b-84c9-11e4-be78-12e1fbfbf82c","username":"graph","algoname":"JBiConnectivityInspector","algolabel":"JBiConnectivityInspector","language":"java3","card_line":"Inspects the given graph for biconnectivity and returns the set of biconnected components.","summary":"<span>Inspects the given graph for biconnectivity and returns the set of biconnected components. If there is only one set, the whole graph is biconnected.&#160;</span><div><br/></div><div>Inputs:</div><div><ul><li>A graph represented as a map from vertices (strings) to a list of neighbors (list of strings)&#160;<b>OR</b>&#160;the url to the Data API file that holds the graph that you would like to be read (currently supported formats: GML)</li></ul></div>","submitted_at":1430444225000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":3},{"algo_id":1543,"object_id":"67e5c26e-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"SimpleLogistic","algolabel":"SimpleLogistic","language":"java3","card_line":"This is the SimpleLogistic classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/SimpleLogistic.html","summary":"<div><span>This is the SimpleLogistic classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/SimpleLogistic.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/SimpleLogistic.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443887000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":3},{"algo_id":1586,"object_id":"a679fcaa-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"CitationKNN","algolabel":"CitationKNN","language":"java3","card_line":"This is the CitationKNN classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/mi/CitationKNN.html","summary":"<div><span>This is the CitationKNN classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/mi/CitationKNN.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/mi/CitationKNN.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443115000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":3},{"algo_id":1602,"object_id":"be41c090-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"DecisionTable","algolabel":"DecisionTable","language":"java3","card_line":"This is the DecisionTable classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/rules/DecisionTable.html","summary":"<div><span>This is the DecisionTable classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/rules/DecisionTable.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/rules/DecisionTable.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443043000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":3},{"algo_id":1716,"object_id":"d2e49610-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"J48","algolabel":"J48","language":"java3","card_line":"This is the J48 classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/J48.html","summary":"<div><span>This is the J48 classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/J48.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/J48.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430442991000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":3},{"algo_id":1762,"object_id":"4686f61d-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"Obfuscate","algolabel":"Obfuscate","language":"java3","card_line":"This is the Obfuscate filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/Obfuscate.html","summary":"<div><span>This is the Obfuscate filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/Obfuscate.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/Obfuscate.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442612000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":3},{"algo_id":1766,"object_id":"4c0993b8-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"PrincipalComponents","algolabel":"PrincipalComponents","language":"java3","card_line":"This is the PrincipalComponents filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/PrincipalComponents.html","summary":"<div><span>This is the PrincipalComponents filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/PrincipalComponents.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/PrincipalComponents.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442605000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":3},{"algo_id":1782,"object_id":"6388b834-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"Wavelet","algolabel":"Wavelet","language":"java3","card_line":"This is the Wavelet filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/Wavelet.html","summary":"<div><span>This is the Wavelet filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/Wavelet.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/Wavelet.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442318000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":3},{"algo_id":1801,"object_id":"7ec0cb31-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"SparseToNonSparse","algolabel":"SparseToNonSparse","language":"java3","card_line":"This is the SparseToNonSparse filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/instance/SparseToNonSparse.html","summary":"<div><span>This is the SparseToNonSparse filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/instance/SparseToNonSparse.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/instance/SparseToNonSparse.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430441807000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":3},{"algo_id":13317,"object_id":"97dd061f-d970-11e4-8df1-12f53eafe9d2","username":"testing","algoname":"Sleep","algolabel":"Sleep","language":"java3","card_line":"Sleeps for N seconds, then returns.","summary":"Sleeps for N seconds, then returns.","submitted_at":1428003945000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":3},{"algo_id":13279,"object_id":"a48668ba-d8e6-11e4-8df1-12f53eafe9d2","username":"Wangrong","algoname":"Dijkstra","algolabel":"Dijkstra","language":"java3","submitted_at":1427944645000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":3},{"algo_id":12611,"object_id":"4a7f0d60-d0ce-11e4-abe1-12f53eafe9d2","username":"Astervista","algoname":"BasicStatistic","algolabel":"BasicStatistic","language":"java3","card_line":"Basic statistic operations Input: 2D array of points with x &amp; y position, and a integer (range 0-6) to identify the operation to execute: 0: Arithmetic average.","summary":"<h3>Basic statistic operations</h3><div><b>Input:</b> 2D array of points with x &amp; y position, and a integer (range 0-6) to identify the operation to execute:<br/></div><div><i>0: Arithmetic average. </i>The result is a Map with &#34;X&#34; value as the average of Xs and &#34;Y&#34; value as the average of Ys.</div><div><i>1: Geometric average. </i>The result is a Map with &#34;X&#34; value as the geometric average of Xs and &#34;Y&#34; value as the geometric average of Ys.<br/></div><div><i>2: Armonic average.</i> The result is a Map with &#34;X&#34; value as the armonic average of Xs and &#34;Y&#34; value as the armonic average of Ys.</div><i>3: RMS.</i> The result is a Map with &#34;X&#34; value as the RMS of Xs and &#34;Y&#34; value as the RMS of Ys.<div><i>4: Standard deviation.</i> The result is a Map with &#34;X&#34; value as the&#160;standard deviation&#160;of Xs and &#34;Y&#34; value as the&#160;standard deviation&#160;of Ys.</div><i>5: Linear regression.</i> The result is a Map with &#34;m&#34; value as the slope and &#34;q&#34; value as the y offset at 0.<div><i>6: Quadratic regression.</i> The result is a Map with &#34;a&#34; value as the coefficient of x&#178;<br/></div>","submitted_at":1427055891000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":3},{"algo_id":8973,"object_id":"5b3f6faa-c9de-11e4-abe1-12f53eafe9d2","username":"yovasx2","algoname":"test","algolabel":"test","language":"java3","submitted_at":1426291771000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":3},{"algo_id":8387,"object_id":"95b24c1b-c97b-11e4-abe1-12f53eafe9d2","username":"audio","algoname":"LowshelfBiquadFilter","algolabel":"LowshelfBiquadFilter","language":"java3","card_line":"A musical lowshelf filter (two pole recursive, direct form 1). Filter frequency, gain (in decibel) and quality (resonance) must be specified.","summary":"<div><br/></div><div>A musical lowshelf filter (two pole recursive, direct form 1). Filter frequency, gain (in decibel) and quality (resonance) must be specified. The filter frequency is expected to be normalized, ie. between 0 and 0.5. The normalized frequency is simply the target frequency divided by the sample rate (eg. 1000Hz / 44100Hz = 0.02267). To let the filter ring out, a number of samples can be specified that will be appended as zeros to the input, and extend the filter response by the same number of samples.<br/></div><div><br/></div><div>Input parameter:</div><div>double[] inputArray, double normalizedFrequency, double gainDb, double q (, numAppendedSamples)</div><div><br/></div><div><span>The input is not modified.</span><br/></div><div><div><br/></div></div>","submitted_at":1426258585000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":3},{"algo_id":8491,"object_id":"87addf27-c98b-11e4-abe1-12f53eafe9d2","username":"audio","algoname":"NotchBiquadFilter","algolabel":"NotchBiquadFilter","language":"java3","card_line":"A notch filter (two pole recursive, direct form 1). Filter frequency, and filter quality must be specified.","summary":"<div>A notch filter (two pole recursive, direct form 1). Filter frequency, and filter quality must be specified. The filter frequency is expected to be normalized, ie. between 0 and 0.5. The normalized frequency is simply the target frequency divided by the sample rate (eg. 1000Hz / 44100Hz = 0.02267). To let the filter ring out, a number of samples can be specified that will be appended as zeros to the input, and extend the filter response by the same number of samples.<br/></div><div><br/></div><div>Input parameter:</div><div>double[] inputArray, double normalizedFrequency, double q (, numAppendedSamples)</div><div><br/></div><div>The input is not modified.<br/></div><div><br/></div><div></div>","submitted_at":1426256191000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":3},{"algo_id":8399,"object_id":"02fdce1f-c97e-11e4-abe1-12f53eafe9d2","username":"audio","algoname":"HishelfBiquadFilter","algolabel":"HishelfBiquadFilter","language":"java3","card_line":"A musical highshelf filter (two pole recursive, direct form 1). Filter frequency, gain (in decibel) and quality (resonance) must be specified.","summary":"A musical highshelf filter (two pole recursive, direct form 1). Filter frequency, gain (in decibel) and quality (resonance) must be specified. The filter frequency is expected to be normalized, ie. between 0 and 0.5. The normalized frequency is simply the target frequency divided by the sample rate (eg. 1000Hz / 44100Hz = 0.02267). To let the filter ring out, a number of samples can be specified that will be appended as zeros to the input, and extend the filter response by the same number of samples.<div><br/></div><div><div>Input parameter:</div><div>double[] inputArray, double normalizedFrequency, double gainDb, double q (, numAppendedSamples)</div></div><div><br/></div><div><span>The input is not modified.</span><br/></div><div><div><br/></div></div>","submitted_at":1426250557000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":3},{"algo_id":8341,"object_id":"69ce0346-c974-11e4-abe1-12f53eafe9d2","username":"audio","algoname":"LowpassBiquadFilter","algolabel":"LowpassBiquadFilter","language":"java3","card_line":"A musical lowpass filter (two pole recursive, direct form 1). The filter frequency and quality (resonance) can be specified.","summary":"A musical lowpass filter (two pole recursive, direct form 1). The filter frequency and quality (resonance) can be specified. The filter frequency is expected to be normalized, ie. between 0 and 0.5. The normalized frequency is simply the target frequency divided by the sample rate (eg. 1000Hz / 44100Hz = 0.02267). To let the filter ring out, a number of samples can be specified that will be appended as zeros to the input, and extend the filter response by the same number of samples.<div><br/></div><div><div class=\"text-wordwrap ng-binding\">Input parameter:</div><div class=\"text-wordwrap ng-binding\">double[] inputArray, double normalizedFrequency, double gainDb (, int numAppendedSamples)</div></div><div><br/></div><div>The input is not modified.</div><div><br/></div>","submitted_at":1426248993000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":3},{"algo_id":7670,"object_id":"2a966d5a-c919-11e4-abe1-12f53eafe9d2","username":"thearn4","algoname":"Waveletdenoising","algolabel":"Waveletdenoising","language":"python2-2","card_line":"Basic multilevel 1D wavelet denoising.","summary":"Basic multilevel 1D wavelet denoising. Uses numpy and pywavelets. Third party packages are currently not supported on the Algorithmia platform, so I have made this open source.","submitted_at":1426207565000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":3},{"algo_id":7261,"object_id":"3899666e-c8ee-11e4-abe1-12f53eafe9d2","username":"rosh","algoname":"SimpleDDAAlgorithm","algolabel":"Simple DDA Algorithm","language":"java3","card_line":"this algorithm draws lines using the DDA Algorithm the file contains sample frame also so just compile it and run it to see what happens!","summary":"this algorithm draws lines using the DDA Algorithm the file contains sample frame also so just compile it and run it to see what happens!<br/>","submitted_at":1426188943000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":3},{"algo_id":6104,"object_id":"ac0f6ca2-be3b-11e4-840d-12f53eafe9d2","username":"bboalimoe","algoname":"Bayes","algolabel":"Bayes","language":"java3","submitted_at":1445292113000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":2},{"algo_id":4304,"object_id":"95c04f73-b2a5-11e4-840d-12f53eafe9d2","username":"tea","algoname":"test","algolabel":"test","language":"java3","submitted_at":1445290564000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":2},{"algo_id":80,"object_id":"6775a0b2-8e3c-11e3-8351-040108385a01","username":"diego","algoname":"Finance_BlackScholesDigitalOptionValue","algolabel":"Finance Black Scholes Digital Option Value","language":"java3","card_line":"Calculates the Black-Scholes option value of a call option.","summary":"Calculates the Black-Scholes option value of a call option.\n@param initialStockValue The initial value of the underlying, i.e., the spot.\n@param riskFreeRate The risk free rate of the bank account numerarie.\n@param volatility The Black-Scholes volatility.\n@param optionMaturity The option maturity T.\n@param optionStrike The option strike.\n@return Returns the value of a European call option under the Black-Scholes model\n\ni.e {\"initialStockValue\":23.3,\"riskFreeRate\":0.05,\"volatility\":1,\"optionMaturity\":20,\"optionStrike\":5}","submitted_at":1445289809000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":2},{"algo_id":15948,"object_id":"ca5cf2b1-3a46-11e5-aae6-12ad1a8c1691","username":"algotest02","algoname":"DemoAlgorithm","algolabel":"DemoAlgorithm","language":"java3","card_line":"Based on the /opencv/FaceDetection, this algorithm takes a base64 encoding of an image and returns an array of rectangles (x, y, width, height) bounding each face identified.","summary":"<p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\">Based on the /opencv/FaceDetection, this algorithm takes a base64 encoding of an image and returns an array of rectangles (x, y, width, height) bounding each face identified.</p><p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\"><b><b>Input Format</b></b><br/>Base64 representation of an image or a URL of an image.</p><p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\"><b><b>Output Format</b></b><br/>Array of rectangles. Example:<br/>[<br/>    {'y': 10, 'x': 10, 'height': 100, 'width': 100},<br/>    {'y': 20, 'x': 20, 'height': 100, 'width': 100},<br/>    {'y': 30, 'x': 30, 'height': 100, 'width': 100}<br/><span>]</span></p>","submitted_at":1438652395000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":2},{"algo_id":15569,"object_id":"8abf787d-25b0-11e5-a825-06910d997133","username":"wildanr","algoname":"StringReverse","algolabel":"StringReverse","language":"python2-2","card_line":"Reverse a given string.","summary":"<p>Reverse a given string.</p>","submitted_at":1436387721000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":2},{"algo_id":14524,"object_id":"48f02f17-f46b-11e4-849b-0670f2dc1320","username":"ahrmb","algoname":"havijoori","algolabel":"havijoori","language":"python2-2","submitted_at":1430970248000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":2},{"algo_id":2673,"object_id":"839ca08f-88db-11e4-be78-12e1fbfbf82c","username":"opencv","algoname":"RecordFootage","algolabel":"Record Footage","language":"java3","card_line":"Records the picture taken by a Seattle traffic camera every minute.","summary":"Records the picture taken by a Seattle traffic camera every minute.","submitted_at":1430445549000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":2},{"algo_id":2311,"object_id":"e2dda0e8-792a-11e4-bad7-04011d260101","username":"opencv","algoname":"Boost","algolabel":"Boost","language":"java3","card_line":"A basic interface to OpenCV's Boost, as explained in http://docs.opencv.org/java/org/opencv/ml/CvBoost.html .","summary":"<span>A basic interface to OpenCV's Boost, as explained in&#160;</span><span><a href=\"http://docs.opencv.org/java/org/opencv/ml/CvBoost.html\">http://docs.opencv.org/java/org/opencv/ml/CvBoost.html</a></span><span>. It implements the boosted tree classifier.&#160;</span>","submitted_at":1430445503000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":2},{"algo_id":2654,"object_id":"fb0a4b53-8719-11e4-be78-12e1fbfbf82c","username":"graph","algoname":"JStoerWagnerMinimumCut","algolabel":"JStoerWagnerMinimumCut","language":"java3","card_line":"Deterministically computes the minimum cut on the given graph.","summary":"Deterministically computes the minimum cut on the given graph.<div><br/></div><div><div>Inputs:</div><div><ul><li>A graph represented as a map from vertices (strings) to a list of neighbors (list of strings)&#160;<b>OR</b>&#160;the url to the Data API file that holds the graph that you would like to be read (currently supported formats: GML)</li></ul></div></div>","submitted_at":1430444261000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":2},{"algo_id":2625,"object_id":"12d59451-8656-11e4-be78-12e1fbfbf82c","username":"graph","algoname":"JEdmondsKarpMaximumFlow","algolabel":"JEdmondsKarpMaximumFlow","language":"java3","card_line":"&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10; Computes maximum flow in a network using Edmonds-Karp algorithm.","summary":"&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;<p class=\"p1\">Computes maximum flow in a network using Edmonds-Karp algorithm.</p><div>Inputs:</div><div><ul><li>A graph represented as a map from vertices (strings) to a list of neighbors (list of strings)&#160;<b>OR</b>&#160;the url to the Data API file that holds the graph that you would like to be read (currently supported formats: GML)</li></ul></div>","submitted_at":1430444245000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":2},{"algo_id":1524,"object_id":"4cc2b751-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"HNB","algolabel":"HNB","language":"java3","card_line":"This is the HNB classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/HNB.html","summary":"<div><span>This is the HNB classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/HNB.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/HNB.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443967000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":2},{"algo_id":1535,"object_id":"5c85f26a-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"LibSVM","algolabel":"LibSVM","language":"java3","card_line":"This is the LibSVM classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/LibSVM.html","summary":"<div><span>This is the LibSVM classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/LibSVM.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/LibSVM.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443918000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":2},{"algo_id":1542,"object_id":"668168b8-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"SimpleLinearRegression","algolabel":"SimpleLinearRegression","language":"java3","card_line":"This is the SimpleLinearRegression classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/SimpleLinearRegression.html","summary":"<div><span>This is the SimpleLinearRegression classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/SimpleLinearRegression.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/SimpleLinearRegression.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443890000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":2},{"algo_id":1567,"object_id":"8aca64de-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"GridSearch","algolabel":"GridSearch","language":"java3","card_line":"This is the GridSearch classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/GridSearch.html","summary":"<div><span>This is the GridSearch classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/GridSearch.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/GridSearch.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443630000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":2},{"algo_id":1599,"object_id":"b9d00137-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"SerializedClassifier","algolabel":"SerializedClassifier","language":"java3","card_line":"This is the SerializedClassifier classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/misc/SerializedClassifier.html","summary":"<div><span>This is the SerializedClassifier classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/misc/SerializedClassifier.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/misc/SerializedClassifier.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443056000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":2},{"algo_id":1714,"object_id":"d2df4380-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"Id3","algolabel":"Id3","language":"java3","card_line":"This is the Id3 classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/Id3.html","summary":"<div><span>This is the Id3 classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/Id3.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/Id3.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430442990000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":2},{"algo_id":1792,"object_id":"72174a0a-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"NonSparseToSparse","algolabel":"NonSparseToSparse","language":"java3","card_line":"This is the NonSparseToSparse filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/instance/NonSparseToSparse.html","summary":"<div><span>This is the NonSparseToSparse filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/instance/NonSparseToSparse.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/instance/NonSparseToSparse.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442289000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":2},{"algo_id":14168,"object_id":"5e7df522-e8a5-11e4-849b-0670f2dc1320","username":"zang0","algoname":"ClusterCrimes","algolabel":"ClusterCrimes","language":"java3","submitted_at":1429677309000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":2},{"algo_id":13827,"object_id":"da27918a-e2e3-11e4-8df1-12f53eafe9d2","username":"felipesg","algoname":"SecurityKeyGenerator","algolabel":"Security Key Generator","language":"python2-2","card_line":"The best generator secure passwords for your accounts.","summary":"<pre class=\"tw-data-text vk_txt tw-ta tw-text-small\" dir=\"ltr\">The best generator secure passwords for your accounts.</pre><pre class=\"tw-data-text vk_txt tw-ta tw-text-small\" dir=\"ltr\"><font color=\"#212121\" face=\"Open Sans, Verdana, Helvetica Neue, Helvetica, Arial, sans-serif\"><span>Just enter the number of characters you want for your password.</span></font><font color=\"#212121\" face=\"inherit\"><span><br/></span></font></pre>","submitted_at":1429042913000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":2},{"algo_id":13067,"object_id":"d8432ac7-d626-11e4-8df1-12f53eafe9d2","username":"e","algoname":"md5crack","algolabel":"md5crack","language":"java3","submitted_at":1427642371000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":2},{"algo_id":12882,"object_id":"9f28f0dd-d28b-11e4-8df1-12f53eafe9d2","username":"demo","algoname":"HelloPython","algolabel":"Hello Python","language":"python2-2","card_line":"Hello World, written in Python","summary":"Hello World, written in Python<br/>","submitted_at":1427245795000,"discoverable_world":true,"source_world":true,"license":"mit","call_count":2},{"algo_id":10653,"object_id":"891bc38f-cbce-11e4-abe1-12f53eafe9d2","username":"infotrie","algoname":"Hello","algolabel":"Hello World","language":"java3","card_line":"A simple \"Hello World\" algorithm, which returns \"Hello \" + the algorithm input.","summary":"A simple \"Hello World\" algorithm, which returns \"Hello \" + the algorithm input.","submitted_at":1427221409000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":2},{"algo_id":11012,"object_id":"dc554653-ccf3-11e4-abe1-12f53eafe9d2","username":"chinnikrishna55","algoname":"MultiplyIntegers","algolabel":"MultiplyIntegers","language":"java3","submitted_at":1426630899000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":2},{"algo_id":10970,"object_id":"10d84b06-ccc8-11e4-abe1-12f53eafe9d2","username":"manuelgh1629","algoname":"holamundo","algolabel":"holamundo","language":"java3","submitted_at":1426612110000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":2},{"algo_id":10755,"object_id":"928bad58-cbf6-11e4-abe1-12f53eafe9d2","username":"farazhassan","algoname":"CircleArea","algolabel":"Circle Area","language":"java3","card_line":"Calculate the area of a circle.","summary":"Calculate the area of a circle.","submitted_at":1426522577000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":2},{"algo_id":10752,"object_id":"c11dc896-cbf5-11e4-abe1-12f53eafe9d2","username":"pieroit","algoname":"prova","algolabel":"prova","language":"python2-2","submitted_at":1426521853000,"discoverable_world":true,"source_world":true,"license":"apache2","call_count":2},{"algo_id":8476,"object_id":"10dbadb4-c989-11e4-abe1-12f53eafe9d2","username":"audio","algoname":"PeakBiquadFilter","algolabel":"PeakBiquadFilter","language":"java3","card_line":"A musical peak filter (two pole recursive, direct form 1). Filter frequency, gain (in decibel) and quality (resonance) must be specified.","summary":"<div>A musical peak filter (two pole recursive, direct form 1). Filter frequency, gain (in decibel) and quality (resonance) must be specified. The filter frequency is expected to be normalized, ie. between 0 and 0.5. The normalized frequency is simply the target frequency divided by the sample rate (eg. 1000Hz / 44100Hz = 0.02267). To let the filter ring out, a number of samples can be specified that will be appended as zeros to the input, and extend the filter response by the same number of samples.<br/></div><div><br/></div><div>Input parameter:</div><div>double[] inputArray, double normalizedFrequency, double gainDb, double q (, numAppendedSamples)</div><div><br/></div><div>The input is not modified.<br/></div>","submitted_at":1426255489000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":2},{"algo_id":8310,"object_id":"9e791bab-c970-11e4-abe1-12f53eafe9d2","username":"audio","algoname":"HipassFilter","algolabel":"HipassFilter","language":"java3","card_line":"A single pole recursive highpass filter for reducing low frequency audio content with 6 dB/octave.","summary":"<div><br/></div><div>A single pole recursive highpass filter for reducing low frequency audio content with 6 dB/octave. The filter frequency is expected to be normalized, ie. between 0 and 0.5. The normalized frequency is simply the target frequency divided by the sample rate (eg. 1000Hz / 44100Hz = 0.02267). To let the filter ring out, a number of samples can be specified that will be appended as zeros to the input, and extend the filter response by the same number of samples.<br/></div><div><br/></div><div><div>The input is not modified.<br/></div><div><br/></div><div></div></div>","submitted_at":1426245060000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":2},{"algo_id":8306,"object_id":"ad5a864e-c96f-11e4-abe1-12f53eafe9d2","username":"pragith","algoname":"SqNum","algolabel":"SqNum","language":"python2-2","submitted_at":1426244234000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":2},{"algo_id":3834,"object_id":"f4cb4060-abfd-11e4-840d-12f53eafe9d2","username":"WebPredict","algoname":"AreAnagrams","algolabel":"AreAnagrams","language":"java3","card_line":"Determines whether or not two strings are anagrams of each other.","summary":"Determines whether or not two strings are anagrams of each other.","submitted_at":1445290390000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":14252,"object_id":"a66e82a0-eae1-11e4-849b-0670f2dc1320","username":"s3utilities","algoname":"DeleteBucket","algolabel":"Delete Bucket","language":"java3","card_line":"This algorithm deletes the Amazon S3 bucket specified.","summary":"<div>This algorithm deletes the Amazon S3 bucket specified. The inputs are <span>a String that represents the region your bucket is in, and </span><span>the Data API URL to a credentials file that contains the bucket name in the first line, your AWS access key in the second line and your AWS secret key in the third line.</span></div><div><br/></div><div>The possible regions are:</div><div><br/><table class=\"overviewSummary\" border=\"0\" cellpadding=\"3\" cellspacing=\"0\" summary=\"Enum Constant Summary table, listing enum constants, and an explanation\"><tbody><tr class=\"altColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#AP_NORTHEAST_1\">AP_NORTHEAST_1</a></strong></code> </td></tr><tr class=\"rowColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#AP_SOUTHEAST_1\">AP_SOUTHEAST_1</a></strong></code> </td></tr><tr class=\"altColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#AP_SOUTHEAST_2\">AP_SOUTHEAST_2</a></strong></code> </td></tr><tr class=\"rowColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#CN_NORTH_1\">CN_NORTH_1</a></strong></code> </td></tr><tr class=\"altColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#EU_CENTRAL_1\">EU_CENTRAL_1</a></strong></code> </td></tr><tr class=\"rowColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#EU_WEST_1\">EU_WEST_1</a></strong></code> </td></tr><tr class=\"altColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#GovCloud\">GovCloud</a></strong></code> </td></tr><tr class=\"rowColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#SA_EAST_1\">SA_EAST_1</a></strong></code> </td></tr><tr class=\"altColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#US_EAST_1\">US_EAST_1</a></strong></code> </td></tr><tr class=\"rowColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#US_WEST_1\">US_WEST_1</a></strong></code></td></tr><tr class=\"altColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#US_WEST_2\">US_WEST_2</a></strong></code> </td></tr></tbody></table></div>","submitted_at":1444030299000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":14251,"object_id":"a12755d7-eae1-11e4-849b-0670f2dc1320","username":"s3utilities","algoname":"CreateBucket","algolabel":"Create Bucket","language":"java3","card_line":"This algorithm creates an Amazon S3 bucket in the region specified.","summary":"<div>This algorithm creates an Amazon S3 bucket in the region specified. The inputs are the Data API URL to a credentials file (that contains the bucket name in the first line, your AWS access key in the second line and your AWS secret key in the third line) and a String that represents the region you would like the bucket to be in.</div><div><br/></div><div>The possible regions are:</div><div><br/><table class=\"overviewSummary\" border=\"0\" cellpadding=\"3\" cellspacing=\"0\" summary=\"Enum Constant Summary table, listing enum constants, and an explanation\"><tbody><tr class=\"altColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#AP_NORTHEAST_1\">AP_NORTHEAST_1</a></strong></code> </td></tr><tr class=\"rowColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#AP_SOUTHEAST_1\">AP_SOUTHEAST_1</a></strong></code> </td></tr><tr class=\"altColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#AP_SOUTHEAST_2\">AP_SOUTHEAST_2</a></strong></code> </td></tr><tr class=\"rowColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#CN_NORTH_1\">CN_NORTH_1</a></strong></code> </td></tr><tr class=\"altColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#EU_CENTRAL_1\">EU_CENTRAL_1</a></strong></code> </td></tr><tr class=\"rowColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#EU_WEST_1\">EU_WEST_1</a></strong></code> </td></tr><tr class=\"altColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#GovCloud\">GovCloud</a></strong></code> </td></tr><tr class=\"rowColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#SA_EAST_1\">SA_EAST_1</a></strong></code> </td></tr><tr class=\"altColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#US_EAST_1\">US_EAST_1</a></strong></code> </td></tr><tr class=\"rowColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#US_WEST_1\">US_WEST_1</a></strong></code></td></tr><tr class=\"altColor\"><td class=\"colOne\"><code><strong><a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html#US_WEST_2\">US_WEST_2</a></strong></code> </td></tr></tbody></table></div>","submitted_at":1444030202000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":15829,"object_id":"c80c32ff-3485-11e5-aae6-12ad1a8c1691","username":"Nilojyoti","algoname":"ConferenceNameMatching","algolabel":"Conference Name Matching","language":"python2-2","card_line":"The sample naive algorithm for the Conference Name Disambiguation bounty.","summary":"<p>The sample naive algorithm for the <a href=\"https://algorithmia.com/bounties/88\">Conference Name Disambiguation</a> bounty.</p>","submitted_at":1438020009000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":1870,"object_id":"5e29c7a4-6b75-11e4-bad7-04011d260101","username":"weka","algoname":"XMeansClusterer","algolabel":"XMeansClusterer","language":"java3","card_line":"Uses XMeans clusterer, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/clusterers/XMeans.html","summary":"<span>Uses XMeans clusterer, as implemented in Weka:</span><div><br/></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/clusterers/XMeans.html\">http://weka.sourceforge.net/doc.stable/weka/clusterers/XMeans.html</a><br/></div><div><br/></div><div>Input Json should include:</div><div><br/></div><div><div><ul><li><b>trainUrl:&#160;</b>a dataset URL&#160;pointing to your dataset in the Data API</li></ul></div><div><br/></div><div>Input Json may include:<br/></div><div><br/></div><div><ul><li><b>modelUrl:</b>&#160;a model URL pointing to a file uploaded to the Data API to save the model, if not specified, model is not saved</li><li><b>mode:</b>&#160;if load mode is specified, it loads an existing XMeans clusterer to use on the dataset</li><li><b>options:</b>&#160;specific to each clusterer, if not specified, uses default options. Please see the above documentation for different options for this algorithm.</li></ul></div></div>","submitted_at":1435614899000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":1875,"object_id":"9bbfa75d-6b75-11e4-bad7-04011d260101","username":"weka","algoname":"sIBClusterer","algolabel":"sIBClusterer","language":"java3","card_line":"Uses sIB clusterer, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/clusterers/sIB.html","summary":"<span>Uses sIB clusterer, as implemented in Weka:</span><div><br/></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/clusterers/sIB.html\">http://weka.sourceforge.net/doc.stable/weka/clusterers/sIB.html</a><br/></div><div><br/></div><div>Input Json should include:</div><div><br/></div><div><div><ul><li><b>trainUrl:&#160;</b>a dataset URL&#160;pointing to your dataset in the Data API</li></ul></div><div><br/></div><div>Input Json may include:<br/></div><div><br/></div><div><ul><li><b>modelUrl:</b>&#160;a model URL pointing to a file uploaded to the Data API to save the model, if not specified, model is not saved</li><li><b>mode:</b>&#160;if load mode is specified, it loads an existing sIB clusterer to use on the dataset</li><li><b>options:</b>&#160;specific to each clusterer, if not specified, uses default options. Please see the above documentation for different options for this algorithm.</li></ul></div></div>","submitted_at":1435614809000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":1877,"object_id":"d99102fd-6b75-11e4-bad7-04011d260101","username":"weka","algoname":"WekaMakeDensityBasedClusterer","algolabel":"WekaMakeDensityBasedClusterer","language":"java3","card_line":"Uses MakeDensityBasedClusterer, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/clusterers/MakeDensityBasedClusterer.html","summary":"<span>Uses MakeDensityBasedClusterer, as implemented in Weka:</span><div><br/></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/clusterers/MakeDensityBased.html\">http://weka.sourceforge.net/doc.stable/weka/clusterers/MakeDensityBasedClusterer.html</a><br/></div><div><br/></div><div>Input Json should include:</div><div><br/></div><div><div><ul><li><b>trainUrl:&#160;</b>a dataset URL&#160;pointing to your dataset in the Data API</li></ul></div><div><br/></div><div>Input Json may include:<br/></div><div><br/></div><div><ul><li><b>modelUrl:</b>&#160;a model URL pointing to a file uploaded to the Data API to save the model, if not specified, model is not saved</li><li><b>mode:</b>&#160;if load mode is specified, it loads an existing Make Density Based clusterer to use on the dataset</li><li><b>options:</b>&#160;specific to each clusterer, if not specified, uses default options. Please see the above documentation for different options for this algorithm.</li></ul></div></div>","submitted_at":1435614723000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":1883,"object_id":"17c1ce23-6b77-11e4-bad7-04011d260101","username":"weka","algoname":"WekaFilteredClusterer","algolabel":"WekaFilteredClusterer","language":"java3","card_line":"Uses Filtered clusterer, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/clusterers/FilteredClusterer.html","summary":"<span>Uses Filtered clusterer, as implemented in Weka:</span><div><br/></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/clusterers/Filtered.html\">http://weka.sourceforge.net/doc.stable/weka/clusterers/FilteredClusterer.html</a><br/></div><div><br/></div><div>Input Json should include:</div><div><br/></div><div><div><ul><li><b>trainUrl:&#160;</b>a dataset URL&#160;pointing to your dataset in the Data API</li></ul></div><div><br/></div><div>Input Json may include:<br/></div><div><br/></div><div><ul><li><b>modelUrl:</b>&#160;a model URL pointing to a file uploaded to the Data API to save the model, if not specified, model is not saved</li><li><b>mode:</b>&#160;if load mode is specified, it loads an existing Filtered clusterer to use on the dataset</li><li><b>options:</b>&#160;specific to each clusterer, if not specified, uses default options. Please see the above documentation for different options for this algorithm.</li></ul></div></div>","submitted_at":1435614046000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":1886,"object_id":"bba73329-6b77-11e4-bad7-04011d260101","username":"weka","algoname":"EMClusterer","algolabel":"EMClusterer","language":"java3","card_line":"Uses EM clusterer, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/clusterers/EM.html","summary":"<span>Uses EM clusterer, as implemented in Weka:</span><div><br/></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/clusterers/EM.html\">http://weka.sourceforge.net/doc.stable/weka/clusterers/EM.html</a><br/></div><div><br/></div><div>Input Json should include:</div><div><br/></div><div><ul><li><b>trainUrl:&#160;</b>a dataset URL&#160;pointing to your dataset in the Data API</li></ul></div><div><br/></div><div>Input Json may include:<br/></div><div><br/></div><div><ul><li><b>modelUrl:</b>&#160;a model URL pointing to a file uploaded to the Data API to save the model, if not specified, model is not saved</li><li><b>mode:</b>&#160;if load mode is specified, it loads an existing EM clusterer to use on the dataset</li><li><b>options:</b>&#160;specific to each clusterer, if not specified, uses default options. Please see the above documentation for different options for this algorithm.</li></ul></div>","submitted_at":1435613934000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":15274,"object_id":"57edf261-19df-11e5-a825-06910d997133","username":"rickesh","algoname":"ObjectLostAlgorithm","algolabel":"ObjectLostAlgorithm","language":"python2-2","submitted_at":1435088379000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":1},{"algo_id":15090,"object_id":"911c0abb-10ab-11e5-89ff-123a3b0693f5","username":"lt","algoname":"abc","algolabel":"abc","language":"java3","submitted_at":1434076495000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":2643,"object_id":"9399babb-8701-11e4-be78-12e1fbfbf82c","username":"graph","algoname":"JVertexCover","algolabel":"JVertexCover","language":"java3","card_line":"Finds an approximate vertex cover for the given graph.","summary":"<span>Finds an approximate vertex cover for the given graph.</span><span>&#160;The output is only an approximation since the actual calculation is NP-complete.</span><div><font color=\"#000000\" face=\"Times\" size=\"3\"><br/></font><div><div>Inputs:</div><div><ul><li>A graph represented as a map from vertices (strings) to a list of neighbors (list of strings)&#160;<b>OR</b>&#160;the url to the Data API file that holds the graph that you would like to be read (currently supported formats: GML)</li></ul></div></div></div>","submitted_at":1430444264000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":2600,"object_id":"d9e9d01a-84cd-11e4-be78-12e1fbfbf82c","username":"graph","algoname":"JChromaticNumber","algolabel":"JChromaticNumber","language":"java3","card_line":"Finds an approximate for the chromatic number; minimal number of colors needed to color each vertex such that no two adjacent vertices share the same color.","summary":"Finds an approximate for&#160;<span>the chromatic number; minimal number of colors needed to color each vertex such that no two adjacent vertices share the same color. The output is only an approximation since the actual calculation is NP-complete.</span><div><font color=\"#000000\" face=\"Times\" size=\"3\"><span><br/></span></font><div><div>Inputs:</div><div><ul><li>A graph represented as a map from vertices (strings) to a list of neighbors (list of strings)&#160;<b>OR</b>&#160;the url to the Data API file that holds the graph that you would like to be read (currently supported formats: GML)</li></ul></div></div></div>","submitted_at":1430444241000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":2598,"object_id":"6949b0e6-84ca-11e4-be78-12e1fbfbf82c","username":"graph","algoname":"JBlockCutpointGraph","algolabel":"JBlockCutpointGraph","language":"java3","card_line":"Finds the cutpoints in the given graph.","summary":"Finds the cutpoints in the given graph.<div><br/></div><div><div>Inputs:</div><div><ul><li>A graph represented as a map from vertices (strings) to a list of neighbors (list of strings)&#160;<b>OR</b>&#160;the url to the Data API file that holds the graph that you would like to be read (currently supported formats: GML)</li></ul></div></div>","submitted_at":1430444234000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":1523,"object_id":"4b03ad6a-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"DMNBtext","algolabel":"DMNBtext","language":"java3","card_line":"This is the DMNBtext classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/DMNBtext.html","summary":"<div><span>This is the DMNBtext classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/DMNBtext.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/DMNBtext.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443969000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":1527,"object_id":"50dfcc24-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"NaiveBayesMultinomialUpdateable","algolabel":"NaiveBayesMultinomialUpdateable","language":"java3","card_line":"This is the NaiveBayesMultinomialUpdateable classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/NaiveBayesMultinomialUpdateable.html","summary":"<div><span>This is the NaiveBayesMultinomialUpdateable classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/NaiveBayesMultinomialUpdateable.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/NaiveBayesMultinomialUpdateable.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443948000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":1536,"object_id":"5de45fa4-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"LinearRegression","algolabel":"LinearRegression","language":"java3","card_line":"This is the LinearRegression classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/LinearRegression.html","summary":"<div><span>This is the LinearRegression classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/LinearRegression.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/LinearRegression.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443916000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":1538,"object_id":"60b8498f-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"MultilayerPerceptron","algolabel":"MultilayerPerceptron","language":"java3","card_line":"This is the MultilayerPerceptron classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/MultilayerPerceptron.html","summary":"<div><span>This is the MultilayerPerceptron classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/MultilayerPerceptron.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/MultilayerPerceptron.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443908000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":1544,"object_id":"698e250e-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"SMO","algolabel":"SMO","language":"java3","card_line":"This is the SMO classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/SMO.html","summary":"<div><span>This is the SMO classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/SMO.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/SMO.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443882000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":1546,"object_id":"6c6a3109-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"SPegasos","algolabel":"SPegasos","language":"java3","card_line":"This is the SPegasos classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/SPegasos.html","summary":"<div><span>This is the SPegasos classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/SPegasos.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/SPegasos.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443870000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":1559,"object_id":"7f6b3490-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"ClassificationViaRegression","algolabel":"ClassificationViaRegression","language":"java3","card_line":"This is the ClassificationViaRegression classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/ClassificationViaRegression.html","summary":"<div><span>This is the ClassificationViaRegression classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/ClassificationViaRegression.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/ClassificationViaRegression.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443667000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":1571,"object_id":"90aeaa03-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"MultiClassClassifier","algolabel":"MultiClassClassifier","language":"java3","card_line":"This is the MultiClassClassifier classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/MultiClassClassifier.html","summary":"<div><span>This is the MultiClassClassifier classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/MultiClassClassifier.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/MultiClassClassifier.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443615000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":1584,"object_id":"a3b68242-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"ThresholdSelector","algolabel":"ThresholdSelector","language":"java3","card_line":"This is the ThresholdSelector classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/ThresholdSelector.html","summary":"<div><span>This is the ThresholdSelector classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/ThresholdSelector.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/ThresholdSelector.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443562000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":1585,"object_id":"a50df97b-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"Vote","algolabel":"Vote","language":"java3","card_line":"This is the Vote classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/Vote.html","summary":"<div><span>This is the Vote classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/Vote.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/Vote.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443561000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":1598,"object_id":"b826a64a-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"HyperPipes","algolabel":"HyperPipes","language":"java3","card_line":"This is the HyperPipes classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/misc/HyperPipes.html","summary":"<div><span>This is the HyperPipes classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/misc/HyperPipes.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/misc/HyperPipes.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443064000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":1734,"object_id":"da63bb98-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"SimpleCart","algolabel":"SimpleCart","language":"java3","card_line":"This is the SimpleCart classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/SimpleCart.html","summary":"<div><span>This is the SimpleCart classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/SimpleCart.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/SimpleCart.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430442734000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":1736,"object_id":"2075a41f-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"AbstractTimeSeries","algolabel":"AbstractTimeSeries","language":"java3","card_line":"This is the AbstractTimeSeries filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/AbstractTimeSeries.html","summary":"<div><span>This is the AbstractTimeSeries filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/AbstractTimeSeries.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/AbstractTimeSeries.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442730000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":1753,"object_id":"39908ce3-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"MergeTwoValues","algolabel":"MergeTwoValues","language":"java3","card_line":"This is the MergeTwoValues filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/MergeTwoValues.html","summary":"<div><span>This is the MergeTwoValues filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/MergeTwoValues.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/MergeTwoValues.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442660000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":1775,"object_id":"59243f7f-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"ReplaceMissingValues","algolabel":"ReplaceMissingValues","language":"java3","card_line":"This is the ReplaceMissingValues filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/ReplaceMissingValues.html","summary":"<div><span>This is the ReplaceMissingValues filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/ReplaceMissingValues.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/ReplaceMissingValues.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442345000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":1793,"object_id":"7370ba6d-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"Randomize","algolabel":"Randomize","language":"java3","card_line":"This is the Randomize filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/instance/Randomize.html","summary":"<div><span>This is the Randomize filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/instance/Randomize.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/instance/Randomize.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442287000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":1802,"object_id":"8066e78b-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"SubsetByExpression","algolabel":"SubsetByExpression","language":"java3","card_line":"This is the SubsetByExpression filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/instance/SubsetByExpression.html","summary":"<div><span>This is the SubsetByExpression filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/instance/SubsetByExpression.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/instance/SubsetByExpression.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430441814000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":14138,"object_id":"4e138695-e7e9-11e4-849b-0670f2dc1320","username":"marcky","algoname":"ImageElement","algolabel":"ImageElement","language":"java3","submitted_at":1429596283000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":13151,"object_id":"f7ed6681-d728-11e4-8df1-12f53eafe9d2","username":"BigDataGuru","algoname":"GraphInductiveScala","algolabel":"Graph Inductive Scala","language":"scala2","card_line":"Inductive graph implementation based on Martin Erwig's paper: * http://web.engr.oregonstate.edu/~erwig/papers/InductiveGraphs_JFP01.pdf","summary":"<div>Inductive graph implementation based on Martin Erwig's paper:&#160;</div><div>&#160;* http://web.engr.oregonstate.edu/~erwig/papers/InductiveGraphs_JFP01.pdf</div>","submitted_at":1427753187000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":7177,"object_id":"785f7ff3-c8ea-11e4-abe1-12f53eafe9d2","username":"mjhb","algoname":"test2","algolabel":"test2","language":"scala2","card_line":"the exponentiator","summary":"the exponentiator","submitted_at":1427141203000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":1},{"algo_id":12671,"object_id":"56bf6f09-d15b-11e4-abe1-12f53eafe9d2","username":"dalencar87","algoname":"teste","algolabel":"teste","language":"java3","submitted_at":1427115308000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":11985,"object_id":"61254204-cea2-11e4-abe1-12f53eafe9d2","username":"RodolfoFonseca","algoname":"jogoDaVelha","algolabel":"jogoDaVelha","language":"java3","submitted_at":1426815835000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":11983,"object_id":"e7b8cf49-cea0-11e4-abe1-12f53eafe9d2","username":"RodolfoFonseca","algoname":"Calculadora","algolabel":"Calculadora","language":"java3","submitted_at":1426815635000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":8606,"object_id":"4eb2d34a-c999-11e4-abe1-12f53eafe9d2","username":"naheed","algoname":"reversethewords","algolabel":"reverse the words","language":"python2-2","submitted_at":1426262153000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":8384,"object_id":"0e026f81-c97b-11e4-abe1-12f53eafe9d2","username":"audio","algoname":"HipassBiquadFilter","algolabel":"HipassBiquadFilter","language":"java3","card_line":"A musical highpass filter (two pole recursive, direct form 1). The filter frequency and quality (resonance) can be specified.","summary":"<div class=\"text-wordwrap ng-binding\">A musical highpass filter (two pole recursive, direct form 1). The filter frequency and quality (resonance) can be specified. The filter frequency is expected to be normalized, ie. between 0 and 0.5. The normalized frequency is simply the target frequency divided by the sample rate (eg. 1000Hz / 44100Hz = 0.02267). To let the filter ring out, a number of samples can be specified that will be appended as zeros to the input, and extend the filter response by the same number of samples.</div><div class=\"text-wordwrap ng-binding\"><br/></div><div class=\"text-wordwrap ng-binding\">Input parameter:</div><div class=\"text-wordwrap ng-binding\">double[] inputArray, double normalizedFrequency, double gainDb (, int numAppendedSamples)</div><div class=\"text-wordwrap ng-binding\"><span><br/></span></div><div class=\"text-wordwrap ng-binding\"><span>The input is not modified.</span><br/></div><div class=\"text-wordwrap ng-binding\"><div><br/></div></div><div></div><div class=\"clearfix\"></div><div class=\"row\"></div>","submitted_at":1426249282000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":7425,"object_id":"c83e2984-c8f9-11e4-abe1-12f53eafe9d2","username":"marknabil","algoname":"cannyedgedetection","algolabel":"canny edge detection","language":"python2-2","submitted_at":1426193605000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":1},{"algo_id":266,"object_id":"b6889d8a-99b6-11e3-8351-040108385a01","username":"kuitang","algoname":"Prim","algolabel":"Prim","language":"java3","submitted_at":1445380058000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":5946,"object_id":"74da2495-bcd8-11e4-840d-12f53eafe9d2","username":"somerythm","algoname":"email","algolabel":"email","language":"java3","submitted_at":1445290627000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":2509,"object_id":"cece5459-8265-11e4-be78-12e1fbfbf82c","username":"lixinso","algoname":"svmxin","algolabel":"svmxin","language":"java3","submitted_at":1445289493000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":337,"object_id":"ffb33160-aa27-11e3-8351-040108385a01","username":"simoneau","algoname":"test","algolabel":"test","language":"java3","submitted_at":1445289242000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1100,"object_id":"bac569f4-1bf0-11e4-9b7d-04011d260101","username":"YMbh","algoname":"StronglyConnectedComponents","algolabel":"Strongly Connected Components","language":"java3","card_line":"Input: an array of directed Edges where each edge is given by a start and end vertices {\"start\": \"vertexA\", \"end\": \"vertexB\"}.","summary":"Input: an array of directed Edges where each edge is given by a start and end vertices {&#34;start&#34;: &#34;vertexA&#34;, &#34;end&#34;: &#34;vertexB&#34;}.<br/>Output: the algorithm returns an array which maps vertices to natural numbers describing to which connected component the vertex contains like {&#34;vertexA&#34;: 1, &#34;vertexB&#34;: 4, ....}.<br/>","submitted_at":1445289153000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":17125,"object_id":"cfaf64b2-7098-11e5-aae6-12ad1a8c1691","username":"sumanthbvss","algoname":"Html2TextMultiplefiles","algolabel":"Html2TextMultiplefiles","language":"python2-2","card_line":"keep required html files in same folder as py file","summary":"<p>keep required html files in same folder as py file<br/></p>","submitted_at":1444623791000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":16808,"object_id":"d30bd1a3-6392-11e5-aae6-12ad1a8c1691","username":"adriantest","algoname":"ddd","algolabel":"ddd","language":"python2-2","card_line":"asdasd","summary":"<p><a href=\"http://javascript:alert(2);\">asdasd</a></p>","submitted_at":1443193051000,"discoverable_world":true,"source_world":true,"license":"apache2","call_count":0},{"algo_id":16776,"object_id":"4c6c82fe-628f-11e5-aae6-12ad1a8c1691","username":"reevu","algoname":"KnuthMorrisPrattsubstringsearch","algolabel":"Knuth-Morris-Pratt substring search","language":"java4","card_line":"The basic idea behind the algorithm  discovered by Knuth, Morris, and Pratt is this: whenever we detect a mismatch, we  already know some of the characters in the text (since they ...","summary":"<p><span style=\"color: rgb(35,31,32);\">The basic idea behind the algorithm <span style=\"color: rgb(35,31,32);\">discovered by Knuth, Morris, and Pratt is this: whenever we detect a mismatch, we <span style=\"color: rgb(35,31,32);\">already know some of the characters in the text (since they matched the pattern characters prior to the mismatch). We can take advantage of this information to avoid backing <span style=\"color: rgb(35,31,32);\">up the text pointer over all those known characters.</span></span></span></span></p><p><span style=\"color: rgb(35,31,32);\"><span style=\"color: rgb(35,31,32);\"><span style=\"color: rgb(35,31,32);\"><span style=\"color: rgb(35,31,32);\"> <span style=\"color: rgb(35,31,32);\">As a specific example, suppose that we have a two-character alphabet and are searching for the pattern <span style=\"color: rgb(35,31,32);\">B A A A A A A A A A<span style=\"color: rgb(35,31,32);\">. Now, suppose that we match five characters in the pattern, with a mismatch on the sixth. When the mismatch is detected,<span style=\"color: rgb(35,31,32);\">we know that the six previous <span style=\"color: rgb(35,31,32);\">characters in the text must <span style=\"color: rgb(35,31,32);\">be <span style=\"color: rgb(35,31,32);\">B A A A A B <span style=\"color: rgb(35,31,32);\">(the first <span style=\"color: rgb(35,31,32);\">five match and the sixth does <span style=\"color: rgb(35,31,32);\">not), with the text pointer<br/><span style=\"color: rgb(35,31,32);\">now pointing at the <span style=\"color: rgb(35,31,32);\">B <span style=\"color: rgb(35,31,32);\">at the <span style=\"color: rgb(35,31,32);\">end. The key observation is <span style=\"color: rgb(35,31,32);\">that we need not back up the <span style=\"color: rgb(35,31,32);\">text pointer <span style=\"color: rgb(35,31,32);\">i<span style=\"color: rgb(35,31,32);\">, since the previous four characters in the text <span style=\"color: rgb(35,31,32);\">are all <span style=\"color: rgb(35,31,32);\">A<span style=\"color: rgb(35,31,32);\">s and do not match <span style=\"color: rgb(35,31,32);\">the first character in the pattern. Furthermore, the character currently pointed to by <span style=\"color: rgb(35,31,32);\">i <span style=\"color: rgb(35,31,32);\">is a <span style=\"color: rgb(35,31,32);\">B <span style=\"color: rgb(35,31,32);\">and does match the first character in the pattern, so we can increment <span style=\"color: rgb(35,31,32);\">i <span style=\"color: rgb(35,31,32);\">and <span style=\"color: rgb(35,31,32);\">compare the next character in the text with the second character in the pattern. This <span style=\"color: rgb(35,31,32);\">argument leads to the observation that, for this pattern, we can change the <span style=\"color: rgb(35,31,32);\">else <span style=\"color: rgb(35,31,32);\">clause <span style=\"color: rgb(35,31,32);\">in the alternate brute-force implementation to just set <span style=\"color: rgb(35,31,32);\">j = 1 <span style=\"color: rgb(35,31,32);\">(and not decrement <span style=\"color: rgb(35,31,32);\">i<span style=\"color: rgb(35,31,32);\">). <br/><span style=\"color: rgb(35,31,32);\">Since the value of <span style=\"color: rgb(35,31,32);\">i <span style=\"color: rgb(35,31,32);\">does not change within the loop, this method does at most <span style=\"color: rgb(35,31,32);\">N <span style=\"color: rgb(35,31,32);\">character compares. The practical effect of this particular change is limited to this particular <span style=\"color: rgb(35,31,32);\">pattern, but the idea is worth thinking about—the Knuth-Morris-Pratt algorithm is a <span style=\"color: rgb(35,31,32);\">generalization of it. Surprisingly, it is <span style=\"color: rgb(35,31,32);\"><i>always </i><span style=\"color: rgb(35,31,32);\">possible to find a value to set the <span style=\"color: rgb(35,31,32);\">j <span style=\"color: rgb(35,31,32);\">pointer <span style=\"color: rgb(35,31,32);\">to on a mismatch, so that the <span style=\"color: rgb(35,31,32);\">i <span style=\"color: rgb(35,31,32);\">pointer is never decremented.</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br/>&#13;&#13;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br/></p>","submitted_at":1443081908000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":16553,"object_id":"921dddff-5605-11e5-aae6-12ad1a8c1691","username":"EgyptianEagle","algoname":"hima","algolabel":"hima","language":"java4","submitted_at":1441703333000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":0},{"algo_id":16113,"object_id":"db10e53d-40f2-11e5-aae6-12ad1a8c1691","username":"quantum","algoname":"CND","algolabel":"CND","language":"python2-2","submitted_at":1439384830000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":0},{"algo_id":16070,"object_id":"fda15e92-40c8-11e5-aae6-12ad1a8c1691","username":"gourab5139014","algoname":"TestAlgo","algolabel":"TestAlgo","language":"java3","submitted_at":1439367319000,"discoverable_world":true,"source_world":true,"license":"gpl3","call_count":0},{"algo_id":15653,"object_id":"70058a0b-2ad0-11e5-a825-06910d997133","username":"sroil","algoname":"RoiTest","algolabel":"RoiTest","language":"java3","submitted_at":1436951102000,"discoverable_world":true,"source_world":false,"license":"apl","call_count":0},{"algo_id":1879,"object_id":"204d1c4a-6b76-11e4-bad7-04011d260101","username":"weka","algoname":"WekaHierarchicalClusterer","algolabel":"WekaHierarchicalClusterer","language":"java3","card_line":"Uses Hierarchical clusterer, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/clusterers/HierarchicalClusterer.html","summary":"<span>Uses Hierarchical clusterer, as implemented in Weka:</span><div><br/></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/clusterers/Hierarchical.html\">http://weka.sourceforge.net/doc.stable/weka/clusterers/HierarchicalClusterer.html</a><br/></div><div><br/></div><div>Input Json should include:</div><div><br/></div><div><ul><li><b>trainUrl:&#160;</b>a dataset URL&#160;pointing to your dataset in the Data API</li></ul></div><div><br/></div><div>Input Json may include:<br/></div><div><br/></div><div><ul><li><b>modelUrl:</b>&#160;a model URL pointing to a file uploaded to the Data API to save the model, if not specified, model is not saved</li><li><b>mode:</b>&#160;if load mode is specified, it loads an existing Hierarchical clusterer to use on the dataset</li><li><b>options:</b>&#160;specific to each clusterer, if not specified, uses default options. Please see the above documentation for different options for this algorithm.</li></ul></div>","submitted_at":1435614091000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1888,"object_id":"0a60bedb-6b78-11e4-bad7-04011d260101","username":"weka","algoname":"CobwebClusterer","algolabel":"CobwebClusterer","language":"java3","card_line":"Uses Cobweb clusterer, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/clusterers/Cobweb.html","summary":"<span>Uses Cobweb clusterer, as implemented in Weka:</span><div><br/></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/clusterers/Cobweb.html\">http://weka.sourceforge.net/doc.stable/weka/clusterers/Cobweb.html</a><br/></div><div><br/></div><div>Input Json should include:</div><div><br/></div><div><ul><li><b>trainUrl: </b>a dataset URL&#160;pointing to your dataset in the Data API</li></ul></div><div><br/></div><div>Input Json may include:<br/></div><div><br/></div><div><ul><li><b>modelUrl: </b>a model URL pointing to a file uploaded to the Data API to save the model, if not specified, model is not saved</li><li><b>mode: </b>if load mode is specified, it loads an existing Cobweb clusterer to use on the dataset</li><li><b>options:</b> specific to each clusterer, if not specified, uses default options. Please see the above documentation for different options for this algorithm.</li></ul></div>","submitted_at":1435613899000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1887,"object_id":"ea73520c-6b77-11e4-bad7-04011d260101","username":"weka","algoname":"CLOPEClusterer","algolabel":"CLOPEClusterer","language":"java3","card_line":"Uses CLOPE clusterer, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/clusterers/CLOPE.html","summary":"<span>Uses CLOPE clusterer, as implemented in Weka:</span><div><br/></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/clusterers/CLOPE.html\">http://weka.sourceforge.net/doc.stable/weka/clusterers/CLOPE.html</a><br/></div><div><br/></div><div><div><div>Input Json should include:</div><div><br/></div><div><ul><li><b>trainUrl:&#160;</b>a dataset URL&#160;pointing to your dataset in the Data API</li></ul></div><div><br/></div><div>Input Json may include:<br/></div><div><br/></div><div><ul><li><b>modelUrl:</b>&#160;a model URL pointing to a file uploaded to the Data API to save the model, if not specified, model is not saved</li><li><b>mode:</b>&#160;if load mode is specified, it loads an existing CLOPE clusterer to use on the dataset</li><li><b>options:</b>&#160;specific to each clusterer, if not specified, uses default options. Please see the above documentation for different options for this algorithm.</li></ul></div></div></div>","submitted_at":1435613779000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":14540,"object_id":"15cad840-f552-11e4-89ff-123a3b0693f5","username":"lt","algoname":"ll","algolabel":"ll","language":"java3","submitted_at":1431069401000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":14539,"object_id":"fbd7b930-f54e-11e4-89ff-123a3b0693f5","username":"lt","algoname":"ggggg","algolabel":"ggggg","language":"java3","card_line":"tt","summary":"<h2>tt</h2>","submitted_at":1431068784000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":14522,"object_id":"db47031c-f467-11e4-849b-0670f2dc1320","username":"crunort","algoname":"scriptalert1script","algolabel":"<script>alert(1)</script>","language":"scala2","card_line":"test","summary":"<p>test<br/></p>","submitted_at":1430968795000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":106,"object_id":"6775ab2a-8e3c-11e3-8351-040108385a01","username":"freddyH","algoname":"Finance_PresentValue","algolabel":"Finance PresentValue","language":"java3","card_line":"PV(rate, NPER, PMT, FV, type) Returns the present value of an investment resulting from a series of regular payments.","summary":"PV(rate, NPER, PMT, FV, type)\nReturns the present value of an investment resulting from a series of regular payments.&nbsp;<div><ul><li>&nbsp;rate defines the interest rate per period.&nbsp;</li><li>nper is the total number of periods.\n*pmt is the regular payment made per period.&nbsp;</li><li>fv (optional) defines the future value remaining after the final installment has been made.&nbsp;</li><li>type (optional) defines whether the payment is due at the beginning (1) or the end (0) of a period.</li></ul></div>","submitted_at":1430447412000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":2317,"object_id":"212ba47b-792b-11e4-bad7-04011d260101","username":"opencv","algoname":"RTrees","algolabel":"RTrees","language":"java3","card_line":"A basic interface to OpenCV's RTrees, as explained in http://docs.opencv.org/java/org/opencv/ml/CvRTrees.html.","summary":"<span>A basic interface to OpenCV's RTrees, as explained in&#160;http://docs.opencv.org/java/org/opencv/ml/CvRTrees.html. It implements the randomized trees algorithm.&#160;</span>","submitted_at":1430445529000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":2313,"object_id":"fa4bdc10-792a-11e4-bad7-04011d260101","username":"opencv","algoname":"ERTrees","algolabel":"ERTrees","language":"java3","card_line":"A basic interface to OpenCV's ERTrees, as explained in http://docs.opencv.org/java/org/opencv/ml/CvERTrees.html.","summary":"A basic interface to OpenCV's ERTrees, as explained in&#160;http://docs.opencv.org/java/org/opencv/ml/CvERTrees.html. It implements the extremely randomized trees algorithm.&#160;","submitted_at":1430445527000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":2312,"object_id":"ee341ce2-792a-11e4-bad7-04011d260101","username":"opencv","algoname":"DTree","algolabel":"DTree","language":"java3","card_line":"A basic interface to OpenCV's DTree, as explained in http://docs.opencv.org/java/org/opencv/ml/CvDTree.html.","summary":"<span>A basic interface to OpenCV's DTree, as explained in&#160;http://docs.opencv.org/java/org/opencv/ml/CvDTree.html. It implements the randomized trees algorithm.&#160;</span>","submitted_at":1430445526000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":2318,"object_id":"28bb30c1-792b-11e4-bad7-04011d260101","username":"opencv","algoname":"SVM","algolabel":"SVM","language":"java3","card_line":"A basic interface to OpenCV's SVM, as explained in http://docs.opencv.org/java/org/opencv/ml/CvSVM.html .","summary":"A basic interface to OpenCV's SVM, as explained in&#160;<a href=\"http://docs.opencv.org/java/org/opencv/ml/CvSVM.html\">http://docs.opencv.org/java/org/opencv/ml/CvSVM.html</a>. It implements the randomized trees algorithm.&#160;","submitted_at":1430445526000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":2316,"object_id":"14260952-792b-11e4-bad7-04011d260101","username":"opencv","algoname":"NormalBayesClassifier","algolabel":"Normal Bayes Classifier","language":"java3","card_line":"A basic interface to OpenCV's DTree, as explained in http://docs.opencv.org/java/org/opencv/ml/CvNormalBayesClassifier.html .","summary":"<span>A basic interface to OpenCV's DTree, as explained in&#160;</span><span><a href=\"http://docs.opencv.org/java/org/opencv/ml/CvNormalBayesClassifier.html\">http://docs.opencv.org/java/org/opencv/ml/CvNormalBayesClassifier.html</a></span><span>.</span>","submitted_at":1430445524000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":2315,"object_id":"0d62fc36-792b-11e4-bad7-04011d260101","username":"opencv","algoname":"KNearest","algolabel":"KNearest","language":"java3","card_line":"An interface to OpenCV's K nearest neighbor, as explained in http://docs.opencv.org/java/org/opencv/ml/CvKNearest.html .","summary":"<span>An interface to OpenCV's K nearest neighbor, as explained in&#160;</span><span><a href=\"http://docs.opencv.org/java/org/opencv/ml/CvKNearest.html\">http://docs.opencv.org/java/org/opencv/ml/CvKNearest.html</a></span><span>.</span>","submitted_at":1430445522000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":2314,"object_id":"065e10ed-792b-11e4-bad7-04011d260101","username":"opencv","algoname":"GBTrees","algolabel":"GBTrees","language":"java3","card_line":"A basic interface to OpenCV's DTree, as explained in http://docs.opencv.org/java/org/opencv/ml/CvGBTrees.html .","summary":"<span>A basic interface to OpenCV's DTree, as explained in&#160;</span><span><a href=\"http://docs.opencv.org/java/org/opencv/ml/CvGBTrees.html\">http://docs.opencv.org/java/org/opencv/ml/CvGBTrees.html</a></span><span>. It implements the&#160;gradient boosted trees algorithm.&#160;</span>","submitted_at":1430445501000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1519,"object_id":"457b5ec3-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"AODEsr","algolabel":"AODEsr","language":"java3","card_line":"This is the AODEsr classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/AODEsr.html","summary":"<div><span>This is the AODEsr classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/AODEsr.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/AODEsr.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443985000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1521,"object_id":"483ba447-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"BayesNet","algolabel":"BayesNet","language":"java3","card_line":"This is the BayesNet classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/BayesNet.html","summary":"<div><span>This is the BayesNet classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/BayesNet.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/BayesNet.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443973000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1522,"object_id":"49a6a64b-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"ComplementNaiveBayes","algolabel":"ComplementNaiveBayes","language":"java3","card_line":"This is the ComplementNaiveBayes classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/ComplementNaiveBayes.html","summary":"<div><span>This is the ComplementNaiveBayes classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/ComplementNaiveBayes.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/ComplementNaiveBayes.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443971000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1529,"object_id":"53ef4ef4-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"NaiveBayesUpdateable","algolabel":"NaiveBayesUpdateable","language":"java3","card_line":"This is the NaiveBayesUpdateable classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/NaiveBayesUpdateable.html","summary":"<div><span>This is the NaiveBayesUpdateable classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/NaiveBayesUpdateable.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/NaiveBayesUpdateable.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443943000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1530,"object_id":"5555a739-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"WAODE","algolabel":"WAODE","language":"java3","card_line":"This is the WAODE classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/WAODE.html","summary":"<div><span>This is the WAODE classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/WAODE.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/bayes/WAODE.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443942000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1532,"object_id":"58160c4a-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"IsotonicRegression","algolabel":"IsotonicRegression","language":"java3","card_line":"This is the IsotonicRegression classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/IsotonicRegression.html","summary":"<div><span>This is the IsotonicRegression classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/IsotonicRegression.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/IsotonicRegression.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443931000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1534,"object_id":"5b220095-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"LibLINEAR","algolabel":"LibLINEAR","language":"java3","card_line":"This is the LibLINEAR classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/LibLINEAR.html","summary":"<div><span>This is the LibLINEAR classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/LibLINEAR.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/LibLINEAR.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443921000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1539,"object_id":"625ef0fd-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"PaceRegression","algolabel":"PaceRegression","language":"java3","card_line":"This is the PaceRegression classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/PaceRegression.html","summary":"<div><span>This is the PaceRegression classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/PaceRegression.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/PaceRegression.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443897000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1540,"object_id":"63bd7a85-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"PLSClassifier","algolabel":"PLSClassifier","language":"java3","card_line":"This is the PLSClassifier classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/PLSClassifier.html","summary":"<div><span>This is the PLSClassifier classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/PLSClassifier.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/PLSClassifier.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443895000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1541,"object_id":"6521b9e4-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"RBFNetwork","algolabel":"RBFNetwork","language":"java3","card_line":"This is the RBFNetwork classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/RBFNetwork.html","summary":"<div><span>This is the RBFNetwork classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/RBFNetwork.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/RBFNetwork.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443895000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1545,"object_id":"6afe12cd-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"SMOreg","algolabel":"SMOreg","language":"java3","card_line":"This is the SMOreg classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/SMOreg.html","summary":"<div><span>This is the SMOreg classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/SMOreg.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/SMOreg.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443871000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1547,"object_id":"6dd459f8-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"VotedPerceptron","algolabel":"VotedPerceptron","language":"java3","card_line":"This is the VotedPerceptron classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/VotedPerceptron.html","summary":"<div><span>This is the VotedPerceptron classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/VotedPerceptron.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/VotedPerceptron.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443870000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1548,"object_id":"6f397146-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"Winnow","algolabel":"Winnow","language":"java3","card_line":"This is the Winnow classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/Winnow.html","summary":"<div><span>This is the Winnow classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/Winnow.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/functions/Winnow.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443866000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1549,"object_id":"70f5844b-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"IB1","algolabel":"IB1","language":"java3","card_line":"This is the IB1 classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/lazy/IB1.html","summary":"<div><span>This is the IB1 classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/lazy/IB1.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/lazy/IB1.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443863000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1550,"object_id":"725ff6f4-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"IBk","algolabel":"IBk","language":"java3","card_line":"This is the IBk classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/lazy/IBk.html","summary":"<div><span>This is the IBk classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/lazy/IBk.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/lazy/IBk.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443858000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1551,"object_id":"73ca7c14-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"KStar","algolabel":"KStar","language":"java3","card_line":"This is the KStar classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/lazy/KStar.html","summary":"<div><span>This is the KStar classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/lazy/KStar.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/lazy/KStar.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443846000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1552,"object_id":"753003eb-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"LBR","algolabel":"LBR","language":"java3","card_line":"This is the LBR classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/lazy/LBR.html","summary":"<div><span>This is the LBR classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/lazy/LBR.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/lazy/LBR.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443845000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1553,"object_id":"7691582d-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"LWL","algolabel":"LWL","language":"java3","card_line":"This is the LWL classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/lazy/LWL.html","summary":"<div><span>This is the LWL classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/lazy/LWL.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/lazy/LWL.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443844000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1554,"object_id":"7838a48e-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"AdaBoostM1","algolabel":"AdaBoostM1","language":"java3","card_line":"This is the AdaBoostM1 classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/AdaBoostM1.html","summary":"<div><span>This is the AdaBoostM1 classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/AdaBoostM1.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/AdaBoostM1.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443843000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1555,"object_id":"799dfba6-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"AdditiveRegression","algolabel":"AdditiveRegression","language":"java3","card_line":"This is the AdditiveRegression classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/AdditiveRegression.html","summary":"<div><span>This is the AdditiveRegression classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/AdditiveRegression.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/AdditiveRegression.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443842000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1556,"object_id":"7b007e0b-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"AttributeSelectedClassifier","algolabel":"AttributeSelectedClassifier","language":"java3","card_line":"This is the AttributeSelectedClassifier classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/AttributeSelectedClassifier.html","summary":"<div><span>This is the AttributeSelectedClassifier classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/AttributeSelectedClassifier.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/AttributeSelectedClassifier.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443841000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1557,"object_id":"7c5e5ccc-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"Bagging","algolabel":"Bagging","language":"java3","card_line":"This is the Bagging classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/Bagging.html","summary":"<div><span>This is the Bagging classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/Bagging.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/Bagging.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443668000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1558,"object_id":"7dc2e85e-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"ClassificationViaClustering","algolabel":"ClassificationViaClustering","language":"java3","card_line":"This is the ClassificationViaClustering classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/ClassificationViaClustering.html","summary":"<div><span>This is the ClassificationViaClustering classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/ClassificationViaClustering.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/ClassificationViaClustering.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443667000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1560,"object_id":"80c7fb9e-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"CostSensitiveClassifier","algolabel":"CostSensitiveClassifier","language":"java3","card_line":"This is the CostSensitiveClassifier classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/CostSensitiveClassifier.html","summary":"<div><span>This is the CostSensitiveClassifier classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/CostSensitiveClassifier.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/CostSensitiveClassifier.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443657000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1561,"object_id":"822a253f-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"CVParameterSelection","algolabel":"CVParameterSelection","language":"java3","card_line":"This is the CVParameterSelection classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/CVParameterSelection.html","summary":"<div><span>This is the CVParameterSelection classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/CVParameterSelection.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/CVParameterSelection.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443654000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1562,"object_id":"838bdc5e-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"Dagging","algolabel":"Dagging","language":"java3","card_line":"This is the Dagging classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/Dagging.html","summary":"<div><span>This is the Dagging classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/Dagging.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/Dagging.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443644000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1563,"object_id":"84ed6a05-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"Decorate","algolabel":"Decorate","language":"java3","card_line":"This is the Decorate classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/Decorate.html","summary":"<div><span>This is the Decorate classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/Decorate.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/Decorate.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443643000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1564,"object_id":"86a9922a-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"END","algolabel":"END","language":"java3","card_line":"This is the END classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/END.html","summary":"<div><span>This is the END classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/END.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/END.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443642000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1565,"object_id":"88084446-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"FilteredClassifier","algolabel":"FilteredClassifier","language":"java3","card_line":"This is the FilteredClassifier classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/FilteredClassifier.html","summary":"<div><span>This is the FilteredClassifier classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/FilteredClassifier.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/FilteredClassifier.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443642000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1566,"object_id":"896ca2e1-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"Grading","algolabel":"Grading","language":"java3","card_line":"This is the Grading classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/Grading.html","summary":"<div><span>This is the Grading classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/Grading.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/Grading.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443632000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1569,"object_id":"8ddf62dd-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"MetaCost","algolabel":"MetaCost","language":"java3","card_line":"This is the MetaCost classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/MetaCost.html","summary":"<div><span>This is the MetaCost classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/MetaCost.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/MetaCost.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443618000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1570,"object_id":"8f425cfe-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"MultiBoostAB","algolabel":"MultiBoostAB","language":"java3","card_line":"This is the MultiBoostAB classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/MultiBoostAB.html","summary":"<div><span>This is the MultiBoostAB classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/MultiBoostAB.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/MultiBoostAB.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443616000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1572,"object_id":"920a3e72-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"MultiScheme","algolabel":"MultiScheme","language":"java3","card_line":"This is the MultiScheme classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/MultiScheme.html","summary":"<div><span>This is the MultiScheme classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/MultiScheme.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/MultiScheme.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443610000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1573,"object_id":"93876772-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"ClassBalancedND","algolabel":"ClassBalancedND","language":"java3","card_line":"This is the ClassBalancedND classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/nestedDichotomies/ClassBalancedND.html","summary":"<div><span>This is the ClassBalancedND classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/nestedDichotomies/ClassBalancedND.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/nestedDichotomies/ClassBalancedND.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443605000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1574,"object_id":"9534acdd-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"DataNearBalancedND","algolabel":"DataNearBalancedND","language":"java3","card_line":"This is the DataNearBalancedND classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/nestedDichotomies/DataNearBalancedND.html","summary":"<div><span>This is the DataNearBalancedND classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/nestedDichotomies/DataNearBalancedND.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/nestedDichotomies/DataNearBalancedND.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443594000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1575,"object_id":"969c8b40-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"ND","algolabel":"ND","language":"java3","card_line":"This is the ND classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/nestedDichotomies/ND.html","summary":"<div><span>This is the ND classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/nestedDichotomies/ND.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/nestedDichotomies/ND.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443592000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1576,"object_id":"97fd25c0-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"OrdinalClassClassifier","algolabel":"OrdinalClassClassifier","language":"java3","card_line":"This is the OrdinalClassClassifier classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/OrdinalClassClassifier.html","summary":"<div><span>This is the OrdinalClassClassifier classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/OrdinalClassClassifier.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/OrdinalClassClassifier.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443590000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1577,"object_id":"99608cdc-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"RacedIncrementalLogitBoost","algolabel":"RacedIncrementalLogitBoost","language":"java3","card_line":"This is the RacedIncrementalLogitBoost classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/RacedIncrementalLogitBoost.html","summary":"<div><span>This is the RacedIncrementalLogitBoost classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/RacedIncrementalLogitBoost.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/RacedIncrementalLogitBoost.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443590000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1578,"object_id":"9abc3eb3-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"RandomCommittee","algolabel":"RandomCommittee","language":"java3","card_line":"This is the RandomCommittee classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/RandomCommittee.html","summary":"<div><span>This is the RandomCommittee classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/RandomCommittee.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/RandomCommittee.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443585000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1579,"object_id":"9c763a41-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"RandomSubSpace","algolabel":"RandomSubSpace","language":"java3","card_line":"This is the RandomSubSpace classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/RandomSubSpace.html","summary":"<div><span>This is the RandomSubSpace classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/RandomSubSpace.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/RandomSubSpace.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443582000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1580,"object_id":"9dd8d23e-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"RegressionByDiscretization","algolabel":"RegressionByDiscretization","language":"java3","card_line":"This is the RegressionByDiscretization classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/RegressionByDiscretization.html","summary":"<div><span>This is the RegressionByDiscretization classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/RegressionByDiscretization.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/RegressionByDiscretization.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443566000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1581,"object_id":"9f426867-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"RotationForest","algolabel":"RotationForest","language":"java3","card_line":"This is the RotationForest classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/RotationForest.html","summary":"<div><span>This is the RotationForest classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/RotationForest.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/RotationForest.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443565000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1582,"object_id":"a0a31361-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"Stacking","algolabel":"Stacking","language":"java3","card_line":"This is the Stacking classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/Stacking.html","summary":"<div><span>This is the Stacking classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/Stacking.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/Stacking.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443564000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1583,"object_id":"a2033cef-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"StackingC","algolabel":"StackingC","language":"java3","card_line":"This is the StackingC classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/StackingC.html","summary":"<div><span>This is the StackingC classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/StackingC.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/meta/StackingC.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443563000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1587,"object_id":"a7d4b519-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"MDD","algolabel":"MDD","language":"java3","card_line":"This is the MDD classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/mi/MDD.html","summary":"<div><span>This is the MDD classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/mi/MDD.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/mi/MDD.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443104000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1588,"object_id":"a93d4776-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"MIBoost","algolabel":"MIBoost","language":"java3","card_line":"This is the MIBoost classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/mi/MIBoost.html","summary":"<div><span>This is the MIBoost classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/mi/MIBoost.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/mi/MIBoost.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443095000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1589,"object_id":"aaf55988-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"MIDD","algolabel":"MIDD","language":"java3","card_line":"This is the MIDD classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/mi/MIDD.html","summary":"<div><span>This is the MIDD classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/mi/MIDD.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/mi/MIDD.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443095000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1590,"object_id":"ac5e2db3-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"MIEMDD","algolabel":"MIEMDD","language":"java3","card_line":"This is the MIEMDD classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/mi/MIEMDD.html","summary":"<div><span>This is the MIEMDD classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/mi/MIEMDD.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/mi/MIEMDD.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443093000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1591,"object_id":"adcdb17b-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"MILR","algolabel":"MILR","language":"java3","card_line":"This is the MILR classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/mi/MILR.html","summary":"<div><span>This is the MILR classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/mi/MILR.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/mi/MILR.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443090000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1592,"object_id":"af447eb6-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"MINND","algolabel":"MINND","language":"java3","card_line":"This is the MINND classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/mi/MINND.html","summary":"<div><span>This is the MINND classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/mi/MINND.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/mi/MINND.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443090000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1593,"object_id":"b0b23a0f-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"MIOptimalBall","algolabel":"MIOptimalBall","language":"java3","card_line":"This is the MIOptimalBall classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/mi/MIOptimalBall.html","summary":"<div><span>This is the MIOptimalBall classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/mi/MIOptimalBall.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/mi/MIOptimalBall.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443081000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1594,"object_id":"b278a476-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"MISMO","algolabel":"MISMO","language":"java3","card_line":"This is the MISMO classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/mi/MISMO.html","summary":"<div><span>This is the MISMO classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/mi/MISMO.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/mi/MISMO.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443070000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1595,"object_id":"b3e3b3f5-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"MISVM","algolabel":"MISVM","language":"java3","card_line":"This is the MISVM classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/mi/MISVM.html","summary":"<div><span>This is the MISVM classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/mi/MISVM.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/mi/MISVM.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443068000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1596,"object_id":"b54a668f-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"MIWrapper","algolabel":"MIWrapper","language":"java3","card_line":"This is the MIWrapper classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/mi/MIWrapper.html","summary":"<div><span>This is the MIWrapper classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/mi/MIWrapper.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/mi/MIWrapper.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443068000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1597,"object_id":"b6b3fed1-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"SimpleMI","algolabel":"SimpleMI","language":"java3","card_line":"This is the SimpleMI classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/mi/SimpleMI.html","summary":"<div><span>This is the SimpleMI classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/mi/SimpleMI.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/mi/SimpleMI.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443065000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1600,"object_id":"bb32b1eb-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"VFI","algolabel":"VFI","language":"java3","card_line":"This is the VFI classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/misc/VFI.html","summary":"<div><span>This is the VFI classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/misc/VFI.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/misc/VFI.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443044000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1601,"object_id":"bcc4cb9d-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"ConjunctiveRule","algolabel":"ConjunctiveRule","language":"java3","card_line":"This is the ConjunctiveRule classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/rules/ConjunctiveRule.html","summary":"<div><span>This is the ConjunctiveRule classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/rules/ConjunctiveRule.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/rules/ConjunctiveRule.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443043000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1603,"object_id":"bfec264e-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"DTNB","algolabel":"DTNB","language":"java3","card_line":"This is the DTNB classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/rules/DTNB.html","summary":"<div><span>This is the DTNB classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/rules/DTNB.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/rules/DTNB.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443041000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1604,"object_id":"c14a97a2-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"JRip","algolabel":"JRip","language":"java3","card_line":"This is the JRip classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/rules/JRip.html","summary":"<div><span>This is the JRip classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/rules/JRip.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/rules/JRip.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443039000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1605,"object_id":"c2b572e8-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"M5Rules","algolabel":"M5Rules","language":"java3","card_line":"This is the M5Rules classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/rules/M5Rules.html","summary":"<div><span>This is the M5Rules classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/rules/M5Rules.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/rules/M5Rules.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443033000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1606,"object_id":"c423ab1c-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"NNge","algolabel":"NNge","language":"java3","card_line":"This is the NNge classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/rules/NNge.html","summary":"<div><span>This is the NNge classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/rules/NNge.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/rules/NNge.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443019000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1607,"object_id":"c589132e-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"OneR","algolabel":"OneR","language":"java3","card_line":"This is the OneR classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/rules/OneR.html","summary":"<div><span>This is the OneR classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/rules/OneR.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/rules/OneR.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443018000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1608,"object_id":"c73de954-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"PART","algolabel":"PART","language":"java3","card_line":"This is the PART classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/rules/PART.html","summary":"<div><span>This is the PART classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/rules/PART.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/rules/PART.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443017000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1609,"object_id":"c8a3f42a-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"Prism","algolabel":"Prism","language":"java3","card_line":"This is the Prism classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/rules/Prism.html","summary":"<div><span>This is the Prism classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/rules/Prism.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/rules/Prism.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443016000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1610,"object_id":"ca00e3f2-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"Ridor","algolabel":"Ridor","language":"java3","card_line":"This is the Ridor classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/rules/Ridor.html","summary":"<div><span>This is the Ridor classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/rules/Ridor.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/rules/Ridor.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443014000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1611,"object_id":"cb605f17-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"ZeroR","algolabel":"ZeroR","language":"java3","card_line":"This is the ZeroR classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/rules/ZeroR.html","summary":"<div><span>This is the ZeroR classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/rules/ZeroR.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/rules/ZeroR.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430443008000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1612,"object_id":"ccc60412-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"ADTree","algolabel":"ADTree","language":"java3","card_line":"This is the ADTree classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/ADTree.html","summary":"<div><span>This is the ADTree classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/ADTree.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/ADTree.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430442994000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1613,"object_id":"ce79118e-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"BFTree","algolabel":"BFTree","language":"java3","card_line":"This is the BFTree classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/BFTree.html","summary":"<div><span>This is the BFTree classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/BFTree.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/BFTree.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430442993000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1614,"object_id":"cfed7261-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"DecisionStump","algolabel":"DecisionStump","language":"java3","card_line":"This is the DecisionStump classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/DecisionStump.html","summary":"<div><span>This is the DecisionStump classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/DecisionStump.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/DecisionStump.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430442992000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1615,"object_id":"d1607c9f-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"FT","algolabel":"FT","language":"java3","card_line":"This is the FT classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/FT.html","summary":"<div><span>This is the FT classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/FT.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/FT.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430442992000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1718,"object_id":"d434578c-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"J48graft","algolabel":"J48graft","language":"java3","card_line":"This is the J48graft classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/J48graft.html","summary":"<div><span>This is the J48graft classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/J48graft.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/J48graft.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430442848000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1720,"object_id":"d4add264-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"LADTree","algolabel":"LADTree","language":"java3","card_line":"This is the LADTree classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/LADTree.html","summary":"<div><span>This is the LADTree classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/LADTree.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/LADTree.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430442837000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1724,"object_id":"d63f972c-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"M5P","algolabel":"M5P","language":"java3","card_line":"This is the M5P classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/M5P.html","summary":"<div><span>This is the M5P classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/M5P.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/M5P.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430442829000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1722,"object_id":"d5c9e04f-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"LMT","algolabel":"LMT","language":"java3","card_line":"This is the LMT classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/LMT.html","summary":"<div><span>This is the LMT classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/LMT.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/LMT.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430442828000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1726,"object_id":"d745e066-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"NBTree","algolabel":"NBTree","language":"java3","card_line":"This is the NBTree classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/NBTree.html","summary":"<div><span>This is the NBTree classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/NBTree.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/NBTree.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430442827000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1732,"object_id":"d941770e-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"REPTree","algolabel":"REPTree","language":"java3","card_line":"This is the REPTree classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/REPTree.html","summary":"<div><span>This is the REPTree classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/REPTree.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/REPTree.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430442825000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1730,"object_id":"d8d8ad49-6b1a-11e4-bad7-04011d260101","username":"weka","algoname":"RandomTree","algolabel":"RandomTree","language":"java3","card_line":"This is the RandomTree classifier, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/RandomTree.html","summary":"<div><span>This is the RandomTree classifier, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/RandomTree.html\">http://weka.sourceforge.net/doc.stable/weka/classifiers/trees/RandomTree.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following options:</span><br/></div><div><br/></div><div><b>mode:</b>&#160;One of train/update/load. Use&#160;<span>&#34;train&#34; to train a new classifier</span><span>,&#160;use &#34;update&#34;&#160;if you have new instances to train an existing updateable classifier, use&#160;</span><span>&#34;load&#34; to load an existing classifier for classifying test data</span></div><div><b>trainUrl:</b> The path to the training data that you uploaded to our Data API</div><div><b>testUrl:</b> The path to the test data that you would like to get the labels using this classifier (optional if you would like to use the cross-validation option)</div><div><b>modelUrl:</b> The path that you would like to either save the model that is trained or if you would like to load an already trained and saved model</div><div><b>cv:</b> The number of cross-validation folds that you would like to use</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this classifier (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;). For options specific to this classifier, please see Wekadocs linked above</div><div><b>classIndex:</b> Specify the index of the class values in the test set&#160;<span>(</span><i><b>caution:</b></i><span> When using a test set, assumes that the class values are at the last index if the </span><i>classIndex</i><span> parameter is not specified, so please arrange accordingly)</span></div><div><span><br/></span></div>","submitted_at":1430442824000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1737,"object_id":"223a3564-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"Add","algolabel":"Add","language":"java3","card_line":"This is the Add filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/Add.html","summary":"<div><span>This is the Add filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/Add.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/Add.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442716000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1738,"object_id":"23ab7539-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"AddCluster","algolabel":"AddCluster","language":"java3","card_line":"This is the AddCluster filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/AddCluster.html","summary":"<div><span>This is the AddCluster filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/AddCluster.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/AddCluster.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442713000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1739,"object_id":"25141601-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"AddExpression","algolabel":"AddExpression","language":"java3","card_line":"This is the AddExpression filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/AddExpression.html","summary":"<div><span>This is the AddExpression filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/AddExpression.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/AddExpression.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442713000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1740,"object_id":"268bf4b5-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"AddID","algolabel":"AddID","language":"java3","card_line":"This is the AddID filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/AddID.html","summary":"<div><span>This is the AddID filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/AddID.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/AddID.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442712000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1741,"object_id":"27f0bd43-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"AddNoise","algolabel":"AddNoise","language":"java3","card_line":"This is the AddNoise filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/AddNoise.html","summary":"<div><span>This is the AddNoise filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/AddNoise.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/AddNoise.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442708000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1742,"object_id":"29a605a1-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"AddValues","algolabel":"AddValues","language":"java3","card_line":"This is the AddValues filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/AddValues.html","summary":"<div><span>This is the AddValues filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/AddValues.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/AddValues.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442704000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1743,"object_id":"2b12b88b-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"Center","algolabel":"Center","language":"java3","card_line":"This is the Center filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/Center.html","summary":"<div><span>This is the Center filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/Center.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/Center.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442692000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1744,"object_id":"2c75d695-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"ChangeDateFormat","algolabel":"ChangeDateFormat","language":"java3","card_line":"This is the ChangeDateFormat filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/ChangeDateFormat.html","summary":"<div><span>This is the ChangeDateFormat filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/ChangeDateFormat.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/ChangeDateFormat.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442688000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1745,"object_id":"2ddc874f-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"ClassAssigner","algolabel":"ClassAssigner","language":"java3","card_line":"This is the ClassAssigner filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/ClassAssigner.html","summary":"<div><span>This is the ClassAssigner filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/ClassAssigner.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/ClassAssigner.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442688000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1746,"object_id":"2f39924f-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"ClusterMembership","algolabel":"ClusterMembership","language":"java3","card_line":"This is the ClusterMembership filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/ClusterMembership.html","summary":"<div><span>This is the ClusterMembership filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/ClusterMembership.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/ClusterMembership.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442687000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1747,"object_id":"30f1b695-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"Copy","algolabel":"Copy","language":"java3","card_line":"This is the Copy filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/Copy.html","summary":"<div><span>This is the Copy filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/Copy.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/Copy.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442685000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1748,"object_id":"324ee0a2-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"FirstOrder","algolabel":"FirstOrder","language":"java3","card_line":"This is the FirstOrder filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/FirstOrder.html","summary":"<div><span>This is the FirstOrder filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/FirstOrder.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/FirstOrder.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442678000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1749,"object_id":"33bb3526-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"InterquartileRange","algolabel":"InterquartileRange","language":"java3","card_line":"This is the InterquartileRange filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/InterquartileRange.html","summary":"<div><span>This is the InterquartileRange filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/InterquartileRange.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/InterquartileRange.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442668000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1750,"object_id":"3521387a-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"KernelFilter","algolabel":"KernelFilter","language":"java3","card_line":"This is the KernelFilter filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/KernelFilter.html","summary":"<div><span>This is the KernelFilter filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/KernelFilter.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/KernelFilter.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442663000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1751,"object_id":"368b8286-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"MakeIndicator","algolabel":"MakeIndicator","language":"java3","card_line":"This is the MakeIndicator filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/MakeIndicator.html","summary":"<div><span>This is the MakeIndicator filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/MakeIndicator.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/MakeIndicator.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442662000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1752,"object_id":"3832f926-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"MathExpression","algolabel":"MathExpression","language":"java3","card_line":"This is the MathExpression filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/MathExpression.html","summary":"<div><span>This is the MathExpression filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/MathExpression.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/MathExpression.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442662000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1754,"object_id":"3afd2066-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"MultiInstanceToPropositional","algolabel":"MultiInstanceToPropositional","language":"java3","card_line":"This is the MultiInstanceToPropositional filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/MultiInstanceToPropositional.htm...","summary":"<div><span>This is the MultiInstanceToPropositional filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/MultiInstanceToPropositional.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/MultiInstanceToPropositional.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442653000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1755,"object_id":"3c5bcab5-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"NominalToBinary","algolabel":"NominalToBinary","language":"java3","card_line":"This is the NominalToBinary filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/supervised/attribute/NominalToBinary.html","summary":"<div><span>This is the NominalToBinary filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/supervised/attribute/NominalToBinary.html\">http://weka.sourceforge.net/doc.stable/weka/filters/supervised/attribute/NominalToBinary.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442644000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1756,"object_id":"3dbd55cb-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"NominalToString","algolabel":"NominalToString","language":"java3","card_line":"This is the NominalToString filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/NominalToString.html","summary":"<div><span>This is the NominalToString filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/NominalToString.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/NominalToString.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442638000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1757,"object_id":"3f5c4449-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"Normalize","algolabel":"Normalize","language":"java3","card_line":"This is the Normalize filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/Normalize.html","summary":"<div><span>This is the Normalize filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/Normalize.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/Normalize.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442637000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1758,"object_id":"40c4c2c4-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"NumericCleaner","algolabel":"NumericCleaner","language":"java3","card_line":"This is the NumericCleaner filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/NumericCleaner.html","summary":"<div><span>This is the NumericCleaner filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/NumericCleaner.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/NumericCleaner.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442637000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1759,"object_id":"421e2f8d-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"NumericToBinary","algolabel":"NumericToBinary","language":"java3","card_line":"This is the NumericToBinary filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/NumericToBinary.html","summary":"<div><span>This is the NumericToBinary filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/NumericToBinary.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/NumericToBinary.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442636000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1761,"object_id":"44df41f9-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"NumericTransform","algolabel":"NumericTransform","language":"java3","card_line":"This is the NumericTransform filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/NumericTransform.html","summary":"<div><span>This is the NumericTransform filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/NumericTransform.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/NumericTransform.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442621000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1763,"object_id":"47ea5248-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"PartitionedMultiFilter","algolabel":"PartitionedMultiFilter","language":"java3","card_line":"This is the PartitionedMultiFilter filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/PartitionedMultiFilter.html","summary":"<div><span>This is the PartitionedMultiFilter filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/PartitionedMultiFilter.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/PartitionedMultiFilter.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442611000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1764,"object_id":"49518432-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"PKIDiscretize","algolabel":"PKIDiscretize","language":"java3","card_line":"This is the PKIDiscretize filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/PKIDiscretize.html","summary":"<div><span>This is the PKIDiscretize filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/PKIDiscretize.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/PKIDiscretize.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442611000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1765,"object_id":"4ab17e28-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"PotentialClassIgnorer","algolabel":"PotentialClassIgnorer","language":"java3","card_line":"This is the PotentialClassIgnorer filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/PotentialClassIgnorer.html","summary":"<div><span>This is the PotentialClassIgnorer filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/PotentialClassIgnorer.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/PotentialClassIgnorer.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442610000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1767,"object_id":"4db29933-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"PropositionalToMultiInstance","algolabel":"PropositionalToMultiInstance","language":"java3","card_line":"This is the PropositionalToMultiInstance filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/PropositionalToMultiInstance.htm...","summary":"<div><span>This is the PropositionalToMultiInstance filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/PropositionalToMultiInstance.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/PropositionalToMultiInstance.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442598000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1768,"object_id":"4f2acfd6-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"RandomProjection","algolabel":"RandomProjection","language":"java3","card_line":"This is the RandomProjection filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/RandomProjection.html","summary":"<div><span>This is the RandomProjection filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/RandomProjection.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/RandomProjection.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442587000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1769,"object_id":"507f95e3-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"RandomSubset","algolabel":"RandomSubset","language":"java3","card_line":"This is the RandomSubset filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/RandomSubset.html","summary":"<div><span>This is the RandomSubset filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/RandomSubset.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/RandomSubset.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442586000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1770,"object_id":"51dfa3c1-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"RELAGGS","algolabel":"RELAGGS","language":"java3","card_line":"This is the RELAGGS filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/RELAGGS.html","summary":"<div><span>This is the RELAGGS filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/RELAGGS.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/RELAGGS.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442585000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1771,"object_id":"53499fbe-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"Remove","algolabel":"Remove","language":"java3","card_line":"This is the Remove filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/Remove.html","summary":"<div><span>This is the Remove filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/Remove.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/Remove.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442585000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1772,"object_id":"55017f23-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"RemoveType","algolabel":"RemoveType","language":"java3","card_line":"This is the RemoveType filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/RemoveType.html","summary":"<div><span>This is the RemoveType filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/RemoveType.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/RemoveType.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442583000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1773,"object_id":"5661489c-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"RemoveUseless","algolabel":"RemoveUseless","language":"java3","card_line":"This is the RemoveUseless filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/RemoveUseless.html","summary":"<div><span>This is the RemoveUseless filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/RemoveUseless.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/RemoveUseless.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442582000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1774,"object_id":"57c71adc-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"Reorder","algolabel":"Reorder","language":"java3","card_line":"This is the Reorder filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/Reorder.html","summary":"<div><span>This is the Reorder filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/Reorder.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/Reorder.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442361000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1776,"object_id":"5a865fe4-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"Standardize","algolabel":"Standardize","language":"java3","card_line":"This is the Standardize filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/Standardize.html","summary":"<div><span>This is the Standardize filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/Standardize.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/Standardize.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442343000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1777,"object_id":"5c6ae549-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"StringToNominal","algolabel":"StringToNominal","language":"java3","card_line":"This is the StringToNominal filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/StringToNominal.html","summary":"<div><span>This is the StringToNominal filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/StringToNominal.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/StringToNominal.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442342000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1779,"object_id":"5f20c34f-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"SwapValues","algolabel":"SwapValues","language":"java3","card_line":"This is the SwapValues filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/SwapValues.html","summary":"<div><span>This is the SwapValues filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/SwapValues.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/SwapValues.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442340000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1780,"object_id":"607f210e-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"TimeSeriesDelta","algolabel":"TimeSeriesDelta","language":"java3","card_line":"This is the TimeSeriesDelta filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/TimeSeriesDelta.html","summary":"<div><span>This is the TimeSeriesDelta filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/TimeSeriesDelta.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/attribute/TimeSeriesDelta.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442336000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1783,"object_id":"64e75932-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"AddClassification","algolabel":"AddClassification","language":"java3","card_line":"This is the AddClassification filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/supervised/attribute/AddClassification.html","summary":"<div><span>This is the AddClassification filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/supervised/attribute/AddClassification.html\">http://weka.sourceforge.net/doc.stable/weka/filters/supervised/attribute/AddClassification.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442317000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1784,"object_id":"664cbb18-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"AttributeSelection","algolabel":"AttributeSelection","language":"java3","card_line":"This is the AttributeSelection filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/supervised/attribute/AttributeSelection.html","summary":"<div><span>This is the AttributeSelection filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/supervised/attribute/AttributeSelection.html\">http://weka.sourceforge.net/doc.stable/weka/filters/supervised/attribute/AttributeSelection.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442317000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1785,"object_id":"67a7eadc-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"ClassOrder","algolabel":"ClassOrder","language":"java3","card_line":"This is the ClassOrder filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/supervised/attribute/ClassOrder.html","summary":"<div><span>This is the ClassOrder filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/supervised/attribute/ClassOrder.html\">http://weka.sourceforge.net/doc.stable/weka/filters/supervised/attribute/ClassOrder.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442316000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1786,"object_id":"691a04fd-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"Discretize","algolabel":"Discretize","language":"java3","card_line":"This is the Discretize filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/supervised/attribute/Discretize.html","summary":"<div><span>This is the Discretize filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/supervised/attribute/Discretize.html\">http://weka.sourceforge.net/doc.stable/weka/filters/supervised/attribute/Discretize.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442311000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1787,"object_id":"6ac9fa98-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"PLSFilter","algolabel":"PLSFilter","language":"java3","card_line":"This is the PLSFilter filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/supervised/attribute/PLSFilter.html","summary":"<div><span>This is the PLSFilter filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/supervised/attribute/PLSFilter.html\">http://weka.sourceforge.net/doc.stable/weka/filters/supervised/attribute/PLSFilter.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442295000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1788,"object_id":"6c370361-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"Resample","algolabel":"Resample","language":"java3","card_line":"This is the Resample filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/supervised/instance/Resample.html","summary":"<div><span>This is the Resample filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/supervised/instance/Resample.html\">http://weka.sourceforge.net/doc.stable/weka/filters/supervised/instance/Resample.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442294000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1789,"object_id":"6d9ded0a-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"SMOTE","algolabel":"SMOTE","language":"java3","card_line":"This is the SMOTE filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/supervised/instance/SMOTE.html","summary":"<div><span>This is the SMOTE filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/supervised/instance/SMOTE.html\">http://weka.sourceforge.net/doc.stable/weka/filters/supervised/instance/SMOTE.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442293000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1790,"object_id":"6f0da9c8-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"SpreadSubsample","algolabel":"SpreadSubsample","language":"java3","card_line":"This is the SpreadSubsample filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/supervised/instance/SpreadSubsample.html","summary":"<div><span>This is the SpreadSubsample filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/supervised/instance/SpreadSubsample.html\">http://weka.sourceforge.net/doc.stable/weka/filters/supervised/instance/SpreadSubsample.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442292000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1791,"object_id":"706a1ada-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"StratifiedRemoveFolds","algolabel":"StratifiedRemoveFolds","language":"java3","card_line":"This is the StratifiedRemoveFolds filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/supervised/instance/StratifiedRemoveFolds.html","summary":"<div><span>This is the StratifiedRemoveFolds filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/supervised/instance/StratifiedRemoveFolds.html\">http://weka.sourceforge.net/doc.stable/weka/filters/supervised/instance/StratifiedRemoveFolds.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430442291000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1800,"object_id":"7d599c3f-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"ReservoirSample","algolabel":"ReservoirSample","language":"java3","card_line":"This is the ReservoirSample filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/instance/ReservoirSample.html","summary":"<div><span>This is the ReservoirSample filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/instance/ReservoirSample.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/instance/ReservoirSample.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430441800000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1799,"object_id":"7bf86e4e-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"RemoveWithValues","algolabel":"RemoveWithValues","language":"java3","card_line":"This is the RemoveWithValues filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/instance/RemoveWithValues.html","summary":"<div><span>This is the RemoveWithValues filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/instance/RemoveWithValues.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/instance/RemoveWithValues.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430441799000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1798,"object_id":"7a8ed1a2-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"RemoveRange","algolabel":"RemoveRange","language":"java3","card_line":"This is the RemoveRange filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/instance/RemoveRange.html","summary":"<div><span>This is the RemoveRange filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/instance/RemoveRange.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/instance/RemoveRange.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430441798000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1797,"object_id":"792c87e7-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"RemovePercentage","algolabel":"RemovePercentage","language":"java3","card_line":"This is the RemovePercentage filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/instance/RemovePercentage.html","summary":"<div><span>This is the RemovePercentage filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/instance/RemovePercentage.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/instance/RemovePercentage.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430441795000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1796,"object_id":"77821f12-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"RemoveMisclassified","algolabel":"RemoveMisclassified","language":"java3","card_line":"This is the RemoveMisclassified filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/instance/RemoveMisclassified.html","summary":"<div><span>This is the RemoveMisclassified filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/instance/RemoveMisclassified.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/instance/RemoveMisclassified.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430441794000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1795,"object_id":"7623927b-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"RemoveFrequentValues","algolabel":"RemoveFrequentValues","language":"java3","card_line":"This is the RemoveFrequentValues filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/instance/RemoveFrequentValues.html","summary":"<div><span>This is the RemoveFrequentValues filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/instance/RemoveFrequentValues.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/instance/RemoveFrequentValues.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430441792000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":1794,"object_id":"74cbcdf7-6b1b-11e4-bad7-04011d260101","username":"weka","algoname":"RemoveFolds","algolabel":"RemoveFolds","language":"java3","card_line":"This is the RemoveFolds filter, as implemented in Weka: http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/instance/RemoveFolds.html","summary":"<div><span>This is the RemoveFolds filter, as implemented in Weka:</span></div><div><span><br/></span></div><div><a href=\"http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/instance/RemoveFolds.html\">http://weka.sourceforge.net/doc.stable/weka/filters/unsupervised/instance/RemoveFolds.html</a><br/></div><div><span><br/></span></div><div><span>Send your input to the algorithm as a simple Json object, with the following parameters:</span><br/></div><div><br/></div><div><b>dataUrl:</b> The path to the data to be manipulated (this path should point to the Data API)</div><div><b>options:</b> A string that contains any options that you would like to specifically set for this filter (format: param name followed by desired value separated by space: e.g. &#34;-C 5 -t 2&#34;).&#160;<span>For options specific to this filter, please see Weka docs linked above</span></div><div><b>writeUrl:</b> (optional) Default behavior is to overwrite the dataUrl, if you specify this parameter, your filtered data will be written to this url. (<b><i>caution:</i></b><span>&#160;Specify writeUrl if you do not want your data to be overwritten with the filtered data!)</span></div>","submitted_at":1430441789000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":13483,"object_id":"09e3f8ae-de4c-11e4-8df1-12f53eafe9d2","username":"TGRedBaron","algoname":"Dijkstra","algolabel":"Dijkstra","language":"java3","submitted_at":1428537917000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":12685,"object_id":"7157c1e3-d171-11e4-abe1-12f53eafe9d2","username":"jurneo","algoname":"Test1","algolabel":"Test1","language":"java3","submitted_at":1427124751000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":11167,"object_id":"9aa09cd6-cde3-11e4-abe1-12f53eafe9d2","username":"hoseilei","algoname":"mytest","algolabel":"mytest","language":"python2-2","submitted_at":1426733828000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":10309,"object_id":"2fd600f2-cb27-11e4-abe1-12f53eafe9d2","username":"seun_sustio","algoname":"ElGamalDigitalSignature","algolabel":"ElGamal Digital Signature","language":"python2-2","submitted_at":1426434089000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":10059,"object_id":"0e179762-cadd-11e4-abe1-12f53eafe9d2","username":"dirac","algoname":"Sample","algolabel":"Sample","language":"java3","submitted_at":1426401221000,"discoverable_world":true,"source_world":true,"license":"apl","call_count":0},{"algo_id":9733,"object_id":"51b974fb-ca7e-11e4-abe1-12f53eafe9d2","username":"magellanea","algoname":"HelloWorld","algolabel":"Hello-World","language":"java3","submitted_at":1426360479000,"discoverable_world":true,"source_world":true,"license":"mit","call_count":0}]